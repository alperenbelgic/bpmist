{"version":3,"sources":["./src/app/common/Models/Responsible/ResponsibleVisualState.ts","./src/app/services/Auth/auth.guard.ts","./src/app/common/Models/ProcessItems/StepItem.ts","./src/app/common/Models/ProcessItems/Link.ts","./src/app/common/Pipes/custom-date-time.pipe.ts","./src/app/components/left-menu/left-menu.component.html","./src/app/components/left-menu/left-menu.component.ts","./src/app/common/Models/Responsible/User.ts","./src/app/components/process-item-settings-components/field-definition-editor/field-definition-editor.component.html","./src/app/components/process-item-settings-components/field-definition-editor/field-definition-editor.component.ts","./src/app/services/Web/web.service.adress.ts","./src/environments/environment.ts","./src/app/common/Directives/click-stop-propagation.directive.ts","./src/app/components/list-tasks/list-tasks.component.html","./src/app/components/list-tasks/list-tasks.component.ts","./src/app/components/edit-task/edit-task.component.ts","./src/app/components/edit-task/edit-task.component.html","./src/app/common/Models/Responsible/Responsible.ts","./src/app/components/process-item-settings-components/step-form-fields/step-form-fields.component.ts","./src/app/components/process-item-settings-components/step-form-fields/step-form-fields.component.html","./src/app/components/list-processes/list-processes.component.html","./src/app/components/list-processes/list-processes.component.ts","./src/app/components/my-groups-tasks/my-groups-tasks.component.html","./src/app/components/my-groups-tasks/my-groups-tasks.component.ts","./src/app/components/process-item-settings/process-item-settings.component.ts","./src/app/components/process-item-settings/process-item-settings.component.html","./src/app/common/Models/Responsible/ProcessStarterVisualState.ts","./src/app/components/process-item/process-item.component.ts","./src/app/components/process-item/process-item.component.html","./src/app/services/Web/http.service.ts","./src/app/components/process-designer/process-designer.component.ts","./src/app/components/process-designer/process-designer.component.html","./src/app/services/Web/auth-key.interceptor.ts","./src/app/components/task-completed/task-completed.component.html","./src/app/components/task-completed/task-completed.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/common/Models/Field/FieldInStep.ts","./src/app/common/Models/Field/Field.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/common/Models/ProcessItems/Process.ts","./src/app/app.module.ts","./src/app/common/Models/ProcessItems/ProcessItem.ts","./src/app/common/Models/ProcessItems/StepItemVisualState.ts","./src/app/components/fields/generic-field/generic-field.component.html","./src/app/components/fields/generic-field/generic-field.component.ts","./src/app/common/Models/Responsible/Group.ts","./src/app/components/process-item-settings-components/responsible/responsible.component.html","./src/app/components/process-item-settings-components/responsible/responsible.component.ts","./src/app/material-module.ts","./src/app/common/Models/PropertyChangedTypes.ts","./src/app/ui-controls-module.ts","./src/app/common/Models/Responsible/GroupAssignOption.ts","./src/app/services/UI/snack-bar.service.ts","./src/app/components/fields/date-field/date-field.component.html","./src/app/components/fields/date-field/date-field.component.ts","./src/app/common/Models/Responsible/ProcessStarter.ts","./src/app/services/Business/userGroup.service.ts","./src/app/common/Models/ProcessItems/ProcessItemVisualState.ts","./src/app/services/Business/field-type.service.ts","./src/app/common/Models/ProcessItems/ConditionItem.ts","./src/app/services/Auth/auth.service.ts","./src/app/components/fields/text-field/text-field.component.html","./src/app/components/fields/text-field/text-field.component.ts","./src/app/services/Web/web.service.ts","./src/app/app-routing.module.ts","./src/app/components/form/form.component.ts","./src/app/components/form/form.component.html","./src/app/services/Business/general.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Responsible } from './Responsible';\r\nimport { ResponsibleTypeCode } from './ResponsibleType';\r\n\r\nexport class ResponsibleVisualState {\r\n  constructor(private responsible: Responsible) { }\r\n\r\n  get isTypeGroup(): boolean {\r\n    return this.responsible?.responsibleType?.code == this.groupTypeName;\r\n  }\r\n\r\n  get isTypeUser(): boolean {\r\n    return this.responsible?.responsibleType?.code == this.userTypeName;\r\n  }\r\n\r\n  get isTypeGroupList(): boolean {\r\n    return this.responsible?.responsibleType?.code == this.groupListTypeName;\r\n  }\r\n\r\n  get isTypeUserList(): boolean {\r\n    return this.responsible?.responsibleType?.code == this.userListTypeName;\r\n  }\r\n\r\n  get isTypeGroupFromField(): boolean {\r\n    return this.responsible?.responsibleType?.code == this.groupFromFieldTypeName;\r\n  }\r\n\r\n  get isTypeUserFromField(): boolean {\r\n    return this.responsible?.responsibleType?.code == this.userFromFieldTypeName;\r\n  }\r\n\r\n  get isTypeGroupListFromField(): boolean {\r\n    return this.responsible?.responsibleType?.code == this.groupListFromFieldTypeName;\r\n  }\r\n\r\n  get isTypeUserListFromField(): boolean {\r\n    return this.responsible.responsibleType?.code == this.userListFromFieldTypeName;\r\n  }\r\n\r\n  get show_ShowHideAdvancedOptions(): boolean {\r\n    return this.isTypeGroup || this.isTypeUser;\r\n  }\r\n\r\n  get showGroupAssignOptions(): boolean {\r\n\r\n    if (this.isTypeGroup && this.responsible.group != null) {\r\n      return true;\r\n    }\r\n\r\n    if (this.isTypeGroupList && this.responsible.groups.length > 0) {\r\n      return true;\r\n    }\r\n\r\n    if (this.isTypeGroupFromField && this.responsible.groupField != null) {\r\n      return true;\r\n    }\r\n\r\n    if (this.isTypeGroupListFromField && this.responsible.groupFieldList.length > 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n\r\n  }\r\n\r\n  showAdvancedOptions = false;\r\n\r\n  readonly groupTypeName: ResponsibleTypeCode = 'group';\r\n  readonly userTypeName: ResponsibleTypeCode = 'user';\r\n  readonly groupListTypeName: ResponsibleTypeCode = 'groupList';\r\n  readonly userListTypeName: ResponsibleTypeCode = 'userList';\r\n  readonly groupFromFieldTypeName: ResponsibleTypeCode = 'groupFromField';\r\n  readonly userFromFieldTypeName: ResponsibleTypeCode = 'userFromField';\r\n  readonly groupListFromFieldTypeName: ResponsibleTypeCode = 'groupListFromField';\r\n  readonly userListFromFieldTypeName: ResponsibleTypeCode = 'userListFromField';\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router, CanActivateChild } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n  constructor(private router: Router) {\r\n  }\r\n  canActivateChild(\r\n    childRoute: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    return this.canActivate(childRoute, state);\r\n  }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    if (state.url === '/Login'\r\n      || state.url === '/PrivacyPolicy'\r\n      || state.url === '/ForgotPassword'\r\n      || state.url.indexOf('/Register/') === 0\r\n      || state.url.indexOf('/SetupNewPassword/') === 0) {\r\n      // clean auth code\r\n      return true;\r\n    }\r\n\r\n    const userId = localStorage.getItem('temp_user_id');\r\n\r\n    if ([\r\n      '9296A486-5D25-4A40-97BA-F67CB6FBBBCC',\r\n      '208DDB53-FDF0-41C8-A2F1-535E975CED22',\r\n      '83B203D7-2030-4788-BE40-CB153563A979',\r\n      'C06960E7-203F-4265-85BA-A0B59863B82D'\r\n    ].some(i => i === userId)) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/Login']);\r\n\r\n    return false;\r\n  }\r\n\r\n}\r\n","import { ProcessItem } from './ProcessItem';\r\nimport { StepItemVisualState } from './StepItemVisualState';\r\nimport { FieldInStep } from '../Field/FieldInStep';\r\nimport { Responsible } from '../Responsible/Responsible';\r\nimport { ResponsibleType } from '../Responsible/ResponsibleType';\r\nimport { GroupAssignOption } from '../Responsible/GroupAssignOption';\r\n\r\nexport class StepItem extends ProcessItem {\r\n\r\n  responsible: Responsible;\r\n  fieldsInStep: FieldInStep[] = [];\r\n\r\n  public constructor(\r\n    id: string,\r\n    public justCreatedOnInterface: boolean,\r\n    retrievedFromServer: boolean = false,\r\n    stepName: string,\r\n    topPx: number,\r\n    leftPx: number,\r\n    defaultResponsibleType: ResponsibleType,\r\n    defaultGroupAssignOption: GroupAssignOption) {\r\n    super(id, justCreatedOnInterface, retrievedFromServer, topPx, leftPx, stepName);\r\n\r\n    this.responsible = new Responsible(defaultResponsibleType, null, defaultGroupAssignOption);\r\n\r\n    this._visualState = new StepItemVisualState(this);\r\n  }\r\n\r\n  get visualState(): StepItemVisualState {\r\n    return this._visualState;\r\n  }\r\n}\r\n","import { ProcessItem } from './ProcessItem';\r\n\r\nexport class Link {\r\n\r\n  public constructor(init?: Partial<Link>) {\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  actionName = '';\r\n  startItem: ProcessItem;\r\n  endItem: ProcessItem;\r\n\r\n  get color() {\r\n    const x1 = this.startItem.leftPx;\r\n    const x2 = this.endItem.leftPx;\r\n\r\n    return (x2 > x1) ? 'green' : 'indianred';\r\n\r\n    // TODO: returning value should be static. it should be calculated in each relevant change.\r\n\r\n    // return 'green';\r\n\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport type DateTimeType = 'long' | 'date' | 'time';\r\n\r\n@Pipe({\r\n  name: '_dateTime'\r\n})\r\nexport class CustomDateTimePipe implements PipeTransform {\r\n\r\n  transform(date: Date | string, type: DateTimeType = 'long'): string {\r\n\r\n    if (date == null) {\r\n      return '';\r\n    }\r\n\r\n    // later on, if us will be introduced, we can make a check maybe from user's profile or browser\r\n    // and, use en-US for those users.\r\n\r\n    date = new Date(date);  // if orginal type was a string\r\n    return date.toLocaleDateString('en-GB', { year: 'numeric', month: 'short', day: 'numeric' }) + ', ' +\r\n      date.toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit' });\r\n  }\r\n}\r\n\r\n@Pipe({\r\n  name: '_date'\r\n})\r\nexport class CustomDatePipe implements PipeTransform {\r\n\r\n  transform(date: Date | string, type: DateTimeType = 'long'): string {\r\n\r\n    if (date == null) {\r\n      return '';\r\n    }\r\n\r\n    // later on, if us will be introduced, we can make a check maybe from user's profile or browser\r\n    // and, use en-US for those users.\r\n\r\n    date = new Date(date);  // if orginal type was a string\r\n    return date.toLocaleDateString('en-GB', { year: 'numeric', month: 'long', day: 'numeric' });\r\n  }\r\n}\r\n","<div\r\n  class=\"left-menu-wrapper\"\r\n  *ngIf=\"isLoggedIn$ | async as isLoggedIn\"\r\n>\r\n\r\n  <img\r\n    class=\"image\"\r\n    src=\"/assets/images/logo.png\"\r\n  >\r\n\r\n  <a [routerLink]=\"['/']\">\r\n    <div\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"start center\"\r\n    >\r\n      <div class=\"menu-icon\">\r\n        <i class=\"far fa-plus-square\"></i>\r\n\r\n      </div>\r\n      <div class=\"menu-text\">New flow</div>\r\n    </div>\r\n  </a>\r\n\r\n\r\n\r\n\r\n\r\n  <a [routerLink]=\"['/MyInbox']\">\r\n    <div\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"start center\"\r\n    >\r\n      <div class=\"menu-icon\">\r\n        <i class=\"fas fa-tasks\"></i>\r\n\r\n      </div>\r\n      <div class=\"menu-text\">My Tasks</div>\r\n    </div>\r\n  </a>\r\n  <a [routerLink]=\"['/MyGroupsInbox']\">\r\n    <div\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"start center\"\r\n    >\r\n      <div class=\"menu-icon\">\r\n        <i class=\"fas fa-users\"></i>\r\n\r\n      </div>\r\n      <div class=\"menu-text\">Group Tasks</div>\r\n    </div>\r\n  </a>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../services/Auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-left-menu',\r\n  templateUrl: './left-menu.component.html',\r\n  styleUrls: ['./left-menu.component.css']\r\n})\r\nexport class LeftMenuComponent implements OnInit {\r\n\r\n  isLoggedIn$: Observable<boolean>;\r\n\r\n  constructor(authService: AuthService) {\r\n    this.isLoggedIn$ = authService.isLoggedIn;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export class User {\r\n  constructor(public readonly userName: string, public readonly userId: string) {\r\n  }\r\n}\r\n","<form\n  #fieldsForm=\"ngForm\"\n  *ngIf=\"fieldInStep && fieldTypes\"\n  class=\"wrapper\"\n>\n\n  <div fxLayout=\"column\">\n\n    <div>* This field is used in multiple steps and these settings will be shared acrross steps. (show this only if\n      there are multiple editiable uses of this field accross steps)</div>\n    <!-- todo:\nis readonly ve is required'i list'e tasi\nbu sayfadan cikart\nbu sayfayi calistir falan  -->\n    <div class=\"field-edit-title\">\n      Field Editor\n      <i\n        class=\"fas fa-info-circle\"\n        matTooltip=\"Settings for fields of the form. \"\n      ></i>\n    </div>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Field Name</mat-label>\n      <input\n        [(ngModel)]=\"fieldInStep.field.name\"\n        name=\"name-{{fieldInStep.field.id}}\"\n        matInput\n        #input\n      >\n    </mat-form-field>\n\n    <ejs-dropdownlist\n      placeholder=\"Field Type\"\n      name=\"fieldType-{{fieldInStep.field.id}}\"\n      [dataSource]='fieldTypes'\n      [ngModel]=\"fieldInStep?.field?.fieldType?.code\"\n      [fields]=\"{value:'code', text:'name' }\"\n      (change)='fieldInStep.field.fieldType = $event.itemData'\n      cssClass=\"e-outline\"\n      floatLabelType=\"Always\"\n    >\n    </ejs-dropdownlist>\n\n  </div>\n\n  <div\n    fxLayout=\"column\"\n    *ngIf=\"fieldInStep.field.fieldType\"\n  >\n\n    <mat-selection-list\n      [multiple]=\"false\"\n      (selectionChange)=\"fieldInStep.readOnly = $event.option.value\"\n      class=\"detailed-settings-item-wrapper\"\n    >\n      <mat-list-option\n        [value]=\"false\"\n        [selected]=\"!fieldInStep.readOnly\"\n      >\n        Editable\n      </mat-list-option>\n      <mat-list-option\n        [value]=\"true\"\n        [selected]=\"fieldInStep.readOnly\"\n      >\n        Readonly\n      </mat-list-option>\n    </mat-selection-list>\n\n    <mat-selection-list\n      *ngIf=\"!fieldInStep.readOnly\"\n      [multiple]=\"false\"\n      (selectionChange)=\"fieldInStep.isRequired = $event.option.value\"\n      class=\"detailed-settings-item-wrapper\"\n    >\n      <mat-list-option\n        [value]=\"false\"\n        [selected]=\"!fieldInStep.isRequired\"\n      >\n        Can be left empty\n      </mat-list-option>\n\n      <mat-list-option\n        [value]=\"true\"\n        [selected]=\"fieldInStep.isRequired\"\n      >\n        Value required\n      </mat-list-option>\n\n\n    </mat-selection-list>\n\n  </div>\n\n  <ng-container *ngIf=\"fieldInStep.field.fieldType\">\n\n    <div *ngIf=\"fieldInStep.field.fieldType.code == 'numeric'\">\n\n\n      <div\n        fxLayout=\"column\"\n        class=\"detailed-settings-item\"\n      >\n        <mat-checkbox\n          class=\"detailed-settings-item-wrapper\"\n          color=\"primary\"\n          [(ngModel)]=\"fieldInStep.field.numericFieldSettings.hasMinValueRestriction\"\n          name=\"hasMinValueRestriction-{{fieldInStep.field.id}}\"\n        >Set Minimum Value?\n        </mat-checkbox>\n\n        <mat-form-field\n          appearance=\"outline\"\n          *ngIf=\"fieldInStep.field.numericFieldSettings.hasMinValueRestriction\"\n        >\n          <mat-label>Minimum value</mat-label>\n          <input\n            [(ngModel)]=\"fieldInStep.field.numericFieldSettings.minValue\"\n            name=\"minValue-{{fieldInStep.field.id}}\"\n            matInput\n            type=\"number\"\n          >\n        </mat-form-field>\n      </div>\n\n      <div\n        fxLayout=\"column\"\n        class=\"detailed-settings-item\"\n      >\n        <mat-checkbox\n          class=\"detailed-settings-item-wrapper\"\n          color=\"primary\"\n          [(ngModel)]=\"fieldInStep.field.numericFieldSettings.hasMaxValueRestriction\"\n          name=\"hasMaxValueRestriction-{{fieldInStep.field.id}}\"\n        >Set Maximum Value?\n        </mat-checkbox>\n\n        <mat-form-field\n          appearance=\"outline\"\n          *ngIf=\"fieldInStep.field.numericFieldSettings.hasMaxValueRestriction\"\n        >\n          <mat-label>Maximum value</mat-label>\n          <input\n            [(ngModel)]=\"fieldInStep.field.numericFieldSettings.maxValue\"\n            name=\"maxValue-{{fieldInStep.field.id}}\"\n            matInput\n            type=\"number\"\n          >\n        </mat-form-field>\n      </div>\n\n    </div>\n    <div *ngIf=\"fieldInStep.field.fieldType.code === 'text'\">\n      text settings: multiline, max character, min character\n    </div>\n\n    <div\n      class=\"detailed-settings-item-wrapper\"\n      *ngIf=\"fieldInStep.field.fieldType.code === 'user' || fieldInStep.field.fieldType.code === 'group'\"\n    >\n\n      <mat-selection-list\n        [multiple]=\"false\"\n        (selectionChange)=\"fieldInStep.field.generalFieldSettings.multipleValue = $event.option.value\"\n      >\n        <mat-list-option\n          [value]=\"false\"\n          [selected]=\"!fieldInStep.field.generalFieldSettings.multipleValue\"\n        >\n          Single item selection\n        </mat-list-option>\n        <mat-list-option\n          [value]=\"true\"\n          [selected]=\"fieldInStep.field.generalFieldSettings.multipleValue\"\n        >\n          Multiple items selection\n        </mat-list-option>\n      </mat-selection-list>\n\n    </div>\n\n  </ng-container>\n\n</form>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FieldInStep } from 'src/app/common/Models/Field/FieldInStep';\nimport { FieldType } from 'src/app/common/Models/Field/FieldType';\n// import { Input } from '@syncfusion/ej2-angular-inputs/src';\n\n@Component({\n  selector: 'app-field-definition-editor',\n  templateUrl: './field-definition-editor.component.html',\n  styleUrls: ['./field-definition-editor.component.css']\n})\nexport class FieldDefinitionEditorComponent implements OnInit {\n  @Input() fieldInStep: FieldInStep;\n\n  _fieldTypes: FieldType[];\n  @Input() set fieldTypes(value: FieldType[]) {\n    this._fieldTypes = value;\n  }\n  get fieldTypes() {\n    return this._fieldTypes;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  show(fieldInStep: FieldInStep) {\n    this.fieldInStep = fieldInStep;\n  }\n\n  hide() {\n    this.fieldInStep = null;\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebServiceAddress {\r\n  get(): string {\r\n\r\n    if (location.hostname === 'localhost') {\r\n      return 'https://localhost:5001/api';\r\n    } else {\r\n      return '/api';\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]'\r\n})\r\nexport class ClickStopPropagationDirective {\r\n\r\n  constructor() { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  public onClick(event: any): void {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event'])\r\n  public onmMouseDown(event: any): void {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  // @HostListener('mouseup', ['$event'])\r\n  // public onmMouseUp(event: any): void {\r\n  //   event.stopPropagation();\r\n  // }\r\n}\r\n","<div\r\n  fxLayout=\"column\"\r\n  fxLayoutAlign=\"center center\"\r\n>\r\n  <ng-container *ngIf=\"tasks\">\r\n    <div style=\"width: 500px;\">\r\n      <div class=\"my-inbox-label\">My Inbox!</div>\r\n\r\n      <div\r\n        class=\"no-task-message\"\r\n        *ngIf=\"!tasks.UserTaskInstanceList || tasks.UserTaskInstanceList.length == 0\"\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"center center\"\r\n      >\r\n        <div class=\"task-success-icon\"><i class=\"fa fa-check-circle\"></i></div>\r\n        <div>You don't have any assigned task. </div>\r\n      </div>\r\n\r\n\r\n      <div\r\n        *ngFor=\"let task of tasks.UserTaskInstanceList\"\r\n        class=\"task-item\"\r\n        [routerLink]=\"['/EditTask', task.ProcessId, task.ProcessInstanceId, task.TaskInstanceId]\"\r\n      >\r\n\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutAlign=\"space-between center\"\r\n        >\r\n          <div fxLayout=\"column\">\r\n            <div class=\"task-title\">{{task.TaskName}}</div>\r\n            <div class=\"process-title\">in <b>{{task.ProcessName}}</b></div>\r\n          </div>\r\n          <div\r\n            fxLayout=\"column\"\r\n            class=\"due-date-column\"\r\n          >\r\n            <ng-container *ngIf=\"task.DueDate\">\r\n              <ng-container *ngIf=\"task.DaysToDue == 0\">\r\n                <div>due</div>\r\n                <div class=\"due-day-value\"><b>Today</b></div>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"task.DaysToDue > 0\">\r\n                <div>due in</div>\r\n                <div class=\"due-day-value\"><b>{{task.AbsDaysToDue}} days</b></div>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"task.DaysToDue < 0\">\r\n                <div class=\"past-due-date\">overdue</div>\r\n                <div class=\"due-day-value past-due-date\"><b>{{task.AbsDaysToDue}} days</b></div>\r\n              </ng-container>\r\n\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { WebService } from 'src/app/services/Web/web.service';\r\n\r\n@Component({\r\n  selector: 'app-list-tasks',\r\n  templateUrl: './list-tasks.component.html',\r\n  styleUrls: ['./list-tasks.component.css']\r\n})\r\nexport class ListTasksComponent implements OnInit {\r\n\r\n  tasks: any = null;\r\n\r\n  constructor(\r\n    private webService: WebService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.webService.GetUserTaskInstancesQuery().subscribe({\r\n      next: (r: any) => {\r\n        // TODO: handle error\r\n        this.tasks = r.Value;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { WebService, SendUserActionErrorCodes, ServiceResult } from 'src/app/services/Web/web.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormComponent } from '../form/form.component';\r\nimport { SnackBarService } from 'src/app/services/UI/snack-bar.service';\r\n\r\nexport class TaskModel {\r\n  processName = '';\r\n  title = '';\r\n  details = '';\r\n  processId = '';\r\n  processInstanceId = '';\r\n  taskInstanceId = '';\r\n  taskState = '';\r\n  form: any = null;\r\n  set actions(value: any[]) {\r\n    this.primaryActions = value.filter(a => a.ActionType === 'Primary');\r\n    this.secondaryActions = value.filter(a => a.ActionType === 'Secondary');\r\n    this.warnedActions = value.filter(a => a.ActionType === 'Warned');\r\n  }\r\n  assigneeName = '';\r\n  assignmentStates = {\r\n    assignedToCurrentUser: false,\r\n    assignedToGroup: false,\r\n    assignedToAnotherUser: false,\r\n    assignedToCurrentUsersGroup: false\r\n  };\r\n  otherTasks = [];\r\n\r\n  primaryActions: any[];\r\n  warnedActions: any[];\r\n  secondaryActions: any[];\r\n}\r\n\r\nexport class TaskCompletedModel {\r\n  assigneeName = '';\r\n  processId = '';\r\n  processInstanceId = '';\r\n  taskInstanceId = '';\r\n  taskName = '';\r\n  processCompleted = false;\r\n  processCanceled = false;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-task',\r\n  templateUrl: './edit-task.component.html',\r\n  styleUrls: ['./edit-task.component.css']\r\n})\r\nexport class EditTaskComponent implements OnInit {\r\n\r\n  taskModel: TaskModel;\r\n  taskCompletedModel: TaskCompletedModel;\r\n  showCompletedMessage = false;\r\n  otherTasksShown = true;\r\n\r\n  formErrorMessage = '';\r\n\r\n  isFormValid = false;\r\n\r\n  @ViewChild('appForm', { static: false }) formComponent: FormComponent;\r\n\r\n  constructor(\r\n    private webService: WebService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private snackBar: SnackBarService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.activatedRoute.params.subscribe({\r\n      next: (r: any) => {\r\n        const processId = r.processId;\r\n        const processInstanceId = r.processInstanceId;\r\n        const taskInstanceId = r.taskInstanceId;\r\n\r\n        this.initialize(processId, processInstanceId, taskInstanceId);\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  initialize(processId: string, processInstanceId: string, taskInstanceId: string) {\r\n\r\n    this.taskModel = null;\r\n    this.showCompletedMessage = false;\r\n    this.taskCompletedModel = null;\r\n\r\n    if (processId != null && processInstanceId == null && taskInstanceId == null) {\r\n\r\n      this.StartNewProcesses(processId);\r\n\r\n    } else if (processId != null && processInstanceId != null && taskInstanceId != null) {\r\n      // Analysis:\r\n      // load task\r\n      // possible responses & rendering types:\r\n      //  completed?\r\n      //  assinged to current user?\r\n      //  assigned to someone else, but also related to one of the current user's groups ?\r\n      //  assigned to a group that user can start working?\r\n      //  assigned to a group or user and current user has no chance to work\r\n      //  assigned to someone else but current user is god mode user.\r\n      //    - can assign to someone else (of course including to themselves)\r\n      //    - can change field values (of course will be logged)\r\n      //    - can cancel completely\r\n      //    - what else?\r\n\r\n      this.webService.GetTaskInstanceQuery(processId, processInstanceId, taskInstanceId).subscribe({\r\n        next: (r: any) => {\r\n          this.taskModel = new TaskModel();\r\n\r\n          this.taskModel.processName = r.Value.ProcessName;\r\n          this.taskModel.title = r.Value.TaskName;\r\n          this.taskModel.processId = processId;\r\n          this.taskModel.processInstanceId = processInstanceId;\r\n          this.taskModel.taskInstanceId = taskInstanceId;\r\n          this.taskModel.taskState = r.Value.TaskState;\r\n          this.taskModel.form = r.Value.Form;\r\n          this.taskModel.actions = r.Value.Actions;\r\n          this.taskModel.assigneeName = r.Value.AssigneeName;\r\n          this.taskModel.assignmentStates.assignedToAnotherUser = r.Value.UserTaskState.AssignedToAnotherUser;\r\n          this.taskModel.assignmentStates.assignedToCurrentUser = r.Value.UserTaskState.CanEdit;\r\n          this.taskModel.assignmentStates.assignedToCurrentUsersGroup = r.Value.UserTaskState.AssignedToCurrentUsersGroup;\r\n          this.taskModel.assignmentStates.assignedToGroup = r.Value.UserTaskState.AssignedToGroup;\r\n          this.taskModel.otherTasks = r.Value.OtherTasks;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  StartNewProcesses(processId: string) {\r\n    this.webService.StartNewProcessCommand(processId).subscribe({\r\n      next: (r: any) => {\r\n        // EditTask/:processId/:processInstanceId/:taskInstanceId\r\n        //this.router.navigate(['EditTask', processId, r.Value.ProcessInstanceId, r.Value.TaskInstanceId]);\r\n        this.initialize(processId, r.Value.ProcessInstanceId, r.Value.TaskInstanceId);\r\n        return;\r\n\r\n        // this.taskModel = new TaskModel();\r\n        // this.taskModel.processName = r.Value.ProcessName;\r\n        // this.taskModel.title = r.Value.TaskName;\r\n        // this.taskModel.processId = processId;\r\n        // this.taskModel.processInstanceId = r.Value.ProcessInstanceId;\r\n        // this.taskModel.taskInstanceId = r.Value.TaskInstanceId;\r\n        // this.taskModel.form = r.Value.Form;\r\n        // this.taskModel.actions = r.Value.Actions;\r\n        // this.taskModel.assignmentStates.assignedToAnotherUser = false;\r\n        // this.taskModel.assignmentStates.assignedToCurrentUser = true;\r\n        // this.taskModel.assignmentStates.assignedToCurrentUsersGroup = false;\r\n        // this.taskModel.assignmentStates.assignedToGroup = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  submit(actionId: string) {\r\n\r\n    const returningForm = this.formComponent.getReturningForm();\r\n\r\n    this.webService.SendUserActionCommand(\r\n      this.taskModel.processId,\r\n      this.taskModel.processInstanceId,\r\n      this.taskModel.taskInstanceId,\r\n      actionId,\r\n      'some notes of course',\r\n      returningForm.DateValues,\r\n      returningForm.TextValues)\r\n      .subscribe({\r\n        next: (r: ServiceResult<any>) => {\r\n\r\n          this.formErrorMessage = '';\r\n          if (false === r.Successful) {\r\n            const invalidFormValuesError = r.OperationErrors.find(e => e.ErrorCode === SendUserActionErrorCodes.InvalidFormValues);\r\n            if (invalidFormValuesError != null) {\r\n              // show error message\r\n              console.log('error', invalidFormValuesError.ErrorMessage);\r\n              this.formErrorMessage = invalidFormValuesError.ErrorMessage;\r\n              return;\r\n            }\r\n          }\r\n\r\n          if (actionId === 'save') {\r\n            this.snackBar.open('Form values are saved.');\r\n            return;\r\n          }\r\n\r\n          console.log('action trigger result', r);\r\n          this.showCompletedMessage = true;\r\n\r\n          const taskCompletedModel = new TaskCompletedModel();\r\n          taskCompletedModel.assigneeName = r.Value.AssignedName;\r\n          taskCompletedModel.processId = this.taskModel.processId;\r\n          taskCompletedModel.processInstanceId = this.taskModel.processInstanceId;\r\n          taskCompletedModel.taskInstanceId = r.Value.NewTaskInstanceId;\r\n          taskCompletedModel.taskName = r.Value.NewTaskName;\r\n          taskCompletedModel.processCompleted = r.Value.HasProcessCompleted;\r\n          taskCompletedModel.processCanceled = r.Value.HasProcessCanceled;\r\n\r\n          this.taskCompletedModel = taskCompletedModel;\r\n\r\n          // bu submit sonrasi gosterilen ekran\r\n          // aslinda tum sureclerin listelendigi detay ekranina\r\n          // sadece completed mesajinin eklendigi sey olabilir.\r\n          // bu taskin actigi ve paralel de ilerleyen tasklarin\r\n          // ayrimini yapmaya da gerek olmayabilir.\r\n\r\n          // congrats! you completed your task!\r\n          //  upon your task,\r\n          //    this task is assigned to this person (or you) - or this group (and\r\n          //      if aplicable - you can work on that since you are on that group)\r\n          //    or\r\n          //    these tasks are assigned\r\n          //    and (if exists in other parallel branches)\r\n          //    these are other ongoing tasks in this process\r\n          //    or - this process now completed.\r\n        }\r\n      });\r\n  }\r\n\r\n  pullTask() {\r\n    this.webService.PullTaskFromGroupCommand(\r\n      this.taskModel.processId,\r\n      this.taskModel.processInstanceId,\r\n      this.taskModel.taskInstanceId)\r\n      .subscribe({\r\n        next: (r: any) => {\r\n          this.initialize(\r\n            this.taskModel.processId,\r\n            this.taskModel.processInstanceId,\r\n            this.taskModel.taskInstanceId);\r\n        }\r\n      });\r\n  }\r\n\r\n  showAllOtherTasks() {\r\n    this.otherTasksShown = !this.otherTasksShown;\r\n  }\r\n\r\n  updateFormValidity(isFormValid: boolean) {\r\n    this.isFormValid = isFormValid;\r\n  }\r\n}\r\n","<div\r\n  class=\"edit-task-wrapper\"\r\n  fxLayout=\"column\"\r\n  fxLayoutAlign=\"center center\"\r\n>\r\n  <div\r\n    *ngIf=\"taskModel && !showCompletedMessage\"\r\n    class=\"edit-task-content\"\r\n  >\r\n    <div class=\"process-title-header\">\r\n      process\r\n      <i class=\"fa fa-info-circle\"></i></div>\r\n    <div class=\"process-title\">{{taskModel.processName}}&nbsp;</div>\r\n    <div class=\"task-title-header\">\r\n      <div *ngIf=\"taskModel.assignmentStates.assignedToCurrentUser\">\r\n        your task<i class=\"fa fa-info-circle\"></i>\r\n      </div>\r\n      <div *ngIf=\"taskModel.assignmentStates.assignedToGroup\">\r\n        {{taskModel.assigneeName}} will work on\r\n      </div>\r\n      <div *ngIf=\"taskModel.assignmentStates.assignedToAnotherUser\">\r\n        {{taskModel.assigneeName}} is working on\r\n      </div>\r\n      <div *ngIf=\"taskModel.taskState == 'Completed' || taskModel.taskState == 'Canceled'\">\r\n        task\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"task-title\">{{taskModel.title}}</div>\r\n    <div\r\n      *ngIf=\"taskModel.taskState == 'Canceled'\"\r\n      class=\"centered-text\"\r\n    >\r\n      Cancelled by <b>{{taskModel.assigneeName}}</b>\r\n    </div>\r\n    <div\r\n      *ngIf=\"taskModel.taskState == 'Completed'\"\r\n      class=\"centered-text\"\r\n    >\r\n      Completed by <b>{{taskModel.assigneeName}}</b>\r\n    </div>\r\n    <div\r\n      class=\"centered-text\"\r\n      *ngIf=\"taskModel.assignmentStates.assignedToCurrentUsersGroup\"\r\n    >\r\n      You are in {{taskModel.assigneeName}} group.\r\n      <button\r\n        mat-button\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        (click)=\"pullTask()\"\r\n      >\r\n        Work on this?\r\n      </button>\r\n    </div>\r\n\r\n\r\n    <div>\r\n      <app-form\r\n        #appForm\r\n        [form]=\"taskModel.form\"\r\n        (formValid)=\"updateFormValidity($event)\"\r\n      ></app-form>\r\n    </div>\r\n    <div class=\"form-error-message\">{{formErrorMessage}}</div>\r\n    <div\r\n      class=\"actions-wrapper\"\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"space-between center\"\r\n    >\r\n      <div\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"start center\"\r\n      >\r\n        <button\r\n          *ngFor=\"let action of taskModel.secondaryActions\"\r\n          (click)=\"submit(action.ActionId)\"\r\n          fxLayoutAlign=\"start center\"\r\n          mat-button\r\n          mat-raised-button\r\n          [disabled]=\"!taskModel.assignmentStates.assignedToCurrentUser\"\r\n          style=\"margin-right:10px\"\r\n        >\r\n          {{action.ActionText}}\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"end center\"\r\n      >\r\n        <button\r\n          *ngFor=\"let action of taskModel.warnedActions\"\r\n          (click)=\"submit(action.ActionId)\"\r\n          fxLayoutAlign=\"start center\"\r\n          mat-button\r\n          mat-raised-button\r\n          color=\"warn\"\r\n          [disabled]=\"!taskModel.assignmentStates.assignedToCurrentUser\"\r\n          style=\"margin-left:10px\"\r\n        >\r\n          {{action.ActionText}}\r\n        </button>\r\n\r\n        <button\r\n          *ngFor=\"let action of taskModel.primaryActions\"\r\n          (click)=\"submit(action.ActionId)\"\r\n          fxLayoutAlign=\"start center\"\r\n          mat-button\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          [disabled]=\"!taskModel.assignmentStates.assignedToCurrentUser || !isFormValid \"\r\n          style=\"margin-left:10px\"\r\n        >\r\n          {{action.ActionText}}\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"taskModel.otherTasks.length > 1\">\r\n      <div class=\"task-history\">\r\n        <div\r\n          style=\"text-align: center;    text-decoration: underline; cursor:pointer;\"\r\n          (click)=\"showAllOtherTasks()\"\r\n        >\r\n          <ng-container *ngIf=\"!otherTasksShown\">Show all other tasks</ng-container>\r\n          <ng-container *ngIf=\"otherTasksShown\">Hide other tasks</ng-container>\r\n\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"otherTasksShown\">\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n            style=\"margin-top:20px;\"\r\n            *ngFor=\"let otherTask of taskModel.otherTasks\"\r\n            [ngStyle]=\"{'font-style': (otherTask.TaskInstanceId == taskModel.taskInstanceId) ? 'italic' : 'normal'}\"\r\n          >\r\n            <div>\r\n              <div style=\"font-size: 24px; font-weight: bold;;\">\r\n                {{otherTask.TaskName}}\r\n              </div>\r\n            </div>\r\n            <div\r\n              fxLayout=\"column\"\r\n              style=\"text-align: right;\"\r\n            >\r\n              <div>\r\n                <ng-container *ngIf=\"otherTask.TaskState == 'Completed'\">Completed by</ng-container>\r\n                <ng-container *ngIf=\"otherTask.TaskState == 'Canceled'\">Cancelled by</ng-container>\r\n                <ng-container *ngIf=\"otherTask.TaskState == 'Active'\">In progress</ng-container>\r\n                <ng-container *ngIf=\"otherTask.TaskState == 'Waiting'\">Will be handled by</ng-container>\r\n              </div>\r\n              <div style=\"font-size: 18px; font-weight: bold;\">\r\n                {{otherTask.AssingedName}}\r\n              </div>\r\n              <div style=\"font-size: 12px;\">\r\n                {{otherTask.CompletedTime | _dateTime}}\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n\r\n    </ng-container>\r\n\r\n\r\n\r\n\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"showCompletedMessage\"\r\n    style=\"width: 500px;\"\r\n  >\r\n    <app-task-completed [taskCompletedModel]=\"taskCompletedModel\"></app-task-completed>\r\n  </div>\r\n\r\n</div>\r\n","import { Group } from './Group';\r\nimport { ResponsibleVisualState } from './ResponsibleVisualState';\r\nimport { User } from './User';\r\nimport { GroupAssignOption } from './GroupAssignOption';\r\nimport { Field } from '../Field/Field';\r\nimport { ResponsibleType } from './ResponsibleType';\r\n\r\nexport class Responsible {\r\n  constructor(\r\n    public responsibleType: ResponsibleType,\r\n    public group: Group = null,\r\n    public groupAssignOption: GroupAssignOption = null,\r\n    public user: User = null,\r\n    public groups: Group[] = [],\r\n    public users: User[] = [],\r\n    public groupField: Field = null,\r\n    public userField: Field = null,\r\n    public groupFieldList: Field[] = [],\r\n    public userFieldList: Field[] = [],\r\n  ) {\r\n\r\n    this.visualState = new ResponsibleVisualState(this);\r\n  }\r\n\r\n  visualState: ResponsibleVisualState;\r\n}\r\n\r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChildren, QueryList, ElementRef } from '@angular/core';\nimport { FieldInStep } from 'src/app/common/Models/Field/FieldInStep';\nimport { FieldType } from 'src/app/common/Models/Field/FieldType';\nimport { FieldTypeService } from 'src/app/services/Business/field-type.service';\nimport { ProcessItem } from 'src/app/common/Models/ProcessItems/ProcessItem';\nimport { Process } from 'src/app/common/Models/ProcessItems/Process';\nimport { StepItem } from 'src/app/common/Models/ProcessItems/StepItem';\n\n//type FieldViewMode = 'listFields' | 'fieldEdit' | 'addExisting';\n\n\n@Component({\n  selector: 'app-step-form-fields',\n  templateUrl: './step-form-fields.component.html',\n  styleUrls: ['./step-form-fields.component.css']\n})\nexport class StepFormFieldsComponent implements OnInit {\n\n  @ViewChildren('formFields') formFieldsViewChildren: QueryList<ElementRef>;\n\n  editingField: FieldInStep;\n\n  // loaded lists\n  @Input() fieldTypes: FieldType[] = [];\n\n  _processItem: ProcessItem;\n\n  @Input() process: Process;\n\n  @Output() currentFieldChanged = new EventEmitter<FieldInStep>();\n\n  isStepFormDesignerVisible = false;\n\n  _currentFieldInStep: FieldInStep;\n  get currentFieldInStep() {\n    return this._currentFieldInStep;\n  }\n  set currentFieldInStep(val: FieldInStep) {\n    this._currentFieldInStep = val;\n    this.currentFieldChanged.emit(val);\n  }\n\n  get stepItem(): StepItem {\n    return this.processItem as StepItem;\n  }\n\n  constructor(\n  ) { }\n\n  async ngOnInit() {\n  }\n\n  get processItem(): ProcessItem {\n    return this._processItem;\n  }\n\n  @Input() set processItem(value: ProcessItem) {\n\n    if (this._processItem === value) {\n      return;\n    }\n\n    this._processItem = value;\n  }\n\n\n  get renderingFieldsInStep(): FieldInStep[] {\n    return this.stepItem.fieldsInStep.filter((value, index, arr) => !value.deleted);\n  }\n\n  openFieldEditViewForNewField() {\n\n    const addNewFieldResult = this.process.addNewField(this.stepItem);\n\n    this.currentFieldInStep = addNewFieldResult.createdFieldInStep;\n\n    setTimeout(() => {\n      this.formFieldsViewChildren?.last?.nativeElement?.scrollIntoView({ behavior: 'smooth' });\n    }, 50);\n  }\n\n  removeFieldInStep(fieldInStep: FieldInStep) {\n    this.currentFieldInStep = null;\n    fieldInStep.deleted = true;\n  }\n\n  openFieldEditViewForExistingField(fieldInStep: FieldInStep) {\n    if (this.currentFieldInStep == fieldInStep) {\n      this.currentFieldInStep = null;\n    }\n    else {\n      this.currentFieldInStep = fieldInStep;\n    }\n\n  }\n\n  openAddExistingFieldView() {\n\n  }\n\n  openListFields() {\n    this.currentFieldInStep = null;\n  }\n\n  swapStepFormDesignerVisible() {\n    this.isStepFormDesignerVisible = !this.isStepFormDesignerVisible;\n  }\n\n  resetViewMode() {\n    this.currentFieldInStep = null;\n  }\n\n  fieldInStepReadOnlyChanged() {\n    if (this.currentFieldInStep?.readOnly) {\n      this.currentFieldInStep = null;\n    }\n  }\n\n}\n","<div class=\"fields-settings\">\n\n\n\n  <div class=\"form-setting-mode\">\n\n    <div class=\"field-edit-title\">\n      Fields in this Step <i\n        class=\"fas fa-info-circle\"\n        matTooltip=\"Fields that are shown to the editor of this step.\"\n      ></i>\n    </div>\n\n    <div\n      class=\"form-designer-empty-content\"\n      *ngIf=\"renderingFieldsInStep.length == 0\"\n    >\n      This step doesn't contain any field.\n    </div>\n    <div class=\"field-list-wrapper\">\n      <div\n        class=\"field-form\"\n        fxLayout=\"row\"\n        *ngFor=\"let fieldInStep of renderingFieldsInStep; let i=index\"\n        #formFields\n      >\n\n        <div class=\"field-number\">\n          <div>{{i+1}}</div>\n        </div>\n\n        <div\n          class=\"field-name-in-list\"\n          fxLayout=\"column\"\n        >\n          <span class=\"field-name-span\">{{fieldInStep.field.name}}</span>\n          <span class=\"field-type\">{{fieldInStep.field.fieldType?.name}}</span>\n        </div>\n\n        <div>\n          <mat-button-toggle-group\n            *ngIf=\"fieldInStep.editableFieldUsedInAnotherStep\"\n            [(ngModel)]=\"fieldInStep.readOnly\"\n            [vertical]=\"true\"\n            (change)=\"fieldInStepReadOnlyChanged()\"\n          >\n            <mat-button-toggle [value]=\"false\">Editable</mat-button-toggle>\n            <mat-button-toggle [value]=\"true\">Read Only</mat-button-toggle>\n          </mat-button-toggle-group>\n          <div *ngIf=\"!fieldInStep.editableFieldUsedInAnotherStep\">\n            read only toggle removed\n          </div>\n        </div>\n\n        <div fxLayout=\"row\">\n\n          <button\n            mat-button\n            class=\"setting-button\"\n            (click)=\"removeFieldInStep(fieldInStep)\"\n          >\n            <i class=\"fas fa-trash-alt\"></i>\n          </button>\n\n          <button\n            mat-button\n            class=\"setting-button\"\n            (click)=\"openFieldEditViewForExistingField(fieldInStep)\"\n            [disabled]=\"fieldInStep.readOnly && fieldInStep != currentFieldInStep\"\n          >\n            <i\n              matBadge=\"!\"\n              matBadgeColor=\"warn\"\n              matBadgePosition=\"before\"\n              class=\"fas fa-pencil-alt\"\n              [ngClass]=\"{\n              'field-selected': fieldInStep == currentFieldInStep,\n              'field-selection-disabled': fieldInStep != currentFieldInStep && fieldInStep.readOnly}\"\n            ></i>\n          </button>\n\n        </div>\n\n      </div>\n    </div>\n    <div\n      class=\"new-field-wrapper\"\n      fxLayout=\"column\"\n    >\n      <button\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"openFieldEditViewForNewField()\"\n      >\n        <i class=\"fas fa-plus\"></i> Create a New Field\n      </button>\n      <button\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"openAddExistingFieldView()\"\n      >\n        <i class=\"fas fa-plus\"></i> Use an Existing Field <i\n          class=\"fas fa-info-circle\"\n          matTooltip=\"Include a field you created in another step.\"\n        ></i>\n      </button>\n    </div>\n\n  </div>\n\n</div>\n","<div\r\n  fxLayout=\"column\"\r\n  fxLayoutAlign=\"center center\"\r\n>\r\n\r\n  <div style=\"width: 500px;\">\r\n\r\n    <div class=\"title\">Start a new process</div>\r\n    <div\r\n      class=\"process-box\"\r\n      *ngFor=\"let process of processes\"\r\n    >\r\n      <a\r\n        class=\"process-link\"\r\n        [routerLink]=\"['/NewProcess/' + process.ProcessId]\"\r\n      >\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutAlign=\"start center\"\r\n          class=\"process-name-wrapper\"\r\n        >\r\n          <div\r\n            class=\"process-icon\"\r\n            fxLayoutAlign=\"center center\"\r\n            [style.background-color]=\"process.Visuals.IconColor\"\r\n          >\r\n            <div> {{process.Visuals.Initials}}</div>\r\n          </div>\r\n          <div class=\"process-name\">\r\n            Start <b>{{process.ProcessName}}</b>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </a>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { WebService } from 'src/app/services/Web/web.service';\r\nimport { Observable, Subscribable, Unsubscribable, BehaviorSubject } from 'rxjs';\r\nimport { FormControlName } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-list-processes',\r\n  templateUrl: './list-processes.component.html',\r\n  styleUrls: ['./list-processes.component.css']\r\n})\r\nexport class ListProcessesComponent implements OnInit {\r\n\r\n  processes: any[];\r\n\r\n  constructor(\r\n    private webService: WebService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.webService.GetProcessesQuery().subscribe(r => {\r\n      console.log(r);\r\n      this.processes = r.Value.Processes;\r\n    });\r\n  }\r\n}\r\n\r\n\r\n","<div\r\n  fxLayout=\"column\"\r\n  fxLayoutAlign=\"center center\"\r\n>\r\n  <ng-container *ngIf=\"groupsTasks\">\r\n    <div style=\"width: 500px;\">\r\n      <div class=\"my-inbox-label\">My Groups' Inbox</div>\r\n      <div\r\n        class=\"no-task-message\"\r\n        *ngIf=\"!groupsTasks || groupsTasks.length == 0\"\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"center center\"\r\n      >\r\n        <div class=\"task-success-icon\"><i class=\"fa fa-check-circle\"></i></div>\r\n        <div>You don't have any assigned task. </div>\r\n      </div>\r\n      <div *ngFor=\"let groupTasks of groupsTasks\">\r\n\r\n        <div\r\n          *ngFor=\"let task of groupTasks.TaskInstanceList\"\r\n          class=\"task-item\"\r\n          [routerLink]=\"['/EditTask', task.ProcessId, task.ProcessInstanceId, task.TaskInstanceId]\"\r\n        >\r\n\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n          >\r\n            <div fxLayout=\"column\">\r\n              <div class=\"task-title\">{{task.TaskName}} - <span class=\"group-name\">{{groupTasks.GroupName}} <span\r\n                    class=\"group-name-group-label\"\r\n                  >group</span></span></div>\r\n              <div class=\"process-title\">in <b>{{task.ProcessName}}</b></div>\r\n            </div>\r\n            <div\r\n              fxLayout=\"column\"\r\n              class=\"due-date-column\"\r\n            >\r\n              <ng-container *ngIf=\"task.DueDate\">\r\n                <ng-container *ngIf=\"task.DaysToDue == 0\">\r\n                  <div>due</div>\r\n                  <div class=\"due-day-value\"><b>Today</b></div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"task.DaysToDue > 0\">\r\n                  <div>due in</div>\r\n                  <div class=\"due-day-value\"><b>{{task.AbsDaysToDue}} days</b></div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"task.DaysToDue < 0\">\r\n                  <div class=\"past-due-date\">overdue</div>\r\n                  <div class=\"due-day-value past-due-date\"><b>{{task.AbsDaysToDue}} days</b></div>\r\n                </ng-container>\r\n\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { WebService } from 'src/app/services/Web/web.service';\r\n\r\n@Component({\r\n  selector: 'app-my-groups-tasks',\r\n  templateUrl: './my-groups-tasks.component.html',\r\n  styleUrls: ['./my-groups-tasks.component.css']\r\n})\r\nexport class MyGroupsTasksComponent implements OnInit {\r\n\r\n  groupsTasks: any;\r\n\r\n  constructor(\r\n    private webService: WebService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.webService.GetUserTaskInstancesQuery().subscribe({\r\n      next: (r: any) => {\r\n        // TODO: handle error\r\n        this.groupsTasks = r.Value.GroupsTaskInstanceList;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, OnDestroy, ViewChild } from '@angular/core';\r\nimport { FieldTypeService } from '../../services/Business/field-type.service';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\nimport { RandomIdGenerator } from '../../services/Business/general.service';\r\nimport { StepItem } from '../../common/Models/ProcessItems/StepItem';\r\nimport { ProcessItem } from '../../common/Models/ProcessItems/ProcessItem';\r\nimport { FieldInStep } from '../../common/Models/Field/FieldInStep';\r\nimport { FieldType } from '../../common/Models/Field/FieldType';\r\nimport { Field } from '../../common/Models/Field/Field';\r\nimport { UserGroupService } from '../../services/Business/userGroup.service';\r\nimport { Group } from '../../common/Models/Responsible/Group';\r\nimport { User } from '../../common/Models/Responsible/User';\r\nimport { GroupAssignOption } from '../../common/Models/Responsible/GroupAssignOption';\r\nimport { Process } from '../../common/Models/ProcessItems/Process';\r\nimport { ResponsibleType } from '../../common/Models/Responsible/ResponsibleType';\r\nimport { SelectionSettingsModel } from '@syncfusion/ej2-dropdowns';\r\n\r\nimport { ListBoxComponent, CheckBoxSelection, MultiSelectModule } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { Subscription } from 'rxjs';\r\nimport { StepFormFieldsComponent } from '../process-item-settings-components/step-form-fields/step-form-fields.component';\r\nimport { FieldDefinitionEditorComponent } from '../process-item-settings-components/field-definition-editor/field-definition-editor.component';\r\nListBoxComponent.Inject(CheckBoxSelection);\r\n\r\n@Component({\r\n  selector: 'app-process-item-settings',\r\n  templateUrl: './process-item-settings.component.html',\r\n  styleUrls: ['./process-item-settings.component.css']\r\n})\r\nexport class ProcessItemSettingsComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  @ViewChild('stepFormFields') stepFormFieldsComponent: StepFormFieldsComponent;\r\n  @ViewChild('fieldDefinitionEditor') fieldDefinitionEditor: FieldDefinitionEditorComponent;\r\n\r\n  public visible = false;\r\n\r\n  @Input() process: Process;\r\n\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  _processItem: ProcessItem;\r\n\r\n\r\n  get processItems(): ProcessItem[] {\r\n    return this.process.processItems.value.array;\r\n  }\r\n\r\n  get processItem(): ProcessItem {\r\n    return this._processItem;\r\n  }\r\n\r\n  set processItem(value: ProcessItem) {\r\n\r\n    if (this._processItem === value) {\r\n      return;\r\n    }\r\n\r\n    this._processItem = value;\r\n  }\r\n\r\n  //#region step item\r\n\r\n  get stepItem(): StepItem {\r\n    return this.processItem as StepItem;\r\n  }\r\n\r\n\r\n  //#endregion\r\n\r\n  fieldTypes: FieldType[] = [];\r\n\r\n  constructor(\r\n    private fieldTypeService: FieldTypeService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fieldTypeService.getFieldTypes().then(v => { this.fieldTypes = v; });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n  }\r\n\r\n  unsubscribe() {\r\n  }\r\n\r\n  async open(processItem: ProcessItem) {\r\n    this.processItem = processItem;\r\n    this.visible = true;\r\n  }\r\n\r\n  async close() {\r\n    this.visible = false;\r\n    this.processItem = null;\r\n  }\r\n\r\n  //#region field - step item functions\r\n\r\n\r\n  onProcessItemChange() {\r\n    this.stepFormFieldsComponent.resetViewMode();\r\n  }\r\n\r\n  onStepItemSettingsTabChanged($event) {\r\n    this.stepFormFieldsComponent.resetViewMode();\r\n  }\r\n\r\n  //#endregion\r\n\r\n  search<T>(array: T[], selectorFunc: (obj: T) => string, filter: string): T[] {\r\n    if (filter === '' || filter == null) {\r\n      return array;\r\n    }\r\n    return array.filter(i => selectorFunc(i).toLowerCase().indexOf(filter.toLowerCase()) > -1);\r\n  }\r\n  currentFieldChanged(fieldInStep: FieldInStep) {\r\n    this.fieldDefinitionEditor.show(fieldInStep);\r\n  }\r\n}\r\n","<div\r\n  *ngIf=\"visible && process != null && processItem != null\"\r\n  class=\"settings-modal\"\r\n>\r\n\r\n  <div class=\"main-container\">\r\n\r\n    <div class=\"left-part\">\r\n      <span>left part</span>\r\n    </div>\r\n\r\n    <div class=\"form-wrapper\">\r\n      <div\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"end none\"\r\n      >\r\n        <i\r\n          (click)=\"close()\"\r\n          class=\"fas fa-times close-button clickable\"\r\n        ></i>\r\n      </div>\r\n      <div>\r\n\r\n        <ejs-dropdownlist\r\n          [dataSource]='processItems'\r\n          [fields]=\"{ value:'id' }\"\r\n          (change)='processItem = $event.itemData; onProcessItemChange();'\r\n          [ngModel]=\"processItem?.id\"\r\n          name=\"processItemPicker\"\r\n          cssClass=\"e-outline\"\r\n        >\r\n          <ng-template\r\n            #itemTemplate\r\n            let-data\r\n          >\r\n            <div *ngIf=\"data\">\r\n              <span *ngIf=\"$any(data).constructor.name== 'StepItem'\">\r\n                Step:\r\n              </span>\r\n              <span *ngIf=\"$any(data).constructor.name== 'ConditionItem'\">\r\n                Condition:\r\n              </span>\r\n              <span>{{data.text}}</span>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template\r\n            #valueTemplate\r\n            let-data\r\n          >\r\n            <div\r\n              fxLayoutAlign=\"center center\"\r\n              style=\"font-weight: bold; font-size: 18px; height: 50px;\"\r\n            >\r\n              <span *ngIf=\"$any(data).constructor.name== 'StepItem'\">\r\n                Step:\r\n              </span>\r\n              <span *ngIf=\"$any(data).constructor.name== 'ConditionItem'\">\r\n                Condition:\r\n              </span>\r\n              <span>{{data.text}}</span>\r\n            </div>\r\n          </ng-template>\r\n\r\n        </ejs-dropdownlist>\r\n\r\n\r\n\r\n      </div>\r\n\r\n      <div [ngSwitch]=\"$any(processItem).constructor.name\">\r\n\r\n        <ng-container *ngSwitchCase=\" 'StepItem'\">\r\n\r\n          <mat-tab-group\r\n            class=\"step-settings-tab\"\r\n            (selectedTabChange)=\"onStepItemSettingsTabChanged($event)\"\r\n          >\r\n\r\n            <mat-tab label=\"Responsible\">\r\n\r\n\r\n              <app-responsible\r\n                [process]=\"process\"\r\n                [processItem]=\"processItem\"\r\n              ></app-responsible>\r\n\r\n            </mat-tab>\r\n\r\n            <mat-tab label=\"Form\">\r\n              <ng-template mat-tab-label>\r\n                Form\r\n              </ng-template>\r\n              <app-step-form-fields\r\n                #stepFormFields\r\n                [process]=\"process\"\r\n                [processItem]=\"processItem\"\r\n                [fieldTypes]=\"fieldTypes\"\r\n                (currentFieldChanged)=\"currentFieldChanged($event)\"\r\n              ></app-step-form-fields>\r\n            </mat-tab>\r\n            <mat-tab label=\"Actions\">\r\n              <p>this action goes to this step</p>\r\n              <p>this action ends the process</p>\r\n              <p>python script to arrange data</p>\r\n              <p>web service call</p>\r\n              <p>(for future)-> save/update data to database</p>\r\n            </mat-tab>\r\n\r\n            <mat-tab label=\"Notifications\"> Notification will be configured here. </mat-tab>\r\n            <mat-tab label=\"Docs\"> Documents will be edited here. </mat-tab>\r\n\r\n          </mat-tab-group>\r\n\r\n        </ng-container>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"right-part\">\r\n      <app-field-definition-editor\r\n        #fieldDefinitionEditor\r\n        [fieldTypes]=\"fieldTypes\"\r\n      ></app-field-definition-editor>\r\n\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n","import { ProcessStarter } from './ProcessStarter';\r\nimport { ProcessStarterTypeCode } from './ProcessStarterType';\r\n\r\nexport class ProcessStarterVisualState {\r\n  constructor(private processStarter: ProcessStarter) { }\r\n\r\n  get isTypeGroupList(): boolean {\r\n    return this.processStarter?.processStarterType?.code == this.groupListTypeName;\r\n  }\r\n\r\n  get showGroupAssignOptions(): boolean {\r\n    if (this.isTypeGroupList && this.processStarter.groups.length > 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n\r\n  }\r\n\r\n  showAdvancedOptions = false;\r\n\r\n  readonly groupListTypeName: ProcessStarterTypeCode = 'groupList';\r\n}\r\n","import { Component, OnInit, Input, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\r\n\r\nimport { ProcessItem } from 'src/app/common/Models/ProcessItems/ProcessItem';\r\n\r\n@Component({\r\n  selector: 'app-process-item',\r\n  templateUrl: './process-item.component.html',\r\n  styleUrls: ['./process-item.component.css']\r\n})\r\nexport class ProcessItemComponent implements OnInit {\r\n\r\n  _processItem: ProcessItem;\r\n\r\n  get processItem(): ProcessItem { return this._processItem; }\r\n\r\n  @Output() linkCreated: EventEmitter<any> = new EventEmitter();\r\n  @Output() settingDialogueOpening = new EventEmitter<ProcessItem>();\r\n  isSettingsVisible = false;\r\n  showProcessItemNameEdit = false;\r\n\r\n  @ViewChild(\"processItemNameTextArea\") processItemNameTextArea: ElementRef;\r\n\r\n  constructor(\r\n    private el: ElementRef) { }\r\n\r\n  @Input() set processItem(val: ProcessItem) {\r\n    this._processItem = val;\r\n\r\n    this.showProcessItemNameEdit = this._processItem.justCreatedOnInterface;\r\n\r\n    if (this.showProcessItemNameEdit) {\r\n\r\n      const that = this;\r\n      setTimeout(() => {\r\n        that.processItemNameTextArea.nativeElement.focus();\r\n        that.processItemNameTextArea.nativeElement.select();\r\n      }, 60);\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.processItem.visualState.component = this;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.processItem.topPx = Math.round(this.processItem.visualState.middleY / 80) * 80 - this.processItem.visualState.height / 2;\r\n  }\r\n\r\n  getWidth() {\r\n    return this.el.nativeElement.offsetWidth;\r\n  }\r\n\r\n  getHeight() {\r\n    return this.el.nativeElement.offsetHeight;\r\n  }\r\n\r\n  openSettings($event) {\r\n\r\n    this.settingDialogueOpening.emit(this.processItem);\r\n  }\r\n\r\n  createLink($event) {\r\n    this.linkCreated.emit({\r\n      processItem: this.processItem,\r\n      event: $event\r\n    });\r\n\r\n  }\r\n\r\n  swapShowProcessItemNameEdit() {\r\n    this.showProcessItemNameEdit = true;\r\n    setTimeout(() => {\r\n      this.processItemNameTextArea.nativeElement.focus();\r\n    }, 40);\r\n  }\r\n\r\n  submitProcessName() {\r\n    this.showProcessItemNameEdit = false;\r\n  }\r\n\r\n  processItemNameSubmitted(event) {\r\n    var code = (event.keyCode ? event.keyCode : event.which);\r\n    if (code == 13) { //Enter keycode\r\n      this.showProcessItemNameEdit = false;\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div *ngIf=\"processItem\">\r\n\r\n  <div\r\n    *ngIf=\"$any(processItem).constructor.name== 'StepItem'\"\r\n    (dblclick)=\"swapShowProcessItemNameEdit()\"\r\n    class=\"box state-box noselect\"\r\n    [ngClass]=\"{\r\n    'selected': processItem.visualState.isSelected,\r\n    'not-selected': !processItem.visualState.isSelected\r\n  }\"\r\n  >\r\n    <div\r\n      *ngIf=\"!showProcessItemNameEdit\"\r\n      class=\"create-link-button box-button\"\r\n      appClickStopPropagation\r\n      (click)=\"createLink($event)\"\r\n    >\r\n      <i class=\"fas fa-long-arrow-alt-up\"></i>\r\n    </div>\r\n    <div\r\n      *ngIf=\"!showProcessItemNameEdit\"\r\n      class=\"settings-button box-button\"\r\n      appClickStopPropagation\r\n      (click)=\"openSettings($event)\"\r\n    >\r\n      <i class=\"fas fa-wrench\"></i>\r\n    </div>\r\n    <div\r\n      *ngIf=\"showProcessItemNameEdit\"\r\n      class=\"submit-process-name-change\"\r\n      appClickStopPropagation\r\n      (click)=\"submitProcessName()\"\r\n    >\r\n      <div>OK</div>\r\n    </div>\r\n    <textarea\r\n      #processItemNameTextArea\r\n      (keypress)=\"processItemNameSubmitted($event)\"\r\n      [(ngModel)]='processItem.text'\r\n      class=\"\r\n    process-item-textbox\"\r\n      appClickStopPropagation\r\n      *ngIf=\"showProcessItemNameEdit;else processItemNameLabel\"\r\n    ></textarea>\r\n    <ng-template #processItemNameLabel>\r\n      <div>{{processItem.text}}</div>\r\n    </ng-template>\r\n  </div>\r\n\r\n\r\n\r\n  <div\r\n    *ngIf=\"$any(processItem).constructor.name== 'ConditionItem'\"\r\n    class=\"box condition-box noselect\"\r\n    [ngClass]=\"{\r\n  'selected': processItem.visualState.isSelected,\r\n  'not-selected': !processItem.visualState.isSelected\r\n}\"\r\n  >\r\n    <div\r\n      class=\"create-link-button box-button\"\r\n      appClickStopPropagation\r\n      (click)=\"createLink($event)\"\r\n    >\r\n      <i class=\"fas fa-long-arrow-alt-up\"></i>\r\n    </div>\r\n    <div\r\n      class=\"settings-button box-button\"\r\n      appClickStopPropagation\r\n      (click)=\"openSettings($event)\"\r\n    >\r\n      <i class=\"fas fa-wrench\"></i>\r\n    </div>\r\n    <div class=\"condition-content\">\r\n      {{processItem.text}} - {{processItem.id}}\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { WebServiceAddress } from './web.service.adress';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  getServiceRootPath(): string {\r\n    return this.webServiceAddress.get();\r\n  }\r\n\r\n  constructor(private http: HttpClient, private webServiceAddress: WebServiceAddress, private router: Router) {\r\n\r\n  }\r\n\r\n  get<T>(source: string): Observable<T> {\r\n    return this.http.get<T>(this.getServiceRootPath() + source);\r\n  }\r\n\r\n\r\n  getByParams<T>(source: string, params: any): Observable<T> {\r\n    return this.http.get<T>(this.getServiceRootPath() + source, {\r\n      // tslint:disable-next-line: object-literal-shorthand\r\n      params: params\r\n    });\r\n  }\r\n\r\n  post<T>(source: string, objectToPost: any): Observable<T> {\r\n    console.log('http method is called:' + this.getServiceRootPath() + source);\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    };\r\n\r\n    return this.http.post<T>(this.getServiceRootPath() + source, objectToPost, httpOptions);\r\n  }\r\n}\r\n\r\n\r\n\r\n@Injectable()\r\nexport class HttpAuthInterceptorService implements HttpInterceptor {\r\n  constructor() {\r\n    console.log('the http interceptor is constructed!');\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n\r\n    const authToken: string = localStorage.getItem('access_token');\r\n\r\n    if (authToken !== '' && authToken != null) {\r\n\r\n      const authReq = req.clone({\r\n        headers: req.headers.set('Authorization', authToken)\r\n      });\r\n\r\n      return next.handle(authReq);\r\n    }\r\n    else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectorRef, ViewChild, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ProcessItemSettingsComponent } from '../process-item-settings/process-item-settings.component';\r\nimport { RandomIdGenerator } from 'src/app/services/Business/general.service';\r\nimport { ProcessItem } from 'src/app/common/Models/ProcessItems/ProcessItem';\r\nimport { Link } from 'src/app/common/Models/ProcessItems/Link';\r\nimport { StepItem } from 'src/app/common/Models/ProcessItems/StepItem';\r\nimport { ConditionItem } from 'src/app/common/Models/ProcessItems/ConditionItem';\r\nimport { Process } from 'src/app/common/Models/ProcessItems/Process';\r\nimport { UserGroupService } from 'src/app/services/Business/userGroup.service';\r\nimport { ArrayChanged, ObservableArray } from 'src/app/common/Models/PropertyChangedTypes';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-process-designer',\r\n  templateUrl: './process-designer.component.html',\r\n  styleUrls: ['./process-designer.component.css'],\r\n  host: {\r\n    '(document:keyup)': 'handleKeyboardEvent($event)'\r\n  }\r\n})\r\nexport class ProcessDesignerComponent implements OnInit {\r\n\r\n  process: Process;\r\n\r\n  selectedProcessItems: ProcessItem[] = [];\r\n\r\n  isLinkBeingCreated = false;\r\n  lineCreationStartX = 0;\r\n  lineCreationStartY = 0;\r\n  lineCreationEndX = 0;\r\n  lineCreationEndY = 0;\r\n\r\n  // @ViewChildren(ProcessItemComponent) processItemComponents: QueryList<ProcessItemComponent>;\r\n\r\n  @ViewChild('itemSettings') settingItemComponent: ProcessItemSettingsComponent;\r\n\r\n  @ViewChild('thebox') drawingBox: any;\r\n  startedLinkItem: ProcessItem = null;\r\n\r\n  links: Link[];\r\n  recalculateViewLinks() {\r\n    const links: Link[] = [];\r\n    this.process.processItems.value.array.forEach((processItem: ProcessItem) => {\r\n      processItem.links.forEach((link: Link) => {\r\n        if (link.startItem === processItem) {\r\n          links.push(link);\r\n        }\r\n      });\r\n    });\r\n    this.links = links;\r\n  }\r\n\r\n  constructor(\r\n    private cd: ChangeDetectorRef,\r\n    private randomIdGenerator: RandomIdGenerator,\r\n    private userGroupService: UserGroupService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initialize();\r\n\r\n    // move it so somewhere else please\r\n    this.process.processItems.subscribe(change => {\r\n      if (change.changeMode == 'orderChanged') {\r\n        let processItems = [...change.array];\r\n        processItems.shift().isFirstItem = true;\r\n\r\n        processItems.forEach(element => {\r\n          element.isFirstItem = false;\r\n        });\r\n\r\n        console.log(change.array);\r\n      }\r\n    });\r\n  }\r\n\r\n  initialize() {\r\n    this.cd.detach();\r\n\r\n    this.process = new Process(this.randomIdGenerator, this.userGroupService);\r\n\r\n    this.process.addNewStep('Request Entry', 30 + 4 * 80, 100, true);\r\n\r\n    this.cd.detectChanges();\r\n    this.cd.reattach();\r\n  }\r\n  setSelection(processItem: ProcessItem, selected: boolean) {\r\n    if (processItem.visualState.isSelected === selected) {\r\n      return;\r\n    }\r\n\r\n    processItem.visualState.isSelected = selected;\r\n\r\n    if (!processItem.visualState.isSelected) {\r\n      this.selectedProcessItems = this.selectedProcessItems.filter((item) => item !== processItem);\r\n    } else {\r\n      this.selectedProcessItems.push(processItem);\r\n    }\r\n  }\r\n\r\n  clickBox() {\r\n    this.deselectAll();\r\n  }\r\n  deselectAll() {\r\n    this.cd.detach();\r\n\r\n    this.selectedProcessItems.forEach((selectedItem) => {\r\n      selectedItem.visualState.isSelected = false;\r\n    });\r\n    this.selectedProcessItems = [];\r\n\r\n    this.cd.detectChanges();\r\n    this.cd.reattach();\r\n  }\r\n\r\n\r\n  addItem() {\r\n    this.cd.detach();\r\n\r\n    this.arrangeHorizontalDistances();\r\n    const lastItem = this.process.processItems.value.array.slice(-1)[0];\r\n\r\n    const newItem = new StepItem(\r\n      this.randomIdGenerator.generate(),\r\n      true,\r\n      false,\r\n      '[Type Step Name]',\r\n      lastItem.topPx,\r\n      lastItem.leftPx + 1,\r\n      this.userGroupService.getDefaultResponsibleType(),\r\n      this.userGroupService.getDefaultGroupAssignOption());\r\n\r\n    this.process.processItems.addItem(newItem);\r\n    this.arrangeHorizontalDistances();\r\n\r\n    this.cd.detectChanges();\r\n    this.cd.reattach();\r\n  }\r\n\r\n  addCondition() {\r\n    this.cd.detach();\r\n\r\n    this.arrangeHorizontalDistances();\r\n    const lastItem = this.process.processItems.value.array.slice(-1)[0];\r\n\r\n    const newItem = new ConditionItem(this.randomIdGenerator.generate(), true, false, '[Type Condition Name]', lastItem.topPx, lastItem.leftPx + 1);\r\n    this.process.processItems.addItem(newItem);\r\n    this.arrangeHorizontalDistances();\r\n\r\n    this.cd.detectChanges();\r\n    this.cd.reattach();\r\n  }\r\n\r\n  onProcessItemMouseDown(processItem: ProcessItem, $event: any) {\r\n\r\n    const isClickForCompletingLink: boolean = this.handleEndLinkProcess(processItem);\r\n\r\n    if (isClickForCompletingLink) {\r\n      return;\r\n    }\r\n\r\n    this.cd.detach();\r\n\r\n    if (!this.isLeftClick($event)) {\r\n      return;\r\n    }\r\n\r\n    // we assume that it is clicked to make the box selected, not to drag and drop\r\n    // we will use the value when mouse up event is caught\r\n    let clickedForDragDrop = false;\r\n\r\n    setTimeout(() => {\r\n      // if it is not released(mouse up) within 100ms, (once it is released)-> we will consider the user's intention as drag and drop.\r\n      clickedForDragDrop = true;\r\n    }, 100);\r\n\r\n    // we will revert this value and apply as selection if the click is for selection of the process item\r\n    const isSelectedBeforeClick = processItem.visualState.isSelected;\r\n\r\n    // we are making this selected\r\n    // if the click is for drag & drop this is needed,\r\n    // otherwise(selection) we will use the reverted value of isSelectedBeforeClick)\r\n    this.setSelection(processItem, true);\r\n\r\n    // we keep each item's initial position\r\n    // we will use it if drag & drop operation is triggered\r\n    this.selectedProcessItems.forEach((i) => {\r\n      i.visualState.leftPxBeforeMove = i.leftPx;\r\n      i.visualState.topPxBeforeMove = i.topPx;\r\n    });\r\n\r\n    // current mouse position (last position when drag & drop starts)\r\n    let lastXRecorded = $event.clientX;\r\n    let lastYRecorded = $event.clientY;\r\n\r\n    document.onmouseup = () => {\r\n\r\n      // user clicked for selection change\r\n      if (!clickedForDragDrop ||\r\n        (processItem.leftPx === processItem.visualState.leftPxBeforeMove && processItem.topPx === processItem.visualState.topPxBeforeMove)\r\n      ) {\r\n\r\n        this.setSelection(processItem, !isSelectedBeforeClick);\r\n\r\n        this.selectedProcessItems.forEach((i) => {\r\n          // if mouse position shifted during click (within 100ms between mousedown and mouseup),\r\n          // we recover the position of each selected shape.\r\n          i.leftPx = i.visualState.leftPxBeforeMove;\r\n          i.topPx = i.visualState.topPxBeforeMove;\r\n        });\r\n      } else {\r\n        // user clicked for drag & drop\r\n\r\n        this.cd.detectChanges();\r\n\r\n        // place each item in a vertical position that is k * 80\r\n        this.selectedProcessItems.forEach((i) => {\r\n          i.topPx = Math.round(i.visualState.middleY / 80) * 80 - i.visualState.height / 2;\r\n        });\r\n\r\n        this.arrangeHorizontalDistances();\r\n\r\n        if (this.selectedProcessItems.length === 1) {\r\n          // if there was one item drag&dropped, the intention is not to change selection\r\n          this.setSelection(processItem, isSelectedBeforeClick);\r\n        } else if (this.selectedProcessItems.length > 1) {\r\n          // if there were multiple item, it would be good to make sure that the one we drag&drop is also in selected state,\r\n          // even though it wasn't selected initially\r\n          // we can consider that user thinks that it is in the same group with other selected ones.\r\n          this.setSelection(processItem, true);\r\n        }\r\n      }\r\n\r\n      document.onmouseup = null;\r\n      document.onmousemove = null;\r\n\r\n      this.cd.detectChanges();\r\n      this.cd.reattach();\r\n    };\r\n\r\n    document.onmousemove = ($onMouseMoveEvent: any) => {\r\n\r\n      // shift: difference between last recoded position and current mouse position\r\n      const xShift = lastXRecorded - $onMouseMoveEvent.clientX;\r\n      const yShift = lastYRecorded - $onMouseMoveEvent.clientY;\r\n\r\n      // current mouse position will be used as last position in the next event trigger\r\n      lastXRecorded = $onMouseMoveEvent.clientX;\r\n      lastYRecorded = $onMouseMoveEvent.clientY;\r\n\r\n      // apply x and y shifts to each selected element\r\n      this.selectedProcessItems.forEach((i) => {\r\n        i.leftPx = i.leftPx - xShift;\r\n        i.topPx = i.topPx - yShift;\r\n      });\r\n\r\n      this.cd.detectChanges();\r\n    };\r\n\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  private isLeftClick($event: any) {\r\n    return $event.which === 1;\r\n  }\r\n\r\n  arrangeHorizontalDistances() {\r\n\r\n    if (this.process.processItems.value.array.length < 2) {\r\n      return;\r\n    }\r\n    const sortedProcessItems = [...this.process.processItems.value.array]\r\n      .sort((a, b) => a.leftPx - b.leftPx);\r\n\r\n    this.process.processItems.updateOrder(sortedProcessItems);\r\n\r\n    const buffer = 70;\r\n    let i: number;\r\n    for (i = 1; i < sortedProcessItems.length; i++) {\r\n      const previousItem = sortedProcessItems[i - 1];\r\n      const currentItem = sortedProcessItems[i];\r\n\r\n      const minLeft = previousItem.leftPx + previousItem.visualState.width + buffer;\r\n\r\n      if (currentItem.leftPx < minLeft) {\r\n        currentItem.leftPx = minLeft;\r\n      }\r\n    }\r\n  }\r\n\r\n  startLinkProcess($event: any) {\r\n\r\n    const processItem = $event.processItem as ProcessItem;\r\n    const $clickedEvent = $event.event;\r\n\r\n    const isClickForCompletingLink: boolean = this.handleEndLinkProcess(processItem);\r\n\r\n    if (isClickForCompletingLink) {\r\n      return;\r\n    }\r\n\r\n    this.isLinkBeingCreated = true;\r\n    this.startedLinkItem = processItem;\r\n    this.lineCreationEndX = this.lineCreationStartX = processItem.visualState.middleX;\r\n    this.lineCreationEndY = this.lineCreationStartY = processItem.visualState.middleY;\r\n\r\n    const drawingBoxRectangle = this.drawingBox.nativeElement.getBoundingClientRect();\r\n\r\n    this.lineCreationEndX = $clickedEvent.clientX - drawingBoxRectangle.left;\r\n    this.lineCreationEndY = $clickedEvent.clientY - drawingBoxRectangle.top;\r\n\r\n    let previousX = $clickedEvent.clientX;\r\n    let previousY = $clickedEvent.clientY;\r\n\r\n    document.onmousemove = (ev: MouseEvent) => {\r\n\r\n      // return;\r\n\r\n      const shiftX = previousX - ev.clientX;\r\n      const shiftY = previousY - ev.clientY;\r\n\r\n      previousX = ev.clientX;\r\n      previousY = ev.clientY;\r\n\r\n      this.lineCreationEndX = this.lineCreationEndX - shiftX;\r\n      this.lineCreationEndY = this.lineCreationEndY - shiftY;\r\n    };\r\n  }\r\n\r\n  handleEndLinkProcess(processItem: ProcessItem): boolean {\r\n\r\n    if (!this.isLinkBeingCreated) {\r\n      return false;\r\n    }\r\n\r\n    if (this.startedLinkItem == null) {\r\n      // unexpected case\r\n      return true;\r\n    }\r\n\r\n    if (this.startedLinkItem === processItem) {\r\n      this.isLinkBeingCreated = false;\r\n      this.startedLinkItem = null;\r\n\r\n      return true;\r\n    }\r\n\r\n    const link = new Link({ actionName: 'Submit', startItem: this.startedLinkItem, endItem: processItem });\r\n\r\n    this.startedLinkItem.links.push(link);\r\n    processItem.links.push(link);\r\n    this.recalculateViewLinks();\r\n\r\n    this.isLinkBeingCreated = false;\r\n    this.startedLinkItem = null;\r\n\r\n    return true;\r\n  }\r\n\r\n  openSettingDialogue(stepItem: StepItem) {\r\n    this.settingItemComponent.open(stepItem);\r\n  }\r\n\r\n  mouseEnter(arg) {\r\n    console.log(arg);\r\n  }\r\n\r\n  handleKeyboardEvent(event: KeyboardEvent) {\r\n    if (event.key == \"Escape\") {\r\n      if (this.isLinkBeingCreated) {\r\n        this.isLinkBeingCreated = false;\r\n        this.startedLinkItem = null;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<app-process-item-settings\r\n  [process]=\"process\"\r\n  #itemSettings\r\n>\r\n</app-process-item-settings>\r\n\r\n<div class=\"designer-wrapper\">\r\n  <div class=\"header\">\r\n    <div class=\"title\">\r\n      Process Builder: <b>New head count request</b>\r\n    </div>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"addItem()\"\r\n    >\r\n      New Step\r\n      <!-- state event state\r\n          state decision state\r\n          state event action state\r\n          state event action decison state\r\n          stoppropagation as directive\r\n          select by drawing a box -->\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"addCondition()\"\r\n    >\r\n      New Condition\r\n    </button>\r\n  </div>\r\n  <div\r\n    #thebox\r\n    id=\"the-box\"\r\n    class=\"box\"\r\n    (click)=\"clickBox()\"\r\n  >\r\n    <div\r\n      class=\"inner-box\"\r\n      *ngIf=\"this.process.processItems | async; let processItems \"\r\n    >\r\n\r\n      <svg\r\n        width=\"100\"\r\n        height=\"100\"\r\n        style=\"overflow: visible\"\r\n      >\r\n\r\n        <defs>\r\n          <marker\r\n            id=\"arrow-end\"\r\n            markerWidth=\"2\"\r\n            markerHeight=\"2\"\r\n            refX=\"12\"\r\n            refY=\"1\"\r\n            orient=\"auto\"\r\n            markerUnits=\"strokeWidth\"\r\n          >\r\n            <path\r\n              d=\"M0,0 L0,2 L1,1 z\"\r\n              fill=\"white\"\r\n            ></path>\r\n          </marker>\r\n        </defs>\r\n\r\n        <line\r\n          *ngIf=\"isLinkBeingCreated\"\r\n          stroke-width=\"10\"\r\n          [attr.x1]=\"lineCreationStartX\"\r\n          [attr.y1]=\"lineCreationStartY\"\r\n          [attr.x2]=\"lineCreationEndX\"\r\n          [attr.y2]=\"lineCreationEndY\"\r\n          stroke=\"green\"\r\n          marker-end=\"url(#arrow-end)\"\r\n        />\r\n\r\n        <line\r\n          *ngFor=\"let link of links\"\r\n          class=\"connector\"\r\n          stroke-width=\"10\"\r\n          [attr.x1]=\"link.startItem.visualState.middleX\"\r\n          [attr.y1]=\"link.startItem.visualState.middleY\"\r\n          [attr.x2]=\"link.endItem.visualState.middleX\"\r\n          [attr.y2]=\"link.endItem.visualState.middleY\"\r\n          [attr.stroke]=\"link.color\"\r\n          marker-end=\"url(#arrow-end)\"\r\n          (mouseenter)=\"mouseEnter(link.startItem.visualState.middleX) \"\r\n        >\r\n        </line>\r\n\r\n      </svg>\r\n\r\n      <!-- angular confuses types, .array error can be ignored -->\r\n      <app-process-item\r\n        appClickStopPropagation\r\n        *ngFor=\"let processItem of processItems.array\"\r\n        (linkCreated)=\"startLinkProcess($event)\"\r\n        [processItem]=\"processItem\"\r\n        [style.left.px]=\"processItem.leftPx\"\r\n        [style.top.px]=\"processItem.topPx\"\r\n        (mousedown)=\"onProcessItemMouseDown(processItem, $event)\"\r\n        (settingDialogueOpening)=\"openSettingDialogue($event)\"\r\n      >\r\n      </app-process-item>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthKeyInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    const tempUserId: string = localStorage.getItem('temp_user_id');\r\n\r\n    if (tempUserId !== '' && tempUserId != null) {\r\n\r\n      const authReq = request.clone({\r\n        headers: request.headers.set('temp_user_id', tempUserId)\r\n      });\r\n\r\n      return next.handle(authReq);\r\n    }\r\n    else {\r\n      return next.handle(request);\r\n    }\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <div class=\"congrats-wrapper\">\r\n    <img\r\n      *ngIf=\"!taskCompletedModel.processCompleted && !taskCompletedModel.processCanceled\"\r\n      class=\"image\"\r\n      src=\"/assets/images/completed-green.png\"\r\n    >\r\n    <img\r\n      *ngIf=\"taskCompletedModel.processCompleted\"\r\n      class=\"image\"\r\n      src=\"/assets/images/completed-green.png\"\r\n    >\r\n    <img\r\n      *ngIf=\"taskCompletedModel.processCanceled\"\r\n      class=\"image\"\r\n      src=\"/assets/images/cancel.jpg\"\r\n    >\r\n    <h1\r\n      *ngIf=\"!taskCompletedModel.processCompleted && !taskCompletedModel.processCanceled\"\r\n      class=\"congrats-text\"\r\n    >Congrats!</h1>\r\n    <h1\r\n      *ngIf=\"taskCompletedModel.processCompleted\"\r\n      class=\"congrats-text\"\r\n    >That's it!</h1>\r\n    <h1\r\n      *ngIf=\"taskCompletedModel.processCanceled\"\r\n      class=\"congrats-text\"\r\n    >Done!</h1>\r\n  </div>\r\n  <h1\r\n    *ngIf=\"!taskCompletedModel.processCompleted && !taskCompletedModel.processCanceled\"\r\n    class=\"task-completed-text\"\r\n  >Task Completed!</h1>\r\n  <h1\r\n    *ngIf=\"taskCompletedModel.processCompleted\"\r\n    class=\"task-completed-text\"\r\n  >The process with all tasks are now completed!</h1>\r\n  <h1\r\n    *ngIf=\"taskCompletedModel.processCanceled\"\r\n    class=\"task-completed-text\"\r\n  >The process is canceled.</h1>\r\n  <ng-container *ngIf=\"!taskCompletedModel.processCompleted && !taskCompletedModel.processCanceled\">\r\n    <h5>Next task is</h5>\r\n    <a\r\n      class=\"next-task\"\r\n      [routerLink]=\"['/EditTask/' + taskCompletedModel.processId + '/' + taskCompletedModel.processInstanceId + '/'+ taskCompletedModel.taskInstanceId]\"\r\n    >{{taskCompletedModel.taskName}}</a>\r\n    <h5 class=\"assigned-to-label\">Assigned to </h5>\r\n    <h2 class=\"assigned-to\">{{taskCompletedModel.assigneeName}}</h2>\r\n  </ng-container>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-task-completed',\r\n  templateUrl: './task-completed.component.html',\r\n  styleUrls: ['./task-completed.component.css']\r\n})\r\nexport class TaskCompletedComponent implements OnInit {\r\n\r\n  @Input() taskCompletedModel: any;\r\n\r\n  get nextTaskUrl(): string {\r\n    return '';\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'bpm.ist';\r\n}\r\n","<div fxLayout=\"row\">\r\n  <app-left-menu></app-left-menu>\r\n  <div style=\"height: 100vh; overflow-y: auto;width: 100%;\">\r\n    <router-outlet></router-outlet>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Field } from './Field';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { IPropertyChanged, nameof, PC } from '../PropertyChangedTypes';\r\n\r\nexport class FieldInStep implements IPropertyChanged<FieldInStep> {\r\n\r\n  constructor(\r\n    public id: string,\r\n    protected retrievedFromServer: boolean,\r\n    public field: Field,\r\n    private _readOnly: boolean,\r\n    public isRequired: boolean) {\r\n    this.field.fieldInStepList.subscribe(fieldInStepList => {\r\n      this.subscribeFieldInStepList(fieldInStepList);\r\n    });\r\n  }\r\n\r\n  otherFieldInStepsSubscripbtions: Subscription[] = [];\r\n\r\n  subscribeFieldInStepList(fieldInStepList: FieldInStep[]) {\r\n\r\n    this.otherFieldInStepsSubscripbtions.forEach(element => {\r\n      element.unsubscribe();\r\n    });\r\n\r\n    this.otherFieldInStepsSubscripbtions = [];\r\n\r\n    fieldInStepList.forEach(element => {\r\n\r\n      var subscription = element.propertyChanged.pipe(filter(v => v.propertyName == nameof<FieldInStep>(\"readOnly\"))).subscribe(v => {\r\n        this.calculateEditableFieldUsedInAnotherStep();\r\n      });\r\n\r\n      this.otherFieldInStepsSubscripbtions.push(subscription);\r\n    });\r\n\r\n    this.calculateEditableFieldUsedInAnotherStep();\r\n  }\r\n\r\n  get readOnly() {\r\n    return this._readOnly;\r\n  }\r\n  set readOnly(val: boolean) {\r\n    const oldValue = this._readOnly;\r\n    this._readOnly = val;\r\n    this.propertyChanged.next(new PC('readOnly', val, oldValue, this));\r\n  }\r\n\r\n  deleted = false;\r\n\r\n  // assignment of this value might be moved to a central point.\r\n  editableFieldUsedInAnotherStep = false;\r\n\r\n  calculateEditableFieldUsedInAnotherStep() {\r\n    this.editableFieldUsedInAnotherStep = this.field.fieldInStepList.value.some(f => f != this && f.readOnly == false && f.deleted == false);\r\n  }\r\n\r\n  propertyChanged = new Subject<PC<FieldInStep>>();\r\n\r\n  visualState = {\r\n    justDeleted: false // use this for showing, undo?\r\n\r\n    // visual state icin tip olustur\r\n    // yeni mi ekleniyor yoksa baska state'ten mi geliyor onu tut\r\n    // bir takim field'lar degisince, eger baska state'ten eklendiyse, diger yerleri de etkiliyor ona gore diye uyar.\r\n  };\r\n}\r\n\r\n\r\n","import { FieldType } from './FieldType';\r\nimport { FieldInStep } from './FieldInStep';\r\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\r\nimport { IPropertyChanged, PC } from '../PropertyChangedTypes';\r\n\r\nexport class Field implements IPropertyChanged<Field>{\r\n\r\n  fieldInStepList = new BehaviorSubject<FieldInStep[]>([]);\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  constructor(private _id: string) {\r\n    this.generalFieldSettings = new GeneralFieldSettings(this);\r\n  }\r\n  propertyChanged = new Subject<PC<Field>>();\r\n\r\n  get id(): string {\r\n    return this._id;\r\n  }\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  _name = '';\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n  set name(value: string) {\r\n    const oldValue = this._name;\r\n    this._name = value;\r\n    this.propertyChanged.next(new PC('name', value, oldValue, this));\r\n  }\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  private _fieldType: FieldType = null;\r\n  get fieldType(): FieldType {\r\n    return this._fieldType;\r\n  }\r\n  set fieldType(value: FieldType) {\r\n    const oldValue = this._fieldType;\r\n    this._fieldType = value;\r\n    this.propertyChanged.next(new PC('fieldType', value, oldValue, this));\r\n  }\r\n\r\n  generalFieldSettings: GeneralFieldSettings;\r\n\r\n  numericFieldSettings = {\r\n    hasMinValueRestriction: false,\r\n    minValue: null as number,\r\n    hasMaxValueRestriction: false,\r\n    maxValue: null as number\r\n  };\r\n\r\n  textFieldSettings = {\r\n    multiline: false,\r\n    numberOfLines: 2,\r\n    hasMinNumberOfChars: false,\r\n    minNumberOfChars: null as number,\r\n    hasMaxNumberOfChars: false,\r\n    maxNumberOfChars: null as number,\r\n    setRegexValidation: false,\r\n    regex: null as string,\r\n\r\n    visualState: {\r\n      // validateAsEmail: false,\r\n      // showAdvancedSettings: false\r\n    }\r\n  };\r\n\r\n}\r\nexport class GeneralFieldSettings {\r\n  constructor(private field: Field) {\r\n  }\r\n\r\n  _multiple: boolean;\r\n  set multipleValue(value: boolean) {\r\n    const oldValue = this._multiple;\r\n    this._multiple = value;\r\n    // TODO this usage may not be ideal. no final model yet, for hierarcial data structures.\r\n    this.field.propertyChanged.next(new PC('generalFieldSettings', value, oldValue, this.field));\r\n  }\r\n  get multipleValue(): boolean {\r\n    return this._multiple;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/Auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  busy = false;\r\n  username = '';\r\n  password = '';\r\n\r\n  ngOnInit(): void {\r\n    this.authService.logout();\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.username, this.password);\r\n    console.log(this.username, this.password);\r\n  }\r\n\r\n}\r\n","<div\r\n  fxLayout\r\n  fxLayoutAlign=\"center center\"\r\n  style=\"height: 100%;\"\r\n>\r\n  <mat-card style=\"width: 300px;border-radius: 8px;\">\r\n    <div style=\"text-align: center;\">\r\n      <img\r\n        style=\"width: 150px;height:154.2px;border-radius: 10px;\"\r\n        src=\"/assets/images/logo.png\"\r\n      >\r\n    </div>\r\n    <div style=\"margin-top:20px; text-align: center;font-size: 24px;\">\r\n      Login\r\n    </div>\r\n\r\n\r\n    <div style=\"margin-top:20px;\">\r\n      <ejs-textbox\r\n        placeholder=\"User name\"\r\n        cssClass=\"e-outline\"\r\n        floatLabelType=\"Always\"\r\n        [(value)]=\"username\"\r\n      >\r\n      </ejs-textbox>\r\n    </div>\r\n    <div style=\"margin-top:10px\">\r\n      <ejs-textbox\r\n        placeholder=\"Password\"\r\n        cssClass=\"e-outline\"\r\n        floatLabelType=\"Always\"\r\n        [(value)]=\"password\"\r\n      ></ejs-textbox>\r\n    </div>\r\n    <button\r\n      style=\"margin-top:10px\"\r\n      (click)=\"login()\"\r\n      mat-button\r\n      mat-raised-button\r\n      [disabled]=\"busy\"\r\n      color=\"primary\"\r\n    >\r\n      Login\r\n    </button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  </mat-card>\r\n</div>\r\n","import { ProcessItem } from './ProcessItem';\r\nimport { Link } from './Link';\r\nimport { Field } from '../Field/Field';\r\nimport { StepItem } from './StepItem';\r\nimport { RandomIdGenerator } from '../../../services/Business/general.service';\r\nimport { FieldInStep } from '../Field/FieldInStep';\r\nimport { UserGroupService } from '../../../services/Business/userGroup.service';\r\nimport { from, Observable, BehaviorSubject, Subscription } from 'rxjs';\r\nimport { ArrayChanged, ObservableArray } from '../PropertyChangedTypes';\r\nimport { ProcessStarter } from '../Responsible/ProcessStarter';\r\n\r\nexport class Process {\r\n\r\n  constructor(\r\n    private randomIdGenerator: RandomIdGenerator,\r\n    private userGroupService: UserGroupService,\r\n  ) {\r\n\r\n    this.processStarter = new ProcessStarter(\r\n      this.userGroupService.getDefaultProcessStarter(), []);\r\n\r\n    this.fields.subscribe(change => {\r\n      this.setAllUserTypeFields(change);\r\n    });\r\n  }\r\n\r\n  processId: string;\r\n\r\n  processItems = new ObservableArray<ProcessItem>(this);\r\n\r\n  processStarter: ProcessStarter;\r\n\r\n  links: Link[] = [];\r\n\r\n  public fields = new ObservableArray<Field>(this);\r\n  userTypeFields: Field[] = [];\r\n  groupTypeFields: Field[] = [];\r\n  multipleUserTypeFields: Field[] = [];\r\n  multipleGroupTypeFields: Field[] = [];\r\n\r\n  addNewField(stepItem: StepItem) {\r\n\r\n    const field = new Field(this.randomIdGenerator.generate());\r\n\r\n    this.fields.addItem(field);\r\n\r\n    const fieldInStep = new FieldInStep(\r\n      this.randomIdGenerator.generate(),\r\n      false,\r\n      field,\r\n      false,\r\n      false);\r\n\r\n    field.fieldInStepList.next([...field.fieldInStepList.value, fieldInStep]);\r\n\r\n    stepItem.fieldsInStep.push(fieldInStep);\r\n\r\n    return { createdFieldInStep: fieldInStep };\r\n  }\r\n\r\n  addNewStepField(stepItem: StepItem, field: Field) {\r\n    // TODO: work on scenarios\r\n    // initializing with values from server and\r\n    // creating values from ui\r\n    // creating a fresh process\r\n\r\n  }\r\n\r\n  addNewStep(stepName: string, topPx: number, leftPx: number, isFirstItem: boolean = false) {\r\n    const newStep = new StepItem(\r\n      this.randomIdGenerator.generate(),\r\n      true,\r\n      false,\r\n      stepName,\r\n      topPx,\r\n      leftPx,\r\n      this.userGroupService.getDefaultResponsibleType(),\r\n      this.userGroupService.getDefaultGroupAssignOption(),\r\n    );\r\n\r\n    newStep.isFirstItem = isFirstItem;\r\n\r\n    this.processItems.addItem(newStep);\r\n  }\r\n\r\n  deleteField(field: Field) {\r\n    // TODO: check if the field is a user field or group field picked as the responsible in a step\r\n    // TODO: call value changed\r\n    //((field as any).processSubscription as Subscription).unsubscribe();\r\n\r\n    // stop deletion or ask if they want to remove that field being selected\r\n  }\r\n\r\n  private setAllUserTypeFields(change: ArrayChanged<Field>) {\r\n\r\n    const fieldAddedOrRemovedWithUserOrGroupFieldType =\r\n      (change.changeMode == 'added' || change.changeMode == 'removed') &&\r\n      (change.changedValue.fieldType?.code == 'user' || change.changedValue.fieldType?.code == 'group');\r\n\r\n    const fieldFieldTypeOrGeneralFieldSettingsChanged =\r\n      change.changeMode == 'itemPropertyChanged' &&\r\n      (change.itemPropertyChanged.propertyName == 'fieldType' || change.itemPropertyChanged.propertyName == 'generalFieldSettings');\r\n\r\n    if (!fieldAddedOrRemovedWithUserOrGroupFieldType && !fieldFieldTypeOrGeneralFieldSettingsChanged) {\r\n      return;\r\n    }\r\n\r\n    const fields = this.fields.getArray();\r\n\r\n    this.userTypeFields =\r\n      fields.filter(field => field.fieldType?.code === 'user' && !field.generalFieldSettings.multipleValue);\r\n\r\n    this.multipleUserTypeFields =\r\n      fields.filter(field => field.fieldType?.code === 'user' && field.generalFieldSettings.multipleValue);\r\n\r\n    this.groupTypeFields =\r\n      fields.filter(field => field.fieldType?.code === 'group' && !field.generalFieldSettings.multipleValue);\r\n\r\n    this.multipleGroupTypeFields =\r\n      fields.filter(field => field.fieldType?.code === 'group' && field.generalFieldSettings.multipleValue);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MaterialModule } from './material-module';\r\nimport { UiControlsModule } from './ui-controls-module';\r\n\r\nimport { ProcessDesignerComponent } from './components/process-designer/process-designer.component';\r\nimport { ProcessItemComponent } from './components/process-item/process-item.component';\r\nimport { ProcessItemSettingsComponent } from './components/process-item-settings/process-item-settings.component';\r\n\r\nimport { ClickStopPropagationDirective } from './common/Directives/click-stop-propagation.directive';\r\n\r\n\r\nimport { MatFormFieldDefaultOptions, MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\r\nimport { EditTaskComponent } from './components/edit-task/edit-task.component';\r\nimport { ListProcessesComponent } from './components/list-processes/list-processes.component';\r\nimport { TaskCompletedComponent } from './components/task-completed/task-completed.component';\r\nimport { CustomDateTimePipe } from './common/Pipes/custom-date-time.pipe';\r\nimport { CustomDatePipe } from './common/Pipes/custom-date-time.pipe';\r\nimport { ListTasksComponent } from './components/list-tasks/list-tasks.component';\r\nimport { MyGroupsTasksComponent } from './components/my-groups-tasks/my-groups-tasks.component';\r\nimport { LeftMenuComponent } from './components/left-menu/left-menu.component';\r\nimport { FormComponent } from './components/form/form.component';\r\nimport { GenericFieldComponent } from './components/fields/generic-field/generic-field.component';\r\nimport { DateFieldComponent } from './components/fields/date-field/date-field.component';\r\nimport { TextFieldComponent } from './components/fields/text-field/text-field.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AuthKeyInterceptor } from './services/Web/auth-key.interceptor';\nimport { ResponsibleComponent } from './components/process-item-settings-components/responsible/responsible.component';\nimport { StepFormFieldsComponent } from './components/process-item-settings-components/step-form-fields/step-form-fields.component';\nimport { FieldDefinitionEditorComponent } from './components/process-item-settings-components/field-definition-editor/field-definition-editor.component';\r\n\r\nconst appearance: MatFormFieldDefaultOptions = {\r\n  appearance: 'outline'\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProcessDesignerComponent,\r\n    ProcessItemComponent,\r\n    ProcessItemSettingsComponent,\r\n    ClickStopPropagationDirective,\r\n    EditTaskComponent,\r\n    ListProcessesComponent,\r\n    TaskCompletedComponent,\r\n    CustomDateTimePipe,\r\n    CustomDatePipe,\r\n    ListTasksComponent,\r\n    MyGroupsTasksComponent,\r\n    LeftMenuComponent,\r\n    FormComponent,\r\n    GenericFieldComponent,\r\n    DateFieldComponent,\r\n    TextFieldComponent,\r\n    LoginComponent,\r\n    ResponsibleComponent,\r\n    StepFormFieldsComponent,\r\n    FieldDefinitionEditorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    UiControlsModule,\r\n    FlexLayoutModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n      useValue: appearance\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS, useClass: AuthKeyInterceptor, multi: true\r\n    }\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Observable, Subject } from 'rxjs';\r\nimport { ProcessItemComponent } from 'src/app/components/process-item/process-item.component';\r\nimport { IPropertyChanged, PC } from '../PropertyChangedTypes';\r\nimport { Link } from './Link';\r\nimport { ProcessItemVisualState } from './ProcessItemVisualState';\r\n\r\nexport class ProcessItem implements IPropertyChanged<ProcessItem> {\r\n\r\n  public constructor(\r\n    public readonly id: string,\r\n    public justCreatedOnInterface: boolean,\r\n    public retrievedFromServer: boolean,\r\n    public topPx: number = 80,\r\n    public leftPx: number = 80,\r\n    public text: string = '',\r\n    public deletable: boolean = true,\r\n    public isFirstItem: boolean = false\r\n  ) {\r\n\r\n  }\r\n\r\n  propertyChanged = new Subject<PC<ProcessItem>>();\r\n\r\n  links: Link[] = []; // persistent\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  protected _visualState: ProcessItemVisualState = new ProcessItemVisualState(this);\r\n\r\n  get visualState(): ProcessItemVisualState {\r\n    return this._visualState;\r\n  }\r\n}\r\n","import { ProcessItemVisualState } from './ProcessItemVisualState';\r\n\r\nexport class StepItemVisualState extends ProcessItemVisualState {\r\n  // fieldsViewMode: FieldViewModes = 'listFields';\r\n}\r\n","<div style=\"width:500px\">\r\n  <ng-container [ngSwitch]=\"field.fieldType\">\r\n\r\n    <app-date-field\r\n      *ngSwitchCase=\"'Date'\"\r\n      [field]=\"field\"\r\n    ></app-date-field>\r\n\r\n    <app-text-field\r\n      *ngSwitchCase=\"'Text'\"\r\n      [field]=\"field\"\r\n    ></app-text-field>\r\n\r\n    <div class=\"error-message-wrapper\">\r\n      <div *ngIf=\"field.formControl.errors?.required\">\r\n        This field is required.\r\n      </div>\r\n\r\n      <!-- touched: {{field.formControl.touched}} <br /> -->\r\n      <!-- <div *ngIf=\"field.formControl.invalid && field.formControl.dirty \"> -->\r\n      <!-- <div>\r\n        {{field.formControl.errors | json }}\r\n        <br />\r\n        <br />\r\n\r\n\r\n        dirty:{{field.formControl.dirty}}, disabled: {{field.formControl.disabled}}, enabled:\r\n        {{field.formControl.enabled}}, invalid:{{field.formControl.invalid}}, pristine: {{field.formControl.pristine}},\r\n        touched: {{field.formControl.touched}}, valid:{{field.formControl.valid}}\r\n\r\n      </div> -->\r\n    </div>\r\n\r\n  </ng-container>\r\n\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { RenderingField } from '../../form/form.component';\r\n\r\n@Component({\r\n  selector: 'app-generic-field',\r\n  templateUrl: './generic-field.component.html',\r\n  styleUrls: ['./generic-field.component.css']\r\n})\r\nexport class GenericFieldComponent implements OnInit {\r\n\r\n  @Input() field: RenderingField;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","export class Group {\r\n  constructor(public groupName: string, public groupId: string) {\r\n  }\r\n}\r\n\r\n","<div *ngIf=\"process && processItem \">\n\n\n  <div\n    fxLayout=\"column\"\n    *ngIf=\"stepItem.isFirstItem == true\"\n  >\n    <ejs-dropdownlist\n      style=\"margin-top:22px\"\n      placeholder=\"\"\n      name=\"whoToAssign\"\n      [dataSource]='showingResponsibleTypes'\n      [ngModel]=\"stepItem?.responsible?.responsibleType?.code\"\n      [fields]=\"{value:'code', text:'name' }\"\n      (change)='stepItem.responsible.responsibleType = $event.itemData; '\n      [allowFiltering]='false'\n      cssClass=\"e-outline\"\n      floatLabelType=\"Never\"\n      popupHeight='500px'\n    >\n\n      <ng-template\n        #itemTemplate=\"\"\n        let-data=\"\"\n      >\n\n        <span *ngIf=\"data.visualState.enabled\">{{data.name}}</span>\n        <span *ngIf=\"!data.visualState.enabled\"><span style=\"text-decoration: line-through;\">{{data.name}}</span>\n          <span> [No field exists]</span></span>\n\n      </ng-template>\n\n      <ng-template\n        #footerTemplate=\"\"\n        let-data=\"\"\n      >\n\n        <div\n          fxLayout=\"row\"\n          fxLayoutAlign=\"end center\"\n          style=\"height: 30px;\"\n          *ngIf=\"stepItem?.responsible?.visualState.show_ShowHideAdvancedOptions\"\n        >\n\n          <div\n            style=\"\n                        text-decoration: underline;\n                        cursor:pointer;\n                        transform: translateX(-4px);\"\n            (click)='showAdvancedResponsibleTypes = !showAdvancedResponsibleTypes'\n          >\n\n            <ng-container *ngIf=\"showAdvancedResponsibleTypes\">Hide advanced options</ng-container>\n            <ng-container *ngIf=\"!showAdvancedResponsibleTypes\">Show advanced options</ng-container>\n\n          </div>\n        </div>\n\n      </ng-template>\n    </ejs-dropdownlist>\n  </div>\n\n  <div\n    fxLayout=\"column\"\n    *ngIf=\"stepItem.isFirstItem == false\"\n  >\n\n    <ejs-dropdownlist\n      style=\"margin-top:22px\"\n      placeholder=\"\"\n      name=\"whoToAssign\"\n      [dataSource]='showingResponsibleTypes'\n      [ngModel]=\"stepItem?.responsible?.responsibleType?.code\"\n      [fields]=\"{value:'code', text:'name' }\"\n      (change)='stepItem.responsible.responsibleType = $event.itemData; '\n      [allowFiltering]='false'\n      cssClass=\"e-outline\"\n      floatLabelType=\"Never\"\n      popupHeight='500px'\n    >\n\n      <ng-template\n        #itemTemplate=\"\"\n        let-data=\"\"\n      >\n\n        <span *ngIf=\"data.visualState.enabled\">{{data.name}}</span>\n        <span *ngIf=\"!data.visualState.enabled\"><span style=\"text-decoration: line-through;\">{{data.name}}</span>\n          <span> [No field exists]</span></span>\n\n      </ng-template>\n\n      <ng-template\n        #footerTemplate=\"\"\n        let-data=\"\"\n      >\n\n        <div\n          fxLayout=\"row\"\n          fxLayoutAlign=\"end center\"\n          style=\"height: 30px;\"\n          *ngIf=\"stepItem?.responsible?.visualState.show_ShowHideAdvancedOptions\"\n        >\n\n          <div\n            style=\"\n                        text-decoration: underline;\n                        cursor:pointer;\n                        transform: translateX(-4px);\"\n            (click)='showAdvancedResponsibleTypes = !showAdvancedResponsibleTypes'\n          >\n\n            <ng-container *ngIf=\"showAdvancedResponsibleTypes\">Hide advanced options</ng-container>\n            <ng-container *ngIf=\"!showAdvancedResponsibleTypes\">Show advanced options</ng-container>\n\n          </div>\n        </div>\n\n      </ng-template>\n    </ejs-dropdownlist>\n\n\n    <div\n      *ngIf=\"stepItem.responsible.visualState.isTypeGroup\"\n      fxLayout=\"column\"\n    >\n\n      <ejs-dropdownlist\n        class=\"detailed-settings-item-wrapper\"\n        placeholder=\"Group\"\n        name=\"group\"\n        [dataSource]='groups'\n        [ngModel]=\"stepItem?.responsible?.group?.groupId\"\n        [fields]=\"{value:'groupId', text:'groupName' }\"\n        (change)='stepItem.responsible.group = $event.itemData; '\n        [allowFiltering]='true'\n        [ignoreAccent]='true'\n        filterBarPlaceholder='Search'\n        cssClass=\"e-outline detailed-settings-item-wrapper\"\n        marks\n        and\n        floatLabelType=\"Always\"\n      >\n      </ejs-dropdownlist>\n\n    </div>\n\n    <div *ngIf=\"stepItem.responsible.visualState.isTypeUser\">\n\n      <ejs-dropdownlist\n        style=\"margin-top:22px\"\n        placeholder=\"User\"\n        name=\"user\"\n        [dataSource]='users'\n        [ngModel]=\"stepItem?.responsible?.user?.userId\"\n        [fields]=\"{value:'userId', text:'userName' }\"\n        (change)='stepItem.responsible.user = $event.itemData; '\n        [allowFiltering]='true'\n        [ignoreAccent]='true'\n        filterBarPlaceholder='Search'\n        cssClass=\"e-outline\"\n        floatLabelType=\"Always\"\n      >\n      </ejs-dropdownlist>\n\n    </div>\n\n    <div *ngIf=\"stepItem.responsible.visualState.isTypeGroupList\">\n      <ejs-multiselect\n        #groupsMultiselect\n        style=\"margin-top:22px\"\n        placeholder=\"Groups\"\n        name=\"groups\"\n        [dataSource]='groups'\n        [fields]=\"{ text: 'groupName', value: 'groupId' }\"\n        mode='Box'\n        [showDropDownIcon]='true'\n        [closePopupOnSelect]=\"false\"\n        filterBarPlaceholder='Search'\n        cssClass=\"e-outline\"\n        floatLabelType=\"Always\"\n        [allowFiltering]='true'\n        [ignoreAccent]='true'\n        [(value)]=\"selectedGroupIds\"\n      ></ejs-multiselect>\n\n    </div>\n\n    <div *ngIf=\"stepItem.responsible.visualState.isTypeUserList\">\n\n      <ejs-multiselect\n        style=\"margin-top:22px\"\n        placeholder=\"Users\"\n        name=\"users\"\n        [dataSource]='users'\n        [fields]=\"{ text: 'userName', value: 'userId' }\"\n        mode='Box'\n        [showDropDownIcon]='true'\n        filterBarPlaceholder='Search'\n        cssClass=\"e-outline\"\n        floatLabelType=\"Always\"\n        [allowFiltering]='true'\n        [ignoreAccent]='true'\n        (change)=\"assignMultiselectValues(stepItem.responsible, 'users', 'userId', users, $event.value, $event);\"\n        [(ngModel)]=\"selectedUserIds\"\n      ></ejs-multiselect>\n\n    </div>\n\n    <div *ngIf=\"stepItem.responsible.visualState.isTypeUserFromField\">\n\n      <ejs-dropdownlist\n        style=\"margin-top:22px\"\n        placeholder=\"User Field\"\n        name=\"userField\"\n        [dataSource]='process.userTypeFields'\n        [ngModel]=\"stepItem?.responsible?.userField?.id\"\n        [fields]=\"{value:'id', text:'name' }\"\n        (change)='stepItem.responsible.userField = $event.itemData; '\n        [allowFiltering]='true'\n        [ignoreAccent]='true'\n        filterBarPlaceholder='Search'\n        cssClass=\"e-outline\"\n        floatLabelType=\"Always\"\n      >\n      </ejs-dropdownlist>\n\n    </div>\n\n    <div *ngIf=\"stepItem.responsible.visualState.showGroupAssignOptions\">\n\n      <div\n        class=\"detailed-settings-item-wrapper\"\n        style=\"\n                            font-size: 12px;\n                            margin-left: 9px;\n                            line-height: 1em;\n                            color: #777;\n                            transform: translateY(2px);\n                            background-color: white;\n                            padding-left: 5px;\n                            display: inline-block;\n                            width: 106px;\"\n      >How to distribute?</div>\n      <mat-selection-list\n        [multiple]=\"false\"\n        (selectionChange)=\"stepItem.responsible.groupAssignOption = $event.option.value\"\n      >\n        <mat-list-option\n          *ngFor=\"let groupAssignOption of groupAssignOptions\"\n          [value]=\"groupAssignOption\"\n          [selected]=\"groupAssignOption.optionCode === stepItem?.responsible?.groupAssignOption?.optionCode\"\n          [matTooltip]=\"groupAssignOption.optionTooltip\"\n        >\n\n          <div style=\"vertical-align: middle;height: 100%;\">{{groupAssignOption.optionText}}</div>\n\n        </mat-list-option>\n\n      </mat-selection-list>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ResponsibleType } from 'src/app/common/Models/Responsible/ResponsibleType';\nimport { StepItem } from 'src/app/common/Models/ProcessItems/StepItem';\nimport { ProcessItem } from 'src/app/common/Models/ProcessItems/ProcessItem';\nimport { UserGroupService } from 'src/app/services/Business/userGroup.service';\nimport { Group } from 'src/app/common/Models/Responsible/Group';\nimport { User } from 'src/app/common/Models/Responsible/User';\nimport { GroupAssignOption } from 'src/app/common/Models/Responsible/GroupAssignOption';\nimport { Process } from 'src/app/common/Models/ProcessItems/Process';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-responsible',\n  templateUrl: './responsible.component.html',\n  styleUrls: ['./responsible.component.css']\n})\nexport class ResponsibleComponent implements OnInit {\n\n  @Input() process: Process;\n\n  allResponsibleTypes: ResponsibleType[] = [];\n  showingResponsibleTypes: ResponsibleType[] = [];\n  _processItem: ProcessItem;\n\n  groups: Group[] = [];\n  users: User[] = [];\n  selectedUserIds = [];\n\n\n  private fieldChangeSubscription: Subscription;\n\n  groupAssignOptions: GroupAssignOption[] = [];\n\n  _selectedGroupIds = [];\n  get selectedGroupIds() {\n    return this._selectedGroupIds;\n  }\n  set selectedGroupIds(value: any[]) {\n    console.log('value setter', value);\n    this._selectedGroupIds = value;\n    this.assignMultiselectValues(this.stepItem.responsible, 'groups', 'groupId', this.groups, value, null);\n  }\n\n  constructor(\n    private userGroupService: UserGroupService\n  ) { }\n\n  async ngOnInit() {\n    this.groups = await this.userGroupService.getGroups();\n    this.users = await this.userGroupService.getUsers();\n    this.groupAssignOptions = await this.userGroupService.getGroupAssignOptions();\n    this.allResponsibleTypes = this.userGroupService.getResponsibleTypes();\n\n    this.subscribeFieldChanges();\n\n    this.initialise_Responsible_MultipleSelection_Variables();\n    this.setShowingResponsibleTypes();\n  }\n\n  get stepItem(): StepItem {\n    return this.processItem as StepItem;\n  }\n\n  get processItem(): ProcessItem {\n    return this._processItem;\n  }\n\n  @Input() set processItem(value: ProcessItem) {\n\n    if (this._processItem == value) {\n      return;\n    }\n\n    this._processItem = value;\n\n    // TODO: only if it is step item\n    // TODO: explain why we make this call\n    // TODO: are you handling null \"value\" here?\n    this.initialise_Responsible_MultipleSelection_Variables();\n    this.setShowingResponsibleTypes();\n  }\n\n  // TODO: move to a base component?\n  assignMultiselectValues(\n    parentObjectOfModel: any,\n    fieldNameOfModel: string,\n    idFieldNameInModel: string,\n    selectableListOfItems: any[],\n    selectedItemIds: any[],\n    event: any\n  ) {\n    console.log(event)\n    // TODO: handling a selected object which is not present in the list?\n    const selectedItems = selectableListOfItems.filter(\n      item =>\n        selectedItemIds.some(selectedItemId =>\n          selectedItemId === item[idFieldNameInModel]));\n\n    parentObjectOfModel[fieldNameOfModel] = selectedItems;\n  }\n\n  initialise_Responsible_MultipleSelection_Variables() {\n    this.selectedUserIds = (this.stepItem?.responsible?.users ?? []).map(u => u.userId);\n    this.selectedGroupIds = (this.stepItem?.responsible?.groups ?? []).map(g => g.groupId);\n  }\n\n  setShowingResponsibleTypes(): void {\n\n    this.showingResponsibleTypes =\n      this.allResponsibleTypes.filter(rt => !rt.isAdvancedOption || this.stepItem?.responsible?.visualState?.showAdvancedOptions);\n  }\n\n  get showAdvancedResponsibleTypes(): boolean {\n    return this.stepItem?.responsible?.visualState?.showAdvancedOptions;\n  }\n\n  set showAdvancedResponsibleTypes(value: boolean) {\n    this.stepItem.responsible.visualState.showAdvancedOptions = value;\n    this.setShowingResponsibleTypes();\n  }\n\n\n  subscribeFieldChanges() {\n    this.updateEnabledResponsibleTypes();\n\n    this.fieldChangeSubscription =\n      this.process.fields.subscribe(fc => {\n        // TODO: this should be centralized and not handled in component.\n        this.updateEnabledResponsibleTypes();\n      });\n  }\n\n  updateEnabledResponsibleTypes() {\n    this.allResponsibleTypes.forEach(rt => {\n      rt.visualState.enabled = true;\n\n      const groupFieldSelectionWithNoGroupField =\n        rt.code === 'groupFromField' &&\n        this.process.groupTypeFields.length === 0;\n\n      const userFieldSelectionWithNoUserField =\n        rt.code === 'userFromField' &&\n        this.process.userTypeFields.length === 0;\n\n      const groupListSelectionWithNoRelevantField =\n        rt.code === 'groupListFromField' &&\n        this.process.multipleGroupTypeFields.length === 0;\n\n      const userListWithSelectionNoRelevantField =\n        rt.code === 'userListFromField' &&\n        this.process.multipleUserTypeFields.length === 0;\n\n      if (groupFieldSelectionWithNoGroupField ||\n        userFieldSelectionWithNoUserField ||\n        groupListSelectionWithNoRelevantField ||\n        userListWithSelectionNoRelevantField) {\n        rt.visualState.enabled = false;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe();\n  }\n\n  unsubscribe() {\n    this.fieldChangeSubscription?.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\n\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSnackBarModule,\r\n    MatSidenavModule,\r\n    MatProgressBarModule,\r\n    MatListModule,\r\n    MatCheckboxModule,\r\n    MatButtonToggleModule\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { BehaviorSubject, Observable, Subscription } from \"rxjs\";\r\n\r\ntype ChangeMode = 'added' | 'removed' | 'initialized' | 'orderChanged' | 'itemPropertyChanged';\r\n\r\nexport class ArrayChanged<T>{\r\n  constructor(\r\n    public array: T[],\r\n    public changeMode: ChangeMode,\r\n    public changedValue: T,\r\n    public sender: any,\r\n    public itemPropertyChanged: PC<T>) { }\r\n}\r\n\r\nexport interface IPropertyChanged<T> {\r\n  propertyChanged: Observable<PC<T>>;\r\n}\r\n\r\n// create a subject implementation returning observable\r\n// and we use it in implementing IPropertyChanged\r\n// this should filter repeating values\r\n// also something to make assignment easier\r\n// this._val = obsimplementation.setvalue(newvalue, this._val)\r\n// it will check if values same, if same no fire, and return new value\r\n\r\nexport class ObservableArray<T extends IPropertyChanged<T>> extends BehaviorSubject<ArrayChanged<T>>{\r\n  constructor(private owner: any) {\r\n    super(new ArrayChanged<T>([], 'initialized', null, owner, null));\r\n  }\r\n\r\n  itemSubscriptions = new Map<T, Subscription>();\r\n\r\n  getArray(): T[] {\r\n    return super.value.array;\r\n  }\r\n\r\n  addItem(item: T) {\r\n    const newArray = [...super.value.array, item];\r\n\r\n    this.subscribeItem(item);\r\n\r\n    super.next(new ArrayChanged(newArray, 'added', item, super.value.sender, null));\r\n  }\r\n\r\n  removeItem(item: T) {\r\n    const newArray = super.value.array.filter(i => i != item);\r\n\r\n    this.unSubscribeItem(item);\r\n\r\n    super.next(new ArrayChanged(newArray, 'removed', item, super.value.sender, null));\r\n  }\r\n\r\n  updateOrder(array: T[]) {\r\n    // TODO: check if same set of values sent.\r\n\r\n    let orderChangeExist = false;\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (super.value.array[i] != array[i]) {\r\n        orderChangeExist = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (orderChangeExist) {\r\n      super.next(new ArrayChanged(array, 'orderChanged', null, super.value.sender, null));\r\n    }\r\n  }\r\n\r\n  private subscribeItem(item: T) {\r\n    const subscription = item.propertyChanged.subscribe(propertyChanged => {\r\n\r\n      super.next(new ArrayChanged(super.value.array, 'itemPropertyChanged', propertyChanged.sender, this.owner, propertyChanged));\r\n\r\n    });\r\n\r\n    this.itemSubscriptions.set(item, subscription);\r\n  }\r\n\r\n  private unSubscribeItem(item: T) {\r\n    const subscription = this.itemSubscriptions.get(item);\r\n    subscription.unsubscribe();\r\n    this.itemSubscriptions.delete(item);\r\n  }\r\n}\r\n\r\nexport const nameof = <T>(name: keyof T) => name;\r\n\r\nexport class PC<T> {\r\n  constructor(\r\n    public propertyName: keyof T,\r\n    public newValue: any,\r\n    public oldValue: any,\r\n    public sender: any\r\n  ) { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DropDownListModule, ListBoxModule, MultiSelectModule } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\r\nimport { TextBoxModule } from '@syncfusion/ej2-angular-inputs';\r\nimport { SidebarModule } from '@syncfusion/ej2-angular-navigations';\r\nimport { DatePickerModule } from '@syncfusion/ej2-angular-calendars';\r\n\r\n\r\n@NgModule({\r\n  exports: [\r\n    DropDownListModule,\r\n    ListBoxModule,\r\n    MultiSelectModule,\r\n    CheckBoxModule,\r\n    TextBoxModule,\r\n    DatePickerModule,\r\n  ]\r\n})\r\nexport class UiControlsModule { }\r\n","export class GroupAssignOption {\r\n  constructor(public optionCode: string, public optionText: string, public optionTooltip: string) {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnackBarService {\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  open(message: string, duration?: number) {\r\n\r\n    duration = duration ?? 2000;\r\n\r\n    const matSnackBarConfig = { duration } as MatSnackBarConfig;\r\n\r\n    this.snackBar.open(message, null, matSnackBarConfig);\r\n  }\r\n}\r\n","<div *ngIf=\"!field.isReadOnly\">\r\n  <ejs-datepicker\r\n    format='dd MMMM yyyy'\r\n    [formControl]=\"field.formControl\"\r\n    [placeholder]=\"field.fieldName\"\r\n    floatLabelType=\"Always\"\r\n    cssClass=\"e-outline\"\r\n    [allowEdit]=\"false\"\r\n  ></ejs-datepicker>\r\n</div>\r\n\r\n<div *ngIf=\"field.isReadOnly\">\r\n  <div class=\"read-only-label\">{{field.fieldName}}</div>\r\n  <div class=\"read-only-value\">{{field.fieldValue | _date }}</div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { RenderingField } from '../../form/form.component';\r\n\r\n@Component({\r\n  selector: 'app-date-field',\r\n  templateUrl: './date-field.component.html',\r\n  styleUrls: ['./date-field.component.css']\r\n})\r\nexport class DateFieldComponent implements OnInit {\r\n\r\n  @Input() field: RenderingField;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","import { Group } from './Group';\r\nimport { ResponsibleVisualState } from './ResponsibleVisualState';\r\nimport { User } from './User';\r\nimport { GroupAssignOption } from './GroupAssignOption';\r\nimport { Field } from '../Field/Field';\r\nimport { ResponsibleType } from './ResponsibleType';\r\nimport { ProcessStarterType, ProcessStarterTypeCode } from './ProcessStarterType';\r\nimport { ProcessStarterVisualState } from './ProcessStarterVisualState';\r\n\r\nexport class ProcessStarter {\r\n  constructor(\r\n    public processStarterType: ProcessStarterType,\r\n    public groups: Group[] = []\r\n  ) {\r\n\r\n    this.visualState = new ProcessStarterVisualState(this);\r\n  }\r\n\r\n  visualState: ProcessStarterVisualState;\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { FieldType } from '../../common/Models/Field/FieldType';\r\nimport { Group } from '../../common/Models/Responsible/Group';\r\nimport { User } from '../../common/Models/Responsible/User';\r\nimport { GroupAssignOption } from '../../common/Models/Responsible/GroupAssignOption';\r\nimport { ResponsibleType } from '../../common/Models/Responsible/ResponsibleType';\r\nimport { ProcessStarterType, ProcessStarterTypeCode } from 'src/app/common/Models/Responsible/ProcessStarterType';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserGroupService {\r\n\r\n  constructor() { }\r\n\r\n  async getGroups(): Promise<Group[]> {\r\n    return [\r\n      new Group('Finance', 'F9zVhZ'),\r\n      new Group('Accounting', '9JtbS9'),\r\n      new Group('Sales', 'OABlv4'),\r\n      new Group('Product Development 1', 'nYaVF8'),\r\n      new Group('Product Development 2', 'wcYC3s'),\r\n    ];\r\n  }\r\n\r\n  async getUsers(): Promise<User[]> {\r\n    return [\r\n      new User('Omer Kucuk', '9c44bz'),\r\n      new User('Baris Belgic', 'a'),\r\n      new User('Alperen Belgic', 'b'),\r\n      new User('Kemalettin Tugcu', 'c'),\r\n      new User('Fazil Husnu Daglarca', 'd'),\r\n      new User('Tacsiz Kral Pele', 'e'),\r\n      new User('Ringo Siseler', 'f'),\r\n      new User('a', 'g'),\r\n      new User('b', '3'),\r\n      new User('c', '4'),\r\n      new User('d', '6'),\r\n      new User('e', '5'),\r\n      new User('f', '8'),\r\n      new User('ag', '7'),\r\n      new User('bg', '9'),\r\n      new User('cg', 'aaa'),\r\n      new User('dg', 'sss'),\r\n      new User('eg', 'ddd'),\r\n      new User('fg', '9c44bz1'),\r\n      new User('gSg', '9c44b11z'),\r\n    ];\r\n  }\r\n\r\n\r\n  getGroupAssignOptions(): GroupAssignOption[] {\r\n    return [\r\n      new GroupAssignOption(\r\n        'PulledManually',\r\n        'A member of the group will manually pull the step.',\r\n        'When this step is reached, the step will be available to any member to pull and work'),\r\n\r\n      new GroupAssignOption(\r\n        'AssignRandomly',\r\n        'The step will automatically be assigned to a member.',\r\n        'When this step is reached, the system will assign this step to a random member automatically'),\r\n\r\n\r\n\r\n    ];\r\n\r\n  }\r\n\r\n  getDefaultGroupAssignOption(): GroupAssignOption {\r\n\r\n    return this.getGroupAssignOptions().find(gao => gao.optionCode === 'PulledManually');\r\n\r\n  }\r\n\r\n  getProcessStarterTypes(): ProcessStarterType[] {\r\n    return [\r\n      {\r\n        code: 'anyone',\r\n        name: 'Anyone can start',\r\n        tooltip: 'Anyone can start',\r\n        visualState: { enabled: true }\r\n      },\r\n      {\r\n        code: 'groupList',\r\n        name: 'Users from selected groups can start',\r\n        tooltip: 'Users from selected groups can start.',\r\n        visualState: { enabled: true }\r\n      },\r\n    ];\r\n  }\r\n\r\n  getDefaultProcessStarter(): ProcessStarterType {\r\n\r\n    return this.getProcessStarterTypes()[0];\r\n\r\n  }\r\n\r\n  getResponsibleTypes(): ResponsibleType[] {\r\n    return [\r\n      {\r\n        code: 'group',\r\n        name: 'Assign to a group',\r\n        tooltip: 'This step will be assigned to a user from the group you select. ',\r\n        isAdvancedOption: false,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'user',\r\n        name: 'Assign to a specific user',\r\n        tooltip: 'The step will be assigned to the user you select.',\r\n        isAdvancedOption: false,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'manager',\r\n        name: 'Assign to the manager',\r\n        tooltip: 'This step will be assigned to the manager of the previous action user.',\r\n        isAdvancedOption: false,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'groupList',\r\n        name: 'Assign to multiple groups parallelly',\r\n        tooltip: 'Multiple steps will be assigned to groups you select.',\r\n        isAdvancedOption: true,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'userList',\r\n        name: 'Assign to multiple users parallelly',\r\n        tooltip: 'Multiple steps will be assigned users you select.',\r\n        isAdvancedOption: true,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'userFromField',\r\n        name: 'Assign to the user selected in a user field',\r\n        tooltip: 'The step will be assigned to the user selected in a field from a previous step.',\r\n        isAdvancedOption: true,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'groupFromField',\r\n        name: 'Assign to the group selected in a group field',\r\n        tooltip: 'The step will be assigned to the group who is selected in a field from a previous step.',\r\n        isAdvancedOption: true,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'userListFromField',\r\n        name: 'Assign to multiple users selected in a multiple selection user field',\r\n        tooltip: 'Multiple steps will be assigned parallelly to users selected in a multi selection user field from a previous step.',\r\n        isAdvancedOption: true,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'groupListFromField',\r\n        name: 'Assign to multiple groups selected in a multiple selection group field',\r\n        tooltip: 'Multiple steps will be assigned parallelly to groups selected in a multi selection group field from a previous step.',\r\n        isAdvancedOption: true,\r\n        visualState: { enabled: true },\r\n      },\r\n\r\n    ];\r\n  }\r\n\r\n  getDefaultResponsibleType(): ResponsibleType {\r\n    return this.getResponsibleTypes()[0];\r\n  }\r\n}\r\n\r\n","import { ProcessItemComponent } from 'src/app/components/process-item/process-item.component';\r\nimport { ProcessItem } from './ProcessItem';\r\n\r\nexport class ProcessItemVisualState {\r\n\r\n  constructor(private processItem: ProcessItem) {\r\n\r\n  }\r\n\r\n  visible = false;\r\n\r\n  leftPxBeforeMove = 0;\r\n  topPxBeforeMove = 0;\r\n\r\n  isSelected = false;\r\n  component: ProcessItemComponent;\r\n\r\n  get width(): number {\r\n\r\n    return this.component?.getWidth() ?? 0;\r\n  }\r\n\r\n  get height(): number {\r\n    return this.component?.getHeight() ?? 0;\r\n  }\r\n\r\n\r\n  get middleX(): number {\r\n    return this.processItem.leftPx + ((this.component?.getWidth() ?? 0) / 2);\r\n  }\r\n\r\n  get middleY(): number {\r\n    return this.processItem.topPx + ((this.component?.getHeight() ?? 0) / 2);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FieldType } from '../../common/Models/Field/FieldType';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FieldTypeService {\r\n\r\n  constructor() { }\r\n\r\n  async getFieldTypes(): Promise<FieldType[]> {\r\n    return [\r\n\r\n      { name: 'Text', code: 'text' },\r\n      { name: 'Numeric', code: 'numeric' },\r\n      { name: 'Date', code: 'date' },\r\n      { name: 'Checkbox', code: 'checkbox' },\r\n      { name: 'File', code: 'file' },\r\n      { name: 'User', code: 'user' },\r\n      { name: 'Group', code: 'group' },\r\n\r\n    ];\r\n  }\r\n}\r\n","import { ProcessItem } from './ProcessItem';\r\n\r\nexport class ConditionItem extends ProcessItem {\r\n\r\n  public constructor(\r\n    id: string,\r\n    public justCreatedOnInterface: boolean,\r\n    retrievedFromServer: boolean = false,\r\n    conditionName: string,\r\n    topPx: number,\r\n    leftPx: number) {\r\n    super(id, justCreatedOnInterface, retrievedFromServer, topPx, leftPx, conditionName);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { SnackBarService } from '../UI/snack-bar.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private snackBar: SnackBarService\r\n  ) { }\r\n\r\n\r\n  private loggedIn = new BehaviorSubject<boolean>(true);\r\n\r\n  get isLoggedIn() {\r\n    return this.loggedIn.asObservable();\r\n  }\r\n\r\n  login(userName: string, password: string) {\r\n    if ([\r\n      '9296A486-5D25-4A40-97BA-F67CB6FBBBCC',\r\n      '208DDB53-FDF0-41C8-A2F1-535E975CED22',\r\n      '83B203D7-2030-4788-BE40-CB153563A979',\r\n      'C06960E7-203F-4265-85BA-A0B59863B82D'\r\n    ].some(i => i === userName)) {\r\n      localStorage.setItem('temp_user_id', userName);\r\n      this.loggedIn.next(true);\r\n      this.router.navigate(['/']);\r\n    }\r\n    else {\r\n      localStorage.setItem('temp_user_id', '');\r\n      this.snackBar.open('Invalid user id.');\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.loggedIn.next(false);\r\n    this.router.navigate(['/Login']);\r\n  }\r\n}\r\n","<div *ngIf=\"!field.isReadOnly\">\r\n  <ejs-textbox\r\n    [placeholder]=\"field.fieldName\"\r\n    floatLabelType=\"Always\"\r\n    [multiline]='true'\r\n    cssClass=\"e-outline\"\r\n    [formControl]=\"field.formControl\"\r\n  ></ejs-textbox>\r\n</div>\r\n\r\n<div *ngIf=\"field.isReadOnly\">\r\n  <div class=\"read-only-label\">{{field.fieldName}}</div>\r\n  <div class=\"read-only-value\">{{field.fieldValue }}</div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { RenderingField } from '../../form/form.component';\r\n\r\n@Component({\r\n  selector: 'app-text-field',\r\n  templateUrl: './text-field.component.html',\r\n  styleUrls: ['./text-field.component.css']\r\n})\r\nexport class TextFieldComponent implements OnInit {\r\n\r\n  @Input() field: RenderingField;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebService {\r\n\r\n  constructor(\r\n    private httpService: HttpService\r\n  ) { }\r\n\r\n  public GetProcessesQuery(): Observable<any> {\r\n    const endPoint = '/GetProcessesQuery/Get';\r\n    return this.httpService.get(endPoint);\r\n  }\r\n\r\n  public StartNewProcessCommand(ProcessId: string): Observable<any> {\r\n    const endPoint = '/StartNewProcessCommand/Post';\r\n    return this.httpService.post(endPoint, { ProcessId });\r\n  }\r\n\r\n  public SendUserActionCommand(\r\n    ProcessId: string,\r\n    ProcessInstanceId: string,\r\n    TaskInstanceId: string,\r\n    ActionId: string,\r\n    Notes: string,\r\n    DateFormValues: object,\r\n    TextFormValues: object): Observable<ServiceResult<any>> {\r\n    const endPoint = '/SendUserActionCommand/Post';\r\n    return this.httpService.post(\r\n      endPoint, { ProcessId, ProcessInstanceId, TaskInstanceId, ActionId, Notes, DateFormValues, TextFormValues });\r\n  }\r\n\r\n  public GetTaskInstanceQuery(ProcessId: string, ProcessInstanceId: string, TaskInstanceId: string): Observable<any> {\r\n    const endPoint = '/GetTaskInstanceQuery/Get';\r\n    return this.httpService.getByParams(endPoint, { ProcessId, ProcessInstanceId, TaskInstanceId });\r\n  }\r\n\r\n  public PullTaskFromGroupCommand(ProcessId: string, ProcessInstanceId: string, TaskInstanceId: string): Observable<any> {\r\n    const endPoint = '/PullTaskFromGroupCommand/Post';\r\n    return this.httpService.post(endPoint, { ProcessId, ProcessInstanceId, TaskInstanceId });\r\n  }\r\n\r\n  public GetUserTaskInstancesQuery() {\r\n    const endPoint = '/GetUserTaskInstancesQuery/Get';\r\n    return this.httpService.get(endPoint);\r\n  }\r\n\r\n}\r\n\r\nexport class ServiceResult<T>{\r\n  Value: T;\r\n\r\n  Successful: boolean;\r\n  IsBreakingError: boolean; // I don't exactly remember the purpose but, should be, business error or exception distinction.\r\n  OperationErrors: OperationErrorInformation[];\r\n}\r\n\r\nexport class OperationErrorInformation {\r\n  ErrorCode: string;\r\n  ErrorMessage: string;\r\n}\r\n\r\nexport class SendUserActionErrorCodes {\r\n  public static readonly InvalidFormValues = 'InvalidFormValues';\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EditTaskComponent } from './components/edit-task/edit-task.component';\r\nimport { ListProcessesComponent } from './components/list-processes/list-processes.component';\r\nimport { ListTasksComponent } from './components/list-tasks/list-tasks.component';\r\nimport { MyGroupsTasksComponent } from './components/my-groups-tasks/my-groups-tasks.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AuthGuard } from './services/Auth/auth.guard';\r\nimport { ProcessDesignerComponent } from './components/process-designer/process-designer.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    canActivate: [AuthGuard],\r\n    canActivateChild: [AuthGuard],\r\n    children: [\r\n      { path: '', component: ListProcessesComponent },\r\n      { path: 'NewProcess/:processId', component: EditTaskComponent },\r\n      { path: 'EditTask/:processId/:processInstanceId/:taskInstanceId', component: EditTaskComponent },\r\n      { path: 'MyInbox', component: ListTasksComponent },\r\n      { path: 'MyGroupsInbox', component: MyGroupsTasksComponent },\r\n      { path: 'Login', component: LoginComponent },\r\n      { path: 'ProcessDesigner', component: ProcessDesignerComponent }\r\n\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  //imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })], // this is corrected version of upgrade to v11. I wanted to keep default value. I keep this line for a while to observe if it is fine.\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, ValidatorFn } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormComponent implements OnInit {\r\n\r\n  @Input() form: any;\r\n\r\n  fields: RenderingField[] = [];\r\n\r\n  formGroup: FormGroup;\r\n\r\n  @Output() formValid = new EventEmitter<boolean>();\r\n\r\n  constructor(private cd: ChangeDetectorRef) { }\r\n\r\n  getValue(fieldFromBackend: any): any {\r\n\r\n    if (fieldFromBackend.FieldValue == null) {\r\n      return null;\r\n    }\r\n\r\n    if (fieldFromBackend.FieldType === 'Date') {\r\n\r\n      try {\r\n        const numbers: any[] = fieldFromBackend.FieldValue;\r\n        const year = numbers[0] as number;\r\n        const month = (numbers[1] as number) - 1;\r\n        const day = numbers[2] as number;\r\n\r\n        return new Date(year, month, day);\r\n      } catch {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    return fieldFromBackend.FieldValue;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.form?.Fields == null) {\r\n      return;\r\n    }\r\n\r\n    this.fields =\r\n      (this.form.Fields as any[]).map(f => {\r\n        const field = new RenderingField();\r\n        field.fieldId = f.FieldId;\r\n        field.fieldName = f.FieldName;\r\n        field.fieldType = f.FieldType;\r\n        field.isReadOnly = f.ReadOnly;\r\n        field.isRequired = f.Validation.IsRequired;\r\n        field.fieldValue = this.getValue(f);\r\n\r\n        return field;\r\n      });\r\n\r\n    this.formGroup = new FormGroup({});\r\n\r\n    this.fields.forEach(field => {\r\n      this.formGroup.addControl(field.fieldName, field.formControl);\r\n    });\r\n\r\n    this.cd.detectChanges();\r\n\r\n    this.formValid.next(this.formGroup.valid);\r\n\r\n    this.formGroup.valueChanges.subscribe({\r\n      next: v => {\r\n\r\n        this.formValid.next(this.formGroup.valid);\r\n\r\n        this.cd.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  getReturningForm(): ReturningForm {\r\n    const returningForm = new ReturningForm();\r\n\r\n    this.fields.forEach(f => {\r\n      if (f.fieldType === 'Date') {\r\n        // Date values are kept as DateTime (containing date and time parts)\r\n        // and they are considered in local time at midnight\r\n        // They are converted to UTC.\r\n        // and in some local time zones (such as BST) they have yesterday's Date after conversion\r\n        // In order to prevent this, we pass them as integer arrays as [year, month(January=1), day]\r\n        let dateValueArray: number[] = null;\r\n\r\n        if (f.fieldValue != null) {\r\n          const dateValue: Date = f.fieldValue as Date;\r\n          dateValueArray = [dateValue.getFullYear(), dateValue.getMonth() + 1, dateValue.getDate()];\r\n        }\r\n\r\n        returningForm.DateValues[f.fieldId] = dateValueArray;\r\n      }\r\n      else if (f.fieldType === 'Text') {\r\n        returningForm.TextValues[f.fieldId] = f.fieldValue;\r\n      }\r\n    });\r\n\r\n    return returningForm;\r\n  }\r\n}\r\n\r\nexport class ReturningForm {\r\n  DateValues: any = {};\r\n  TextValues: any = {};\r\n}\r\n\r\nexport class RenderingField {\r\n\r\n  constructor() {\r\n    this._formControl = new FormControl();\r\n\r\n    this.formControl.valueChanges.subscribe({\r\n      next: v => {\r\n        // if form control triggers a change we set the field (not the property)\r\n        // the property setter also sets to the formControl\r\n\r\n        if (this._fieldValue !== v) {\r\n          this._fieldValue = v;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  fieldId: string;\r\n  _fieldName: string='';\r\n  get fieldName(): string{\r\n      return this._fieldName;\r\n  }\r\n  set fieldName(value:string){\r\n      this._fieldName = value;\r\n  }\r\n  fieldType: string;\r\n  isReadOnly: boolean;\r\n\r\n  private _fieldValue: any = null;\r\n  get fieldValue(): any {\r\n    return this._fieldValue;\r\n  }\r\n  set fieldValue(value: any) {\r\n    if (this._fieldValue !== value) {\r\n      this._fieldValue = value;\r\n      this.formControl.setValue(value);\r\n    }\r\n  }\r\n\r\n  private _formControl: FormControl;\r\n  get formControl(): FormControl {\r\n    return this._formControl;\r\n  }\r\n\r\n  private _isRequired: boolean = false;\r\n  get isRequired(): boolean {\r\n    return this._isRequired;\r\n  }\r\n  set isRequired(value: boolean) {\r\n    this._isRequired = value;\r\n\r\n    // call this for any validation change\r\n    this.updateValidators();\r\n\r\n  }\r\n\r\n  // mobile specific\r\n  get visibleFieldName(): string {\r\n      return this.fieldName + (this.isRequired ? \" *\":\"\");\r\n  }\r\n\r\n  updateValidators() {\r\n    this._formControl.clearValidators();\r\n\r\n    const validators: ValidatorFn[] = [];\r\n\r\n    if (this._isRequired) {\r\n      validators.push(Validators.required);\r\n    }\r\n\r\n    if (validators.length > 0) {\r\n      this._formControl.setValidators(validators);\r\n    }\r\n\r\n    this._formControl.updateValueAndValidity();\r\n  }\r\n}\r\n","<div\r\n  *ngFor=\"let field of fields\"\r\n  class=\"field-wrapper\"\r\n>\r\n  <app-generic-field [field]=\"field\"></app-generic-field>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RandomIdGenerator {\r\n  generate(): string {\r\n    return Math.random().toString(36).substr(2, 9);\r\n  }\r\n}\r\n","import { enableProdMode, LOCALE_ID } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule, {\r\n  providers: [{ provide: LOCALE_ID, useValue: 'en-GB' }]\r\n})\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}