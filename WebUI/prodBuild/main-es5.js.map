{"version":3,"sources":["webpack:///src/app/common/Models/Responsible/ResponsibleVisualState.ts","webpack:///src/app/services/Auth/auth.guard.ts","webpack:///src/app/common/Models/ProcessItems/StepItem.ts","webpack:///src/app/common/Models/ProcessItems/Link.ts","webpack:///src/app/common/Pipes/custom-date-time.pipe.ts","webpack:///src/app/components/left-menu/left-menu.component.html","webpack:///src/app/components/left-menu/left-menu.component.ts","webpack:///src/app/common/Models/Responsible/User.ts","webpack:///src/app/components/process-item-settings-components/field-definition-editor/field-definition-editor.component.html","webpack:///src/app/components/process-item-settings-components/field-definition-editor/field-definition-editor.component.ts","webpack:///src/app/services/Web/web.service.adress.ts","webpack:///src/environments/environment.ts","webpack:///src/app/common/Directives/click-stop-propagation.directive.ts","webpack:///src/app/components/list-tasks/list-tasks.component.html","webpack:///src/app/components/list-tasks/list-tasks.component.ts","webpack:///src/app/components/edit-task/edit-task.component.ts","webpack:///src/app/components/edit-task/edit-task.component.html","webpack:///src/app/common/Models/Responsible/Responsible.ts","webpack:///src/app/components/process-item-settings-components/step-form-fields/step-form-fields.component.html","webpack:///src/app/components/process-item-settings-components/step-form-fields/step-form-fields.component.ts","webpack:///src/app/components/list-processes/list-processes.component.html","webpack:///src/app/components/list-processes/list-processes.component.ts","webpack:///src/app/components/my-groups-tasks/my-groups-tasks.component.html","webpack:///src/app/components/my-groups-tasks/my-groups-tasks.component.ts","webpack:///src/app/components/process-item-settings/process-item-settings.component.html","webpack:///src/app/components/process-item-settings/process-item-settings.component.ts","webpack:///src/app/common/Models/Responsible/ProcessStarterVisualState.ts","webpack:///src/app/components/process-item/process-item.component.ts","webpack:///src/app/components/process-item/process-item.component.html","webpack:///src/app/services/Web/http.service.ts","webpack:///src/app/components/process-designer/process-designer.component.ts","webpack:///src/app/components/process-designer/process-designer.component.html","webpack:///src/app/services/Web/auth-key.interceptor.ts","webpack:///src/app/components/task-completed/task-completed.component.html","webpack:///src/app/components/task-completed/task-completed.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/common/Models/Field/FieldInStep.ts","webpack:///src/app/common/Models/Field/Field.ts","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/common/Models/ProcessItems/Process.ts","webpack:///src/app/app.module.ts","webpack:///src/app/common/Models/ProcessItems/ProcessItem.ts","webpack:///src/app/common/Models/ProcessItems/StepItemVisualState.ts","webpack:///src/app/components/fields/generic-field/generic-field.component.html","webpack:///src/app/components/fields/generic-field/generic-field.component.ts","webpack:///src/app/common/Models/Responsible/Group.ts","webpack:///src/app/components/process-item-settings-components/responsible/responsible.component.html","webpack:///src/app/components/process-item-settings-components/responsible/responsible.component.ts","webpack:///src/app/material-module.ts","webpack:///src/app/common/Models/PropertyChangedTypes.ts","webpack:///src/app/ui-controls-module.ts","webpack:///src/app/common/Models/Responsible/GroupAssignOption.ts","webpack:///src/app/services/UI/snack-bar.service.ts","webpack:///src/app/components/fields/date-field/date-field.component.html","webpack:///src/app/components/fields/date-field/date-field.component.ts","webpack:///src/app/common/Models/Responsible/ProcessStarter.ts","webpack:///src/app/services/Business/userGroup.service.ts","webpack:///src/app/common/Models/ProcessItems/ProcessItemVisualState.ts","webpack:///src/app/services/Business/field-type.service.ts","webpack:///src/app/common/Models/ProcessItems/ConditionItem.ts","webpack:///src/app/services/Auth/auth.service.ts","webpack:///src/app/components/fields/text-field/text-field.component.html","webpack:///src/app/components/fields/text-field/text-field.component.ts","webpack:///src/app/services/Web/web.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/components/form/form.component.ts","webpack:///src/app/components/form/form.component.html","webpack:///src/app/services/Business/general.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ResponsibleVisualState","responsible","showAdvancedOptions","groupTypeName","userTypeName","groupListTypeName","userListTypeName","groupFromFieldTypeName","userFromFieldTypeName","groupListFromFieldTypeName","userListFromFieldTypeName","responsibleType","code","isTypeGroup","isTypeUser","group","isTypeGroupList","groups","length","isTypeGroupFromField","groupField","isTypeGroupListFromField","groupFieldList","AuthGuard","router","childRoute","state","canActivate","next","url","indexOf","userId","localStorage","getItem","some","i","navigate","StepItem","id","justCreatedOnInterface","retrievedFromServer","stepName","topPx","leftPx","defaultResponsibleType","defaultGroupAssignOption","fieldsInStep","_visualState","Link","init","actionName","Object","assign","x1","startItem","x2","endItem","CustomDateTimePipe","date","type","Date","toLocaleDateString","year","month","day","toLocaleTimeString","hour","minute","CustomDatePipe","LeftMenuComponent","authService","isLoggedIn$","isLoggedIn","User","userName","FieldDefinitionEditorComponent","_fieldTypes","value","fieldInStep","WebServiceAddress","location","hostname","environment","production","ClickStopPropagationDirective","event","stopPropagation","ListTasksComponent","webService","tasks","GetUserTaskInstancesQuery","subscribe","r","Value","TaskModel","processName","title","details","processId","processInstanceId","taskInstanceId","taskState","form","assigneeName","assignmentStates","assignedToCurrentUser","assignedToGroup","assignedToAnotherUser","assignedToCurrentUsersGroup","otherTasks","primaryActions","filter","a","ActionType","secondaryActions","warnedActions","TaskCompletedModel","taskName","processCompleted","processCanceled","EditTaskComponent","activatedRoute","snackBar","showCompletedMessage","otherTasksShown","formErrorMessage","isFormValid","params","initialize","taskModel","taskCompletedModel","StartNewProcesses","GetTaskInstanceQuery","ProcessName","TaskName","TaskState","Form","actions","Actions","AssigneeName","UserTaskState","AssignedToAnotherUser","CanEdit","AssignedToCurrentUsersGroup","AssignedToGroup","OtherTasks","StartNewProcessCommand","ProcessInstanceId","TaskInstanceId","actionId","returningForm","formComponent","getReturningForm","SendUserActionCommand","DateValues","TextValues","Successful","invalidFormValuesError","OperationErrors","find","e","ErrorCode","InvalidFormValues","console","log","ErrorMessage","open","AssignedName","NewTaskInstanceId","NewTaskName","HasProcessCompleted","HasProcessCanceled","PullTaskFromGroupCommand","Responsible","groupAssignOption","user","users","userField","userFieldList","visualState","StepFormFieldsComponent","fieldTypes","currentFieldChanged","isStepFormDesignerVisible","_currentFieldInStep","val","emit","processItem","_processItem","stepItem","index","arr","deleted","addNewFieldResult","process","addNewField","currentFieldInStep","createdFieldInStep","setTimeout","formFieldsViewChildren","last","nativeElement","scrollIntoView","behavior","readOnly","openFieldEditViewForNewField","openAddExistingFieldView","ListProcessesComponent","GetProcessesQuery","processes","Processes","MyGroupsTasksComponent","groupsTasks","GroupsTaskInstanceList","Inject","ProcessItemSettingsComponent","fieldTypeService","visible","processItems","array","getFieldTypes","then","v","stepFormFieldsComponent","resetViewMode","$event","selectorFunc","toLowerCase","fieldDefinitionEditor","show","ProcessStarterVisualState","processStarter","processStarterType","ProcessItemComponent","el","linkCreated","settingDialogueOpening","isSettingsVisible","showProcessItemNameEdit","that","processItemNameTextArea","focus","select","component","Math","round","middleY","height","offsetWidth","offsetHeight","keyCode","which","HttpService","http","webServiceAddress","get","source","getServiceRootPath","objectToPost","httpOptions","headers","post","HttpAuthInterceptorService","req","authToken","authReq","clone","set","handle","ProcessDesignerComponent","cd","randomIdGenerator","userGroupService","selectedProcessItems","isLinkBeingCreated","lineCreationStartX","lineCreationStartY","lineCreationEndX","lineCreationEndY","startedLinkItem","links","forEach","link","push","change","changeMode","shift","isFirstItem","element","detach","addNewStep","detectChanges","reattach","selected","isSelected","item","deselectAll","selectedItem","arrangeHorizontalDistances","lastItem","slice","newItem","generate","getDefaultResponsibleType","getDefaultGroupAssignOption","addItem","isClickForCompletingLink","handleEndLinkProcess","isLeftClick","clickedForDragDrop","isSelectedBeforeClick","setSelection","leftPxBeforeMove","topPxBeforeMove","lastXRecorded","clientX","lastYRecorded","clientY","document","onmouseup","onmousemove","$onMouseMoveEvent","xShift","yShift","sortedProcessItems","sort","b","updateOrder","buffer","previousItem","currentItem","minLeft","width","$clickedEvent","middleX","drawingBoxRectangle","drawingBox","getBoundingClientRect","left","top","previousX","previousY","ev","shiftX","shiftY","recalculateViewLinks","settingItemComponent","arg","key","addCondition","clickBox","AuthKeyInterceptor","request","tempUserId","TaskCompletedComponent","AppComponent","FieldInStep","field","_readOnly","isRequired","otherFieldInStepsSubscripbtions","editableFieldUsedInAnotherStep","propertyChanged","justDeleted","fieldInStepList","subscribeFieldInStepList","unsubscribe","subscription","pipe","propertyName","calculateEditableFieldUsedInAnotherStep","oldValue","f","Field","_id","_name","_fieldType","numericFieldSettings","hasMinValueRestriction","minValue","hasMaxValueRestriction","maxValue","textFieldSettings","multiline","numberOfLines","hasMinNumberOfChars","minNumberOfChars","hasMaxNumberOfChars","maxNumberOfChars","setRegexValidation","regex","generalFieldSettings","GeneralFieldSettings","_multiple","LoginComponent","busy","username","password","logout","login","Process","fields","userTypeFields","groupTypeFields","multipleUserTypeFields","multipleGroupTypeFields","getDefaultProcessStarter","setAllUserTypeFields","newStep","fieldAddedOrRemovedWithUserOrGroupFieldType","changedValue","fieldType","fieldFieldTypeOrGeneralFieldSettingsChanged","itemPropertyChanged","getArray","multipleValue","appearance","AppModule","provide","useValue","useClass","multi","ProcessItem","text","deletable","StepItemVisualState","GenericFieldComponent","Group","groupName","groupId","ResponsibleComponent","allResponsibleTypes","showingResponsibleTypes","selectedUserIds","groupAssignOptions","_selectedGroupIds","assignMultiselectValues","getGroups","getUsers","getGroupAssignOptions","getResponsibleTypes","subscribeFieldChanges","initialise_Responsible_MultipleSelection_Variables","setShowingResponsibleTypes","parentObjectOfModel","fieldNameOfModel","idFieldNameInModel","selectableListOfItems","selectedItemIds","selectedItems","selectedItemId","map","u","selectedGroupIds","g","rt","isAdvancedOption","updateEnabledResponsibleTypes","fieldChangeSubscription","fc","enabled","groupFieldSelectionWithNoGroupField","userFieldSelectionWithNoUserField","groupListSelectionWithNoRelevantField","userListWithSelectionNoRelevantField","MaterialModule","ArrayChanged","sender","ObservableArray","owner","itemSubscriptions","Map","newArray","subscribeItem","unSubscribeItem","orderChangeExist","nameof","name","PC","newValue","UiControlsModule","GroupAssignOption","optionCode","optionText","optionTooltip","SnackBarService","message","duration","matSnackBarConfig","DateFieldComponent","ProcessStarter","UserGroupService","gao","tooltip","getProcessStarterTypes","ProcessItemVisualState","getWidth","getHeight","FieldTypeService","ConditionItem","conditionName","AuthService","loggedIn","asObservable","setItem","TextFieldComponent","WebService","httpService","endPoint","ProcessId","ActionId","Notes","DateFormValues","TextFormValues","getByParams","ServiceResult","OperationErrorInformation","SendUserActionErrorCodes","routes","path","canActivateChild","children","AppRoutingModule","forRoot","FormComponent","formValid","fieldFromBackend","FieldValue","FieldType","numbers","Fields","RenderingField","fieldId","FieldId","fieldName","FieldName","isReadOnly","ReadOnly","Validation","IsRequired","fieldValue","getValue","formGroup","addControl","formControl","valid","valueChanges","ReturningForm","dateValueArray","dateValue","getFullYear","getMonth","getDate","_fieldName","_fieldValue","_isRequired","_formControl","setValue","updateValidators","clearValidators","validators","required","setValidators","updateValueAndValidity","RandomIdGenerator","random","toString","substr","bootstrapModule","providers","err","error","webpackEmptyAsyncContext","Promise","resolve","Error","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Responsible } from './Responsible';\r\nimport { ResponsibleTypeCode } from './ResponsibleType';\r\n\r\nexport class ResponsibleVisualState {\r\n  constructor(private responsible: Responsible) { }\r\n\r\n  get isTypeGroup(): boolean {\r\n    return this.responsible?.responsibleType?.code == this.groupTypeName;\r\n  }\r\n\r\n  get isTypeUser(): boolean {\r\n    return this.responsible?.responsibleType?.code == this.userTypeName;\r\n  }\r\n\r\n  get isTypeGroupList(): boolean {\r\n    return this.responsible?.responsibleType?.code == this.groupListTypeName;\r\n  }\r\n\r\n  get isTypeUserList(): boolean {\r\n    return this.responsible?.responsibleType?.code == this.userListTypeName;\r\n  }\r\n\r\n  get isTypeGroupFromField(): boolean {\r\n    return this.responsible?.responsibleType?.code == this.groupFromFieldTypeName;\r\n  }\r\n\r\n  get isTypeUserFromField(): boolean {\r\n    return this.responsible?.responsibleType?.code == this.userFromFieldTypeName;\r\n  }\r\n\r\n  get isTypeGroupListFromField(): boolean {\r\n    return this.responsible?.responsibleType?.code == this.groupListFromFieldTypeName;\r\n  }\r\n\r\n  get isTypeUserListFromField(): boolean {\r\n    return this.responsible.responsibleType?.code == this.userListFromFieldTypeName;\r\n  }\r\n\r\n  get show_ShowHideAdvancedOptions(): boolean {\r\n    return this.isTypeGroup || this.isTypeUser;\r\n  }\r\n\r\n  get showGroupAssignOptions(): boolean {\r\n\r\n    if (this.isTypeGroup && this.responsible.group != null) {\r\n      return true;\r\n    }\r\n\r\n    if (this.isTypeGroupList && this.responsible.groups.length > 0) {\r\n      return true;\r\n    }\r\n\r\n    if (this.isTypeGroupFromField && this.responsible.groupField != null) {\r\n      return true;\r\n    }\r\n\r\n    if (this.isTypeGroupListFromField && this.responsible.groupFieldList.length > 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n\r\n  }\r\n\r\n  showAdvancedOptions = false;\r\n\r\n  readonly groupTypeName: ResponsibleTypeCode = 'group';\r\n  readonly userTypeName: ResponsibleTypeCode = 'user';\r\n  readonly groupListTypeName: ResponsibleTypeCode = 'groupList';\r\n  readonly userListTypeName: ResponsibleTypeCode = 'userList';\r\n  readonly groupFromFieldTypeName: ResponsibleTypeCode = 'groupFromField';\r\n  readonly userFromFieldTypeName: ResponsibleTypeCode = 'userFromField';\r\n  readonly groupListFromFieldTypeName: ResponsibleTypeCode = 'groupListFromField';\r\n  readonly userListFromFieldTypeName: ResponsibleTypeCode = 'userListFromField';\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router, CanActivateChild } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n  constructor(private router: Router) {\r\n  }\r\n  canActivateChild(\r\n    childRoute: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    return this.canActivate(childRoute, state);\r\n  }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    if (state.url === '/Login'\r\n      || state.url === '/PrivacyPolicy'\r\n      || state.url === '/ForgotPassword'\r\n      || state.url.indexOf('/Register/') === 0\r\n      || state.url.indexOf('/SetupNewPassword/') === 0) {\r\n      // clean auth code\r\n      return true;\r\n    }\r\n\r\n    const userId = localStorage.getItem('temp_user_id');\r\n\r\n    if ([\r\n      '9296A486-5D25-4A40-97BA-F67CB6FBBBCC',\r\n      '208DDB53-FDF0-41C8-A2F1-535E975CED22',\r\n      '83B203D7-2030-4788-BE40-CB153563A979',\r\n      'C06960E7-203F-4265-85BA-A0B59863B82D'\r\n    ].some(i => i === userId)) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/Login']);\r\n\r\n    return false;\r\n  }\r\n\r\n}\r\n","import { ProcessItem } from './ProcessItem';\r\nimport { StepItemVisualState } from './StepItemVisualState';\r\nimport { FieldInStep } from '../Field/FieldInStep';\r\nimport { Responsible } from '../Responsible/Responsible';\r\nimport { ResponsibleType } from '../Responsible/ResponsibleType';\r\nimport { GroupAssignOption } from '../Responsible/GroupAssignOption';\r\n\r\nexport class StepItem extends ProcessItem {\r\n\r\n  responsible: Responsible;\r\n  fieldsInStep: FieldInStep[] = [];\r\n\r\n  public constructor(\r\n    id: string,\r\n    public justCreatedOnInterface: boolean,\r\n    retrievedFromServer: boolean = false,\r\n    stepName: string,\r\n    topPx: number,\r\n    leftPx: number,\r\n    defaultResponsibleType: ResponsibleType,\r\n    defaultGroupAssignOption: GroupAssignOption) {\r\n    super(id, justCreatedOnInterface, retrievedFromServer, topPx, leftPx, stepName);\r\n\r\n    this.responsible = new Responsible(defaultResponsibleType, null, defaultGroupAssignOption);\r\n\r\n    this._visualState = new StepItemVisualState(this);\r\n  }\r\n\r\n  get visualState(): StepItemVisualState {\r\n    return this._visualState;\r\n  }\r\n}\r\n","import { ProcessItem } from './ProcessItem';\r\n\r\nexport class Link {\r\n\r\n  public constructor(init?: Partial<Link>) {\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  actionName = '';\r\n  startItem: ProcessItem;\r\n  endItem: ProcessItem;\r\n\r\n  get color() {\r\n    const x1 = this.startItem.leftPx;\r\n    const x2 = this.endItem.leftPx;\r\n\r\n    return (x2 > x1) ? 'green' : 'indianred';\r\n\r\n    // TODO: returning value should be static. it should be calculated in each relevant change.\r\n\r\n    // return 'green';\r\n\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport type DateTimeType = 'long' | 'date' | 'time';\r\n\r\n@Pipe({\r\n  name: '_dateTime'\r\n})\r\nexport class CustomDateTimePipe implements PipeTransform {\r\n\r\n  transform(date: Date | string, type: DateTimeType = 'long'): string {\r\n\r\n    if (date == null) {\r\n      return '';\r\n    }\r\n\r\n    // later on, if us will be introduced, we can make a check maybe from user's profile or browser\r\n    // and, use en-US for those users.\r\n\r\n    date = new Date(date);  // if orginal type was a string\r\n    return date.toLocaleDateString('en-GB', { year: 'numeric', month: 'short', day: 'numeric' }) + ', ' +\r\n      date.toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit' });\r\n  }\r\n}\r\n\r\n@Pipe({\r\n  name: '_date'\r\n})\r\nexport class CustomDatePipe implements PipeTransform {\r\n\r\n  transform(date: Date | string, type: DateTimeType = 'long'): string {\r\n\r\n    if (date == null) {\r\n      return '';\r\n    }\r\n\r\n    // later on, if us will be introduced, we can make a check maybe from user's profile or browser\r\n    // and, use en-US for those users.\r\n\r\n    date = new Date(date);  // if orginal type was a string\r\n    return date.toLocaleDateString('en-GB', { year: 'numeric', month: 'long', day: 'numeric' });\r\n  }\r\n}\r\n","<div\r\n  class=\"left-menu-wrapper\"\r\n  *ngIf=\"isLoggedIn$ | async as isLoggedIn\"\r\n>\r\n\r\n  <img\r\n    class=\"image\"\r\n    src=\"/assets/images/logo.png\"\r\n  >\r\n\r\n  <a [routerLink]=\"['/']\">\r\n    <div\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"start center\"\r\n    >\r\n      <div class=\"menu-icon\">\r\n        <i class=\"far fa-plus-square\"></i>\r\n\r\n      </div>\r\n      <div class=\"menu-text\">New flow</div>\r\n    </div>\r\n  </a>\r\n\r\n\r\n\r\n\r\n\r\n  <a [routerLink]=\"['/MyInbox']\">\r\n    <div\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"start center\"\r\n    >\r\n      <div class=\"menu-icon\">\r\n        <i class=\"fas fa-tasks\"></i>\r\n\r\n      </div>\r\n      <div class=\"menu-text\">My Tasks</div>\r\n    </div>\r\n  </a>\r\n  <a [routerLink]=\"['/MyGroupsInbox']\">\r\n    <div\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"start center\"\r\n    >\r\n      <div class=\"menu-icon\">\r\n        <i class=\"fas fa-users\"></i>\r\n\r\n      </div>\r\n      <div class=\"menu-text\">Group Tasks</div>\r\n    </div>\r\n  </a>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../services/Auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-left-menu',\r\n  templateUrl: './left-menu.component.html',\r\n  styleUrls: ['./left-menu.component.css']\r\n})\r\nexport class LeftMenuComponent implements OnInit {\r\n\r\n  isLoggedIn$: Observable<boolean>;\r\n\r\n  constructor(authService: AuthService) {\r\n    this.isLoggedIn$ = authService.isLoggedIn;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export class User {\r\n  constructor(public readonly userName: string, public readonly userId: string) {\r\n  }\r\n}\r\n","<form\n  #fieldsForm=\"ngForm\"\n  *ngIf=\"fieldInStep && fieldTypes\"\n  class=\"wrapper\"\n>\n\n  <div fxLayout=\"column\">\n\n    <div>* This field is used in multiple steps and these settings will be shared acrross steps. (show this only if\n      there are multiple editiable uses of this field accross steps)</div>\n    <!-- todo:\nis readonly ve is required'i list'e tasi\nbu sayfadan cikart\nbu sayfayi calistir falan  -->\n    <div class=\"field-edit-title\">\n      Field Editor\n      <i\n        class=\"fas fa-info-circle\"\n        matTooltip=\"Settings for fields of the form. \"\n      ></i>\n    </div>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Field Name</mat-label>\n      <input\n        [(ngModel)]=\"fieldInStep.field.name\"\n        name=\"name-{{fieldInStep.field.id}}\"\n        matInput\n        #input\n      >\n    </mat-form-field>\n\n    <ejs-dropdownlist\n      placeholder=\"Field Type\"\n      name=\"fieldType-{{fieldInStep.field.id}}\"\n      [dataSource]='fieldTypes'\n      [ngModel]=\"fieldInStep?.field?.fieldType?.code\"\n      [fields]=\"{value:'code', text:'name' }\"\n      (change)='fieldInStep.field.fieldType = $event.itemData'\n      cssClass=\"e-outline\"\n      floatLabelType=\"Always\"\n    >\n    </ejs-dropdownlist>\n\n  </div>\n\n  <div\n    fxLayout=\"column\"\n    *ngIf=\"fieldInStep.field.fieldType\"\n  >\n\n    <mat-selection-list\n      [multiple]=\"false\"\n      (selectionChange)=\"fieldInStep.readOnly = $event.option.value\"\n      class=\"detailed-settings-item-wrapper\"\n    >\n      <mat-list-option\n        [value]=\"false\"\n        [selected]=\"!fieldInStep.readOnly\"\n      >\n        Editable\n      </mat-list-option>\n      <mat-list-option\n        [value]=\"true\"\n        [selected]=\"fieldInStep.readOnly\"\n      >\n        Readonly\n      </mat-list-option>\n    </mat-selection-list>\n\n    <mat-selection-list\n      *ngIf=\"!fieldInStep.readOnly\"\n      [multiple]=\"false\"\n      (selectionChange)=\"fieldInStep.isRequired = $event.option.value\"\n      class=\"detailed-settings-item-wrapper\"\n    >\n      <mat-list-option\n        [value]=\"false\"\n        [selected]=\"!fieldInStep.isRequired\"\n      >\n        Can be left empty\n      </mat-list-option>\n\n      <mat-list-option\n        [value]=\"true\"\n        [selected]=\"fieldInStep.isRequired\"\n      >\n        Value required\n      </mat-list-option>\n\n\n    </mat-selection-list>\n\n  </div>\n\n  <ng-container *ngIf=\"fieldInStep.field.fieldType\">\n\n    <div *ngIf=\"fieldInStep.field.fieldType.code == 'numeric'\">\n\n\n      <div\n        fxLayout=\"column\"\n        class=\"detailed-settings-item\"\n      >\n        <mat-checkbox\n          class=\"detailed-settings-item-wrapper\"\n          color=\"primary\"\n          [(ngModel)]=\"fieldInStep.field.numericFieldSettings.hasMinValueRestriction\"\n          name=\"hasMinValueRestriction-{{fieldInStep.field.id}}\"\n        >Set Minimum Value?\n        </mat-checkbox>\n\n        <mat-form-field\n          appearance=\"outline\"\n          *ngIf=\"fieldInStep.field.numericFieldSettings.hasMinValueRestriction\"\n        >\n          <mat-label>Minimum value</mat-label>\n          <input\n            [(ngModel)]=\"fieldInStep.field.numericFieldSettings.minValue\"\n            name=\"minValue-{{fieldInStep.field.id}}\"\n            matInput\n            type=\"number\"\n          >\n        </mat-form-field>\n      </div>\n\n      <div\n        fxLayout=\"column\"\n        class=\"detailed-settings-item\"\n      >\n        <mat-checkbox\n          class=\"detailed-settings-item-wrapper\"\n          color=\"primary\"\n          [(ngModel)]=\"fieldInStep.field.numericFieldSettings.hasMaxValueRestriction\"\n          name=\"hasMaxValueRestriction-{{fieldInStep.field.id}}\"\n        >Set Maximum Value?\n        </mat-checkbox>\n\n        <mat-form-field\n          appearance=\"outline\"\n          *ngIf=\"fieldInStep.field.numericFieldSettings.hasMaxValueRestriction\"\n        >\n          <mat-label>Maximum value</mat-label>\n          <input\n            [(ngModel)]=\"fieldInStep.field.numericFieldSettings.maxValue\"\n            name=\"maxValue-{{fieldInStep.field.id}}\"\n            matInput\n            type=\"number\"\n          >\n        </mat-form-field>\n      </div>\n\n    </div>\n    <div *ngIf=\"fieldInStep.field.fieldType.code === 'text'\">\n      text settings: multiline, max character, min character\n    </div>\n\n    <div\n      class=\"detailed-settings-item-wrapper\"\n      *ngIf=\"fieldInStep.field.fieldType.code === 'user' || fieldInStep.field.fieldType.code === 'group'\"\n    >\n\n      <mat-selection-list\n        [multiple]=\"false\"\n        (selectionChange)=\"fieldInStep.field.generalFieldSettings.multipleValue = $event.option.value\"\n      >\n        <mat-list-option\n          [value]=\"false\"\n          [selected]=\"!fieldInStep.field.generalFieldSettings.multipleValue\"\n        >\n          Single item selection\n        </mat-list-option>\n        <mat-list-option\n          [value]=\"true\"\n          [selected]=\"fieldInStep.field.generalFieldSettings.multipleValue\"\n        >\n          Multiple items selection\n        </mat-list-option>\n      </mat-selection-list>\n\n    </div>\n\n  </ng-container>\n\n</form>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FieldInStep } from 'src/app/common/Models/Field/FieldInStep';\nimport { FieldType } from 'src/app/common/Models/Field/FieldType';\n// import { Input } from '@syncfusion/ej2-angular-inputs/src';\n\n@Component({\n  selector: 'app-field-definition-editor',\n  templateUrl: './field-definition-editor.component.html',\n  styleUrls: ['./field-definition-editor.component.css']\n})\nexport class FieldDefinitionEditorComponent implements OnInit {\n  @Input() fieldInStep: FieldInStep;\n\n  _fieldTypes: FieldType[];\n  @Input() set fieldTypes(value: FieldType[]) {\n    this._fieldTypes = value;\n  }\n  get fieldTypes() {\n    return this._fieldTypes;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  show(fieldInStep: FieldInStep) {\n    this.fieldInStep = fieldInStep;\n  }\n\n  hide() {\n    this.fieldInStep = null;\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebServiceAddress {\r\n  get(): string {\r\n\r\n    if (location.hostname === 'localhost') {\r\n      return 'https://localhost:5001/api';\r\n    } else {\r\n      return '/api';\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appClickStopPropagation]'\r\n})\r\nexport class ClickStopPropagationDirective {\r\n\r\n  constructor() { }\r\n\r\n  @HostListener('click', ['$event'])\r\n  public onClick(event: any): void {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event'])\r\n  public onmMouseDown(event: any): void {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  // @HostListener('mouseup', ['$event'])\r\n  // public onmMouseUp(event: any): void {\r\n  //   event.stopPropagation();\r\n  // }\r\n}\r\n","<div\r\n  fxLayout=\"column\"\r\n  fxLayoutAlign=\"center center\"\r\n>\r\n  <ng-container *ngIf=\"tasks\">\r\n    <div style=\"width: 500px;\">\r\n      <div class=\"my-inbox-label\">My Inbox!</div>\r\n\r\n      <div\r\n        class=\"no-task-message\"\r\n        *ngIf=\"!tasks.UserTaskInstanceList || tasks.UserTaskInstanceList.length == 0\"\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"center center\"\r\n      >\r\n        <div class=\"task-success-icon\"><i class=\"fa fa-check-circle\"></i></div>\r\n        <div>You don't have any assigned task. </div>\r\n      </div>\r\n\r\n\r\n      <div\r\n        *ngFor=\"let task of tasks.UserTaskInstanceList\"\r\n        class=\"task-item\"\r\n        [routerLink]=\"['/EditTask', task.ProcessId, task.ProcessInstanceId, task.TaskInstanceId]\"\r\n      >\r\n\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutAlign=\"space-between center\"\r\n        >\r\n          <div fxLayout=\"column\">\r\n            <div class=\"task-title\">{{task.TaskName}}</div>\r\n            <div class=\"process-title\">in <b>{{task.ProcessName}}</b></div>\r\n          </div>\r\n          <div\r\n            fxLayout=\"column\"\r\n            class=\"due-date-column\"\r\n          >\r\n            <ng-container *ngIf=\"task.DueDate\">\r\n              <ng-container *ngIf=\"task.DaysToDue == 0\">\r\n                <div>due</div>\r\n                <div class=\"due-day-value\"><b>Today</b></div>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"task.DaysToDue > 0\">\r\n                <div>due in</div>\r\n                <div class=\"due-day-value\"><b>{{task.AbsDaysToDue}} days</b></div>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"task.DaysToDue < 0\">\r\n                <div class=\"past-due-date\">overdue</div>\r\n                <div class=\"due-day-value past-due-date\"><b>{{task.AbsDaysToDue}} days</b></div>\r\n              </ng-container>\r\n\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { WebService } from 'src/app/services/Web/web.service';\r\n\r\n@Component({\r\n  selector: 'app-list-tasks',\r\n  templateUrl: './list-tasks.component.html',\r\n  styleUrls: ['./list-tasks.component.css']\r\n})\r\nexport class ListTasksComponent implements OnInit {\r\n\r\n  tasks: any = null;\r\n\r\n  constructor(\r\n    private webService: WebService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.webService.GetUserTaskInstancesQuery().subscribe({\r\n      next: (r: any) => {\r\n        // TODO: handle error\r\n        this.tasks = r.Value;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { WebService, SendUserActionErrorCodes, ServiceResult } from 'src/app/services/Web/web.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormComponent } from '../form/form.component';\r\nimport { SnackBarService } from 'src/app/services/UI/snack-bar.service';\r\n\r\nexport class TaskModel {\r\n  processName = '';\r\n  title = '';\r\n  details = '';\r\n  processId = '';\r\n  processInstanceId = '';\r\n  taskInstanceId = '';\r\n  taskState = '';\r\n  form: any = null;\r\n  set actions(value: any[]) {\r\n    this.primaryActions = value.filter(a => a.ActionType === 'Primary');\r\n    this.secondaryActions = value.filter(a => a.ActionType === 'Secondary');\r\n    this.warnedActions = value.filter(a => a.ActionType === 'Warned');\r\n  }\r\n  assigneeName = '';\r\n  assignmentStates = {\r\n    assignedToCurrentUser: false,\r\n    assignedToGroup: false,\r\n    assignedToAnotherUser: false,\r\n    assignedToCurrentUsersGroup: false\r\n  };\r\n  otherTasks = [];\r\n\r\n  primaryActions: any[];\r\n  warnedActions: any[];\r\n  secondaryActions: any[];\r\n}\r\n\r\nexport class TaskCompletedModel {\r\n  assigneeName = '';\r\n  processId = '';\r\n  processInstanceId = '';\r\n  taskInstanceId = '';\r\n  taskName = '';\r\n  processCompleted = false;\r\n  processCanceled = false;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-task',\r\n  templateUrl: './edit-task.component.html',\r\n  styleUrls: ['./edit-task.component.css']\r\n})\r\nexport class EditTaskComponent implements OnInit {\r\n\r\n  taskModel: TaskModel;\r\n  taskCompletedModel: TaskCompletedModel;\r\n  showCompletedMessage = false;\r\n  otherTasksShown = true;\r\n\r\n  formErrorMessage = '';\r\n\r\n  isFormValid = false;\r\n\r\n  @ViewChild('appForm', { static: false }) formComponent: FormComponent;\r\n\r\n  constructor(\r\n    private webService: WebService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private snackBar: SnackBarService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.activatedRoute.params.subscribe({\r\n      next: (r: any) => {\r\n        const processId = r.processId;\r\n        const processInstanceId = r.processInstanceId;\r\n        const taskInstanceId = r.taskInstanceId;\r\n\r\n        this.initialize(processId, processInstanceId, taskInstanceId);\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  initialize(processId: string, processInstanceId: string, taskInstanceId: string) {\r\n\r\n    this.taskModel = null;\r\n    this.showCompletedMessage = false;\r\n    this.taskCompletedModel = null;\r\n\r\n    if (processId != null && processInstanceId == null && taskInstanceId == null) {\r\n\r\n      this.StartNewProcesses(processId);\r\n\r\n    } else if (processId != null && processInstanceId != null && taskInstanceId != null) {\r\n      // Analysis:\r\n      // load task\r\n      // possible responses & rendering types:\r\n      //  completed?\r\n      //  assinged to current user?\r\n      //  assigned to someone else, but also related to one of the current user's groups ?\r\n      //  assigned to a group that user can start working?\r\n      //  assigned to a group or user and current user has no chance to work\r\n      //  assigned to someone else but current user is god mode user.\r\n      //    - can assign to someone else (of course including to themselves)\r\n      //    - can change field values (of course will be logged)\r\n      //    - can cancel completely\r\n      //    - what else?\r\n\r\n      this.webService.GetTaskInstanceQuery(processId, processInstanceId, taskInstanceId).subscribe({\r\n        next: (r: any) => {\r\n          this.taskModel = new TaskModel();\r\n\r\n          this.taskModel.processName = r.Value.ProcessName;\r\n          this.taskModel.title = r.Value.TaskName;\r\n          this.taskModel.processId = processId;\r\n          this.taskModel.processInstanceId = processInstanceId;\r\n          this.taskModel.taskInstanceId = taskInstanceId;\r\n          this.taskModel.taskState = r.Value.TaskState;\r\n          this.taskModel.form = r.Value.Form;\r\n          this.taskModel.actions = r.Value.Actions;\r\n          this.taskModel.assigneeName = r.Value.AssigneeName;\r\n          this.taskModel.assignmentStates.assignedToAnotherUser = r.Value.UserTaskState.AssignedToAnotherUser;\r\n          this.taskModel.assignmentStates.assignedToCurrentUser = r.Value.UserTaskState.CanEdit;\r\n          this.taskModel.assignmentStates.assignedToCurrentUsersGroup = r.Value.UserTaskState.AssignedToCurrentUsersGroup;\r\n          this.taskModel.assignmentStates.assignedToGroup = r.Value.UserTaskState.AssignedToGroup;\r\n          this.taskModel.otherTasks = r.Value.OtherTasks;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  StartNewProcesses(processId: string) {\r\n    this.webService.StartNewProcessCommand(processId).subscribe({\r\n      next: (r: any) => {\r\n        // EditTask/:processId/:processInstanceId/:taskInstanceId\r\n        //this.router.navigate(['EditTask', processId, r.Value.ProcessInstanceId, r.Value.TaskInstanceId]);\r\n        this.initialize(processId, r.Value.ProcessInstanceId, r.Value.TaskInstanceId);\r\n        return;\r\n\r\n        // this.taskModel = new TaskModel();\r\n        // this.taskModel.processName = r.Value.ProcessName;\r\n        // this.taskModel.title = r.Value.TaskName;\r\n        // this.taskModel.processId = processId;\r\n        // this.taskModel.processInstanceId = r.Value.ProcessInstanceId;\r\n        // this.taskModel.taskInstanceId = r.Value.TaskInstanceId;\r\n        // this.taskModel.form = r.Value.Form;\r\n        // this.taskModel.actions = r.Value.Actions;\r\n        // this.taskModel.assignmentStates.assignedToAnotherUser = false;\r\n        // this.taskModel.assignmentStates.assignedToCurrentUser = true;\r\n        // this.taskModel.assignmentStates.assignedToCurrentUsersGroup = false;\r\n        // this.taskModel.assignmentStates.assignedToGroup = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  submit(actionId: string) {\r\n\r\n    const returningForm = this.formComponent.getReturningForm();\r\n\r\n    this.webService.SendUserActionCommand(\r\n      this.taskModel.processId,\r\n      this.taskModel.processInstanceId,\r\n      this.taskModel.taskInstanceId,\r\n      actionId,\r\n      'some notes of course',\r\n      returningForm.DateValues,\r\n      returningForm.TextValues)\r\n      .subscribe({\r\n        next: (r: ServiceResult<any>) => {\r\n\r\n          this.formErrorMessage = '';\r\n          if (false === r.Successful) {\r\n            const invalidFormValuesError = r.OperationErrors.find(e => e.ErrorCode === SendUserActionErrorCodes.InvalidFormValues);\r\n            if (invalidFormValuesError != null) {\r\n              // show error message\r\n              console.log('error', invalidFormValuesError.ErrorMessage);\r\n              this.formErrorMessage = invalidFormValuesError.ErrorMessage;\r\n              return;\r\n            }\r\n          }\r\n\r\n          if (actionId === 'save') {\r\n            this.snackBar.open('Form values are saved.');\r\n            return;\r\n          }\r\n\r\n          console.log('action trigger result', r);\r\n          this.showCompletedMessage = true;\r\n\r\n          const taskCompletedModel = new TaskCompletedModel();\r\n          taskCompletedModel.assigneeName = r.Value.AssignedName;\r\n          taskCompletedModel.processId = this.taskModel.processId;\r\n          taskCompletedModel.processInstanceId = this.taskModel.processInstanceId;\r\n          taskCompletedModel.taskInstanceId = r.Value.NewTaskInstanceId;\r\n          taskCompletedModel.taskName = r.Value.NewTaskName;\r\n          taskCompletedModel.processCompleted = r.Value.HasProcessCompleted;\r\n          taskCompletedModel.processCanceled = r.Value.HasProcessCanceled;\r\n\r\n          this.taskCompletedModel = taskCompletedModel;\r\n\r\n          // bu submit sonrasi gosterilen ekran\r\n          // aslinda tum sureclerin listelendigi detay ekranina\r\n          // sadece completed mesajinin eklendigi sey olabilir.\r\n          // bu taskin actigi ve paralel de ilerleyen tasklarin\r\n          // ayrimini yapmaya da gerek olmayabilir.\r\n\r\n          // congrats! you completed your task!\r\n          //  upon your task,\r\n          //    this task is assigned to this person (or you) - or this group (and\r\n          //      if aplicable - you can work on that since you are on that group)\r\n          //    or\r\n          //    these tasks are assigned\r\n          //    and (if exists in other parallel branches)\r\n          //    these are other ongoing tasks in this process\r\n          //    or - this process now completed.\r\n        }\r\n      });\r\n  }\r\n\r\n  pullTask() {\r\n    this.webService.PullTaskFromGroupCommand(\r\n      this.taskModel.processId,\r\n      this.taskModel.processInstanceId,\r\n      this.taskModel.taskInstanceId)\r\n      .subscribe({\r\n        next: (r: any) => {\r\n          this.initialize(\r\n            this.taskModel.processId,\r\n            this.taskModel.processInstanceId,\r\n            this.taskModel.taskInstanceId);\r\n        }\r\n      });\r\n  }\r\n\r\n  showAllOtherTasks() {\r\n    this.otherTasksShown = !this.otherTasksShown;\r\n  }\r\n\r\n  updateFormValidity(isFormValid: boolean) {\r\n    this.isFormValid = isFormValid;\r\n  }\r\n}\r\n","<div\r\n  class=\"edit-task-wrapper\"\r\n  fxLayout=\"column\"\r\n  fxLayoutAlign=\"center center\"\r\n>\r\n  <div\r\n    *ngIf=\"taskModel && !showCompletedMessage\"\r\n    class=\"edit-task-content\"\r\n  >\r\n    <div class=\"process-title-header\">\r\n      process\r\n      <i class=\"fa fa-info-circle\"></i></div>\r\n    <div class=\"process-title\">{{taskModel.processName}}&nbsp;</div>\r\n    <div class=\"task-title-header\">\r\n      <div *ngIf=\"taskModel.assignmentStates.assignedToCurrentUser\">\r\n        your task<i class=\"fa fa-info-circle\"></i>\r\n      </div>\r\n      <div *ngIf=\"taskModel.assignmentStates.assignedToGroup\">\r\n        {{taskModel.assigneeName}} will work on\r\n      </div>\r\n      <div *ngIf=\"taskModel.assignmentStates.assignedToAnotherUser\">\r\n        {{taskModel.assigneeName}} is working on\r\n      </div>\r\n      <div *ngIf=\"taskModel.taskState == 'Completed' || taskModel.taskState == 'Canceled'\">\r\n        task\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"task-title\">{{taskModel.title}}</div>\r\n    <div\r\n      *ngIf=\"taskModel.taskState == 'Canceled'\"\r\n      class=\"centered-text\"\r\n    >\r\n      Cancelled by <b>{{taskModel.assigneeName}}</b>\r\n    </div>\r\n    <div\r\n      *ngIf=\"taskModel.taskState == 'Completed'\"\r\n      class=\"centered-text\"\r\n    >\r\n      Completed by <b>{{taskModel.assigneeName}}</b>\r\n    </div>\r\n    <div\r\n      class=\"centered-text\"\r\n      *ngIf=\"taskModel.assignmentStates.assignedToCurrentUsersGroup\"\r\n    >\r\n      You are in {{taskModel.assigneeName}} group.\r\n      <button\r\n        mat-button\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        (click)=\"pullTask()\"\r\n      >\r\n        Work on this?\r\n      </button>\r\n    </div>\r\n\r\n\r\n    <div>\r\n      <app-form\r\n        #appForm\r\n        [form]=\"taskModel.form\"\r\n        (formValid)=\"updateFormValidity($event)\"\r\n      ></app-form>\r\n    </div>\r\n    <div class=\"form-error-message\">{{formErrorMessage}}</div>\r\n    <div\r\n      class=\"actions-wrapper\"\r\n      fxLayout=\"row\"\r\n      fxLayoutAlign=\"space-between center\"\r\n    >\r\n      <div\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"start center\"\r\n      >\r\n        <button\r\n          *ngFor=\"let action of taskModel.secondaryActions\"\r\n          (click)=\"submit(action.ActionId)\"\r\n          fxLayoutAlign=\"start center\"\r\n          mat-button\r\n          mat-raised-button\r\n          [disabled]=\"!taskModel.assignmentStates.assignedToCurrentUser\"\r\n          style=\"margin-right:10px\"\r\n        >\r\n          {{action.ActionText}}\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"end center\"\r\n      >\r\n        <button\r\n          *ngFor=\"let action of taskModel.warnedActions\"\r\n          (click)=\"submit(action.ActionId)\"\r\n          fxLayoutAlign=\"start center\"\r\n          mat-button\r\n          mat-raised-button\r\n          color=\"warn\"\r\n          [disabled]=\"!taskModel.assignmentStates.assignedToCurrentUser\"\r\n          style=\"margin-left:10px\"\r\n        >\r\n          {{action.ActionText}}\r\n        </button>\r\n\r\n        <button\r\n          *ngFor=\"let action of taskModel.primaryActions\"\r\n          (click)=\"submit(action.ActionId)\"\r\n          fxLayoutAlign=\"start center\"\r\n          mat-button\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          [disabled]=\"!taskModel.assignmentStates.assignedToCurrentUser || !isFormValid \"\r\n          style=\"margin-left:10px\"\r\n        >\r\n          {{action.ActionText}}\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"taskModel.otherTasks.length > 1\">\r\n      <div class=\"task-history\">\r\n        <div\r\n          style=\"text-align: center;    text-decoration: underline; cursor:pointer;\"\r\n          (click)=\"showAllOtherTasks()\"\r\n        >\r\n          <ng-container *ngIf=\"!otherTasksShown\">Show all other tasks</ng-container>\r\n          <ng-container *ngIf=\"otherTasksShown\">Hide other tasks</ng-container>\r\n\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"otherTasksShown\">\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n            style=\"margin-top:20px;\"\r\n            *ngFor=\"let otherTask of taskModel.otherTasks\"\r\n            [ngStyle]=\"{'font-style': (otherTask.TaskInstanceId == taskModel.taskInstanceId) ? 'italic' : 'normal'}\"\r\n          >\r\n            <div>\r\n              <div style=\"font-size: 24px; font-weight: bold;;\">\r\n                {{otherTask.TaskName}}\r\n              </div>\r\n            </div>\r\n            <div\r\n              fxLayout=\"column\"\r\n              style=\"text-align: right;\"\r\n            >\r\n              <div>\r\n                <ng-container *ngIf=\"otherTask.TaskState == 'Completed'\">Completed by</ng-container>\r\n                <ng-container *ngIf=\"otherTask.TaskState == 'Canceled'\">Cancelled by</ng-container>\r\n                <ng-container *ngIf=\"otherTask.TaskState == 'Active'\">In progress</ng-container>\r\n                <ng-container *ngIf=\"otherTask.TaskState == 'Waiting'\">Will be handled by</ng-container>\r\n              </div>\r\n              <div style=\"font-size: 18px; font-weight: bold;\">\r\n                {{otherTask.AssingedName}}\r\n              </div>\r\n              <div style=\"font-size: 12px;\">\r\n                {{otherTask.CompletedTime | _dateTime}}\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n\r\n    </ng-container>\r\n\r\n\r\n\r\n\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"showCompletedMessage\"\r\n    style=\"width: 500px;\"\r\n  >\r\n    <app-task-completed [taskCompletedModel]=\"taskCompletedModel\"></app-task-completed>\r\n  </div>\r\n\r\n</div>\r\n","import { Group } from './Group';\r\nimport { ResponsibleVisualState } from './ResponsibleVisualState';\r\nimport { User } from './User';\r\nimport { GroupAssignOption } from './GroupAssignOption';\r\nimport { Field } from '../Field/Field';\r\nimport { ResponsibleType } from './ResponsibleType';\r\n\r\nexport class Responsible {\r\n  constructor(\r\n    public responsibleType: ResponsibleType,\r\n    public group: Group = null,\r\n    public groupAssignOption: GroupAssignOption = null,\r\n    public user: User = null,\r\n    public groups: Group[] = [],\r\n    public users: User[] = [],\r\n    public groupField: Field = null,\r\n    public userField: Field = null,\r\n    public groupFieldList: Field[] = [],\r\n    public userFieldList: Field[] = [],\r\n  ) {\r\n\r\n    this.visualState = new ResponsibleVisualState(this);\r\n  }\r\n\r\n  visualState: ResponsibleVisualState;\r\n}\r\n\r\n\r\n","<div class=\"fields-settings\">\n\n\n\n  <div class=\"form-setting-mode\">\n\n    <div class=\"field-edit-title\">\n      Fields in this Step <i\n        class=\"fas fa-info-circle\"\n        matTooltip=\"Fields that are shown to the editor of this step.\"\n      ></i>\n    </div>\n\n    <div\n      class=\"form-designer-empty-content\"\n      *ngIf=\"renderingFieldsInStep.length == 0\"\n    >\n      This step doesn't contain any field.\n    </div>\n    <div class=\"field-list-wrapper\">\n      <div\n        class=\"field-form\"\n        fxLayout=\"row\"\n        *ngFor=\"let fieldInStep of renderingFieldsInStep; let i=index\"\n        #formFields\n      >\n\n        <div class=\"field-number\">\n          <div>{{i+1}}</div>\n        </div>\n\n        <div\n          class=\"field-name-in-list\"\n          fxLayout=\"column\"\n        >\n          <span class=\"field-name-span\">{{fieldInStep.field.name}}</span>\n          <span class=\"field-type\">{{fieldInStep.field.fieldType?.name}}</span>\n        </div>\n\n        <div>\n          <mat-button-toggle-group\n            *ngIf=\"fieldInStep.editableFieldUsedInAnotherStep\"\n            [(ngModel)]=\"fieldInStep.readOnly\"\n            [vertical]=\"true\"\n            (change)=\"fieldInStepReadOnlyChanged()\"\n          >\n            <mat-button-toggle [value]=\"false\">Editable</mat-button-toggle>\n            <mat-button-toggle [value]=\"true\">Read Only</mat-button-toggle>\n          </mat-button-toggle-group>\n          <div *ngIf=\"!fieldInStep.editableFieldUsedInAnotherStep\">\n            read only toggle removed\n          </div>\n        </div>\n\n        <div fxLayout=\"row\">\n\n          <button\n            mat-button\n            class=\"setting-button\"\n            (click)=\"removeFieldInStep(fieldInStep)\"\n          >\n            <i class=\"fas fa-trash-alt\"></i>\n          </button>\n\n          <button\n            mat-button\n            class=\"setting-button\"\n            (click)=\"openFieldEditViewForExistingField(fieldInStep)\"\n            [disabled]=\"fieldInStep.readOnly && fieldInStep != currentFieldInStep\"\n          >\n            <i\n              matBadge=\"!\"\n              matBadgeColor=\"warn\"\n              matBadgePosition=\"before\"\n              class=\"fas fa-pencil-alt\"\n              [ngClass]=\"{\n              'field-selected': fieldInStep == currentFieldInStep,\n              'field-selection-disabled': fieldInStep != currentFieldInStep && fieldInStep.readOnly}\"\n            ></i>\n          </button>\n\n        </div>\n\n      </div>\n    </div>\n    <div\n      class=\"new-field-wrapper\"\n      fxLayout=\"column\"\n    >\n      <button\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"openFieldEditViewForNewField()\"\n      >\n        <i class=\"fas fa-plus\"></i> Create a New Field\n      </button>\n      <button\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"openAddExistingFieldView()\"\n      >\n        <i class=\"fas fa-plus\"></i> Use an Existing Field <i\n          class=\"fas fa-info-circle\"\n          matTooltip=\"Include a field you created in another step.\"\n        ></i>\n      </button>\n    </div>\n\n  </div>\n\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChildren, QueryList, ElementRef } from '@angular/core';\nimport { FieldInStep } from 'src/app/common/Models/Field/FieldInStep';\nimport { FieldType } from 'src/app/common/Models/Field/FieldType';\nimport { FieldTypeService } from 'src/app/services/Business/field-type.service';\nimport { ProcessItem } from 'src/app/common/Models/ProcessItems/ProcessItem';\nimport { Process } from 'src/app/common/Models/ProcessItems/Process';\nimport { StepItem } from 'src/app/common/Models/ProcessItems/StepItem';\n\n//type FieldViewMode = 'listFields' | 'fieldEdit' | 'addExisting';\n\n\n@Component({\n  selector: 'app-step-form-fields',\n  templateUrl: './step-form-fields.component.html',\n  styleUrls: ['./step-form-fields.component.css']\n})\nexport class StepFormFieldsComponent implements OnInit {\n\n  @ViewChildren('formFields') formFieldsViewChildren: QueryList<ElementRef>;\n\n  editingField: FieldInStep;\n\n  // loaded lists\n  @Input() fieldTypes: FieldType[] = [];\n\n  _processItem: ProcessItem;\n\n  @Input() process: Process;\n\n  @Output() currentFieldChanged = new EventEmitter<FieldInStep>();\n\n  isStepFormDesignerVisible = false;\n\n  _currentFieldInStep: FieldInStep;\n  get currentFieldInStep() {\n    return this._currentFieldInStep;\n  }\n  set currentFieldInStep(val: FieldInStep) {\n    this._currentFieldInStep = val;\n    this.currentFieldChanged.emit(val);\n  }\n\n  get stepItem(): StepItem {\n    return this.processItem as StepItem;\n  }\n\n  constructor(\n  ) { }\n\n  async ngOnInit() {\n  }\n\n  get processItem(): ProcessItem {\n    return this._processItem;\n  }\n\n  @Input() set processItem(value: ProcessItem) {\n\n    if (this._processItem === value) {\n      return;\n    }\n\n    this._processItem = value;\n  }\n\n\n  get renderingFieldsInStep(): FieldInStep[] {\n    return this.stepItem.fieldsInStep.filter((value, index, arr) => !value.deleted);\n  }\n\n  openFieldEditViewForNewField() {\n\n    const addNewFieldResult = this.process.addNewField(this.stepItem);\n\n    this.currentFieldInStep = addNewFieldResult.createdFieldInStep;\n\n    setTimeout(() => {\n      this.formFieldsViewChildren?.last?.nativeElement?.scrollIntoView({ behavior: 'smooth' });\n    }, 50);\n  }\n\n  removeFieldInStep(fieldInStep: FieldInStep) {\n    this.currentFieldInStep = null;\n    fieldInStep.deleted = true;\n  }\n\n  openFieldEditViewForExistingField(fieldInStep: FieldInStep) {\n    if (this.currentFieldInStep == fieldInStep) {\n      this.currentFieldInStep = null;\n    }\n    else {\n      this.currentFieldInStep = fieldInStep;\n    }\n\n  }\n\n  openAddExistingFieldView() {\n\n  }\n\n  openListFields() {\n    this.currentFieldInStep = null;\n  }\n\n  swapStepFormDesignerVisible() {\n    this.isStepFormDesignerVisible = !this.isStepFormDesignerVisible;\n  }\n\n  resetViewMode() {\n    this.currentFieldInStep = null;\n  }\n\n  fieldInStepReadOnlyChanged() {\n    if (this.currentFieldInStep?.readOnly) {\n      this.currentFieldInStep = null;\n    }\n  }\n\n}\n","<div\r\n  fxLayout=\"column\"\r\n  fxLayoutAlign=\"center center\"\r\n>\r\n\r\n  <div style=\"width: 500px;\">\r\n\r\n    <div class=\"title\">Start a new process</div>\r\n    <div\r\n      class=\"process-box\"\r\n      *ngFor=\"let process of processes\"\r\n    >\r\n      <a\r\n        class=\"process-link\"\r\n        [routerLink]=\"['/NewProcess/' + process.ProcessId]\"\r\n      >\r\n        <div\r\n          fxLayout=\"row\"\r\n          fxLayoutAlign=\"start center\"\r\n          class=\"process-name-wrapper\"\r\n        >\r\n          <div\r\n            class=\"process-icon\"\r\n            fxLayoutAlign=\"center center\"\r\n            [style.background-color]=\"process.Visuals.IconColor\"\r\n          >\r\n            <div> {{process.Visuals.Initials}}</div>\r\n          </div>\r\n          <div class=\"process-name\">\r\n            Start <b>{{process.ProcessName}}</b>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </a>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { WebService } from 'src/app/services/Web/web.service';\r\nimport { Observable, Subscribable, Unsubscribable, BehaviorSubject } from 'rxjs';\r\nimport { FormControlName } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-list-processes',\r\n  templateUrl: './list-processes.component.html',\r\n  styleUrls: ['./list-processes.component.css']\r\n})\r\nexport class ListProcessesComponent implements OnInit {\r\n\r\n  processes: any[];\r\n\r\n  constructor(\r\n    private webService: WebService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.webService.GetProcessesQuery().subscribe(r => {\r\n      console.log(r);\r\n      this.processes = r.Value.Processes;\r\n    });\r\n  }\r\n}\r\n\r\n\r\n","<div\r\n  fxLayout=\"column\"\r\n  fxLayoutAlign=\"center center\"\r\n>\r\n  <ng-container *ngIf=\"groupsTasks\">\r\n    <div style=\"width: 500px;\">\r\n      <div class=\"my-inbox-label\">My Groups' Inbox</div>\r\n      <div\r\n        class=\"no-task-message\"\r\n        *ngIf=\"!groupsTasks || groupsTasks.length == 0\"\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"center center\"\r\n      >\r\n        <div class=\"task-success-icon\"><i class=\"fa fa-check-circle\"></i></div>\r\n        <div>You don't have any assigned task. </div>\r\n      </div>\r\n      <div *ngFor=\"let groupTasks of groupsTasks\">\r\n\r\n        <div\r\n          *ngFor=\"let task of groupTasks.TaskInstanceList\"\r\n          class=\"task-item\"\r\n          [routerLink]=\"['/EditTask', task.ProcessId, task.ProcessInstanceId, task.TaskInstanceId]\"\r\n        >\r\n\r\n          <div\r\n            fxLayout=\"row\"\r\n            fxLayoutAlign=\"space-between center\"\r\n          >\r\n            <div fxLayout=\"column\">\r\n              <div class=\"task-title\">{{task.TaskName}} - <span class=\"group-name\">{{groupTasks.GroupName}} <span\r\n                    class=\"group-name-group-label\"\r\n                  >group</span></span></div>\r\n              <div class=\"process-title\">in <b>{{task.ProcessName}}</b></div>\r\n            </div>\r\n            <div\r\n              fxLayout=\"column\"\r\n              class=\"due-date-column\"\r\n            >\r\n              <ng-container *ngIf=\"task.DueDate\">\r\n                <ng-container *ngIf=\"task.DaysToDue == 0\">\r\n                  <div>due</div>\r\n                  <div class=\"due-day-value\"><b>Today</b></div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"task.DaysToDue > 0\">\r\n                  <div>due in</div>\r\n                  <div class=\"due-day-value\"><b>{{task.AbsDaysToDue}} days</b></div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"task.DaysToDue < 0\">\r\n                  <div class=\"past-due-date\">overdue</div>\r\n                  <div class=\"due-day-value past-due-date\"><b>{{task.AbsDaysToDue}} days</b></div>\r\n                </ng-container>\r\n\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { WebService } from 'src/app/services/Web/web.service';\r\n\r\n@Component({\r\n  selector: 'app-my-groups-tasks',\r\n  templateUrl: './my-groups-tasks.component.html',\r\n  styleUrls: ['./my-groups-tasks.component.css']\r\n})\r\nexport class MyGroupsTasksComponent implements OnInit {\r\n\r\n  groupsTasks: any;\r\n\r\n  constructor(\r\n    private webService: WebService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.webService.GetUserTaskInstancesQuery().subscribe({\r\n      next: (r: any) => {\r\n        // TODO: handle error\r\n        this.groupsTasks = r.Value.GroupsTaskInstanceList;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div\r\n  *ngIf=\"visible && process != null && processItem != null\"\r\n  class=\"settings-modal\"\r\n>\r\n\r\n  <div class=\"main-container\">\r\n\r\n    <div class=\"left-part\">\r\n      <span>left part</span>\r\n    </div>\r\n\r\n    <div class=\"form-wrapper\">\r\n      <div\r\n        fxLayout=\"row\"\r\n        fxLayoutAlign=\"end none\"\r\n      >\r\n        <i\r\n          (click)=\"close()\"\r\n          class=\"fas fa-times close-button clickable\"\r\n        ></i>\r\n      </div>\r\n      <div>\r\n\r\n        <ejs-dropdownlist\r\n          [dataSource]='processItems'\r\n          [fields]=\"{ value:'id' }\"\r\n          (change)='processItem = $event.itemData; onProcessItemChange();'\r\n          [ngModel]=\"processItem?.id\"\r\n          name=\"processItemPicker\"\r\n          cssClass=\"e-outline\"\r\n        >\r\n          <ng-template\r\n            #itemTemplate\r\n            let-data\r\n          >\r\n            <div *ngIf=\"data\">\r\n              <span *ngIf=\"$any(data).constructor.name== 'StepItem'\">\r\n                Step:\r\n              </span>\r\n              <span *ngIf=\"$any(data).constructor.name== 'ConditionItem'\">\r\n                Condition:\r\n              </span>\r\n              <span>{{data.text}}</span>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template\r\n            #valueTemplate\r\n            let-data\r\n          >\r\n            <div\r\n              fxLayoutAlign=\"center center\"\r\n              style=\"font-weight: bold; font-size: 18px; height: 50px;\"\r\n            >\r\n              <span *ngIf=\"$any(data).constructor.name== 'StepItem'\">\r\n                Step:\r\n              </span>\r\n              <span *ngIf=\"$any(data).constructor.name== 'ConditionItem'\">\r\n                Condition:\r\n              </span>\r\n              <span>{{data.text}}</span>\r\n            </div>\r\n          </ng-template>\r\n\r\n        </ejs-dropdownlist>\r\n\r\n\r\n\r\n      </div>\r\n\r\n      <div [ngSwitch]=\"$any(processItem).constructor.name\">\r\n\r\n        <ng-container *ngSwitchCase=\" 'StepItem'\">\r\n\r\n          <mat-tab-group\r\n            class=\"step-settings-tab\"\r\n            (selectedTabChange)=\"onStepItemSettingsTabChanged($event)\"\r\n          >\r\n\r\n            <mat-tab label=\"Responsible\">\r\n\r\n\r\n              <app-responsible\r\n                [process]=\"process\"\r\n                [processItem]=\"processItem\"\r\n              ></app-responsible>\r\n\r\n            </mat-tab>\r\n\r\n            <mat-tab label=\"Form\">\r\n              <ng-template mat-tab-label>\r\n                Form\r\n              </ng-template>\r\n              <app-step-form-fields\r\n                #stepFormFields\r\n                [process]=\"process\"\r\n                [processItem]=\"processItem\"\r\n                [fieldTypes]=\"fieldTypes\"\r\n                (currentFieldChanged)=\"currentFieldChanged($event)\"\r\n              ></app-step-form-fields>\r\n            </mat-tab>\r\n            <mat-tab label=\"Actions\">\r\n              <p>this action goes to this step</p>\r\n              <p>this action ends the process</p>\r\n              <p>python script to arrange data</p>\r\n              <p>web service call</p>\r\n              <p>(for future)-> save/update data to database</p>\r\n            </mat-tab>\r\n\r\n            <mat-tab label=\"Notifications\"> Notification will be configured here. </mat-tab>\r\n            <mat-tab label=\"Docs\"> Documents will be edited here. </mat-tab>\r\n\r\n          </mat-tab-group>\r\n\r\n        </ng-container>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class=\"right-part\">\r\n      <app-field-definition-editor\r\n        #fieldDefinitionEditor\r\n        [fieldTypes]=\"fieldTypes\"\r\n      ></app-field-definition-editor>\r\n\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit, Input, OnDestroy, ViewChild } from '@angular/core';\r\nimport { FieldTypeService } from '../../services/Business/field-type.service';\r\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\r\nimport { RandomIdGenerator } from '../../services/Business/general.service';\r\nimport { StepItem } from '../../common/Models/ProcessItems/StepItem';\r\nimport { ProcessItem } from '../../common/Models/ProcessItems/ProcessItem';\r\nimport { FieldInStep } from '../../common/Models/Field/FieldInStep';\r\nimport { FieldType } from '../../common/Models/Field/FieldType';\r\nimport { Field } from '../../common/Models/Field/Field';\r\nimport { UserGroupService } from '../../services/Business/userGroup.service';\r\nimport { Group } from '../../common/Models/Responsible/Group';\r\nimport { User } from '../../common/Models/Responsible/User';\r\nimport { GroupAssignOption } from '../../common/Models/Responsible/GroupAssignOption';\r\nimport { Process } from '../../common/Models/ProcessItems/Process';\r\nimport { ResponsibleType } from '../../common/Models/Responsible/ResponsibleType';\r\nimport { SelectionSettingsModel } from '@syncfusion/ej2-dropdowns';\r\n\r\nimport { ListBoxComponent, CheckBoxSelection, MultiSelectModule } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { Subscription } from 'rxjs';\r\nimport { StepFormFieldsComponent } from '../process-item-settings-components/step-form-fields/step-form-fields.component';\r\nimport { FieldDefinitionEditorComponent } from '../process-item-settings-components/field-definition-editor/field-definition-editor.component';\r\nListBoxComponent.Inject(CheckBoxSelection);\r\n\r\n@Component({\r\n  selector: 'app-process-item-settings',\r\n  templateUrl: './process-item-settings.component.html',\r\n  styleUrls: ['./process-item-settings.component.css']\r\n})\r\nexport class ProcessItemSettingsComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  @ViewChild('stepFormFields') stepFormFieldsComponent: StepFormFieldsComponent;\r\n  @ViewChild('fieldDefinitionEditor') fieldDefinitionEditor: FieldDefinitionEditorComponent;\r\n\r\n  public visible = false;\r\n\r\n  @Input() process: Process;\r\n\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  _processItem: ProcessItem;\r\n\r\n\r\n  get processItems(): ProcessItem[] {\r\n    return this.process.processItems.value.array;\r\n  }\r\n\r\n  get processItem(): ProcessItem {\r\n    return this._processItem;\r\n  }\r\n\r\n  set processItem(value: ProcessItem) {\r\n\r\n    if (this._processItem === value) {\r\n      return;\r\n    }\r\n\r\n    this._processItem = value;\r\n  }\r\n\r\n  //#region step item\r\n\r\n  get stepItem(): StepItem {\r\n    return this.processItem as StepItem;\r\n  }\r\n\r\n\r\n  //#endregion\r\n\r\n  fieldTypes: FieldType[] = [];\r\n\r\n  constructor(\r\n    private fieldTypeService: FieldTypeService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fieldTypeService.getFieldTypes().then(v => { this.fieldTypes = v; });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n  }\r\n\r\n  unsubscribe() {\r\n  }\r\n\r\n  async open(processItem: ProcessItem) {\r\n    this.processItem = processItem;\r\n    this.visible = true;\r\n  }\r\n\r\n  async close() {\r\n    this.visible = false;\r\n    this.processItem = null;\r\n  }\r\n\r\n  //#region field - step item functions\r\n\r\n\r\n  onProcessItemChange() {\r\n    this.stepFormFieldsComponent.resetViewMode();\r\n  }\r\n\r\n  onStepItemSettingsTabChanged($event) {\r\n    this.stepFormFieldsComponent.resetViewMode();\r\n  }\r\n\r\n  //#endregion\r\n\r\n  search<T>(array: T[], selectorFunc: (obj: T) => string, filter: string): T[] {\r\n    if (filter === '' || filter == null) {\r\n      return array;\r\n    }\r\n    return array.filter(i => selectorFunc(i).toLowerCase().indexOf(filter.toLowerCase()) > -1);\r\n  }\r\n  currentFieldChanged(fieldInStep: FieldInStep) {\r\n    this.fieldDefinitionEditor.show(fieldInStep);\r\n  }\r\n}\r\n","import { ProcessStarter } from './ProcessStarter';\r\nimport { ProcessStarterTypeCode } from './ProcessStarterType';\r\n\r\nexport class ProcessStarterVisualState {\r\n  constructor(private processStarter: ProcessStarter) { }\r\n\r\n  get isTypeGroupList(): boolean {\r\n    return this.processStarter?.processStarterType?.code == this.groupListTypeName;\r\n  }\r\n\r\n  get showGroupAssignOptions(): boolean {\r\n    if (this.isTypeGroupList && this.processStarter.groups.length > 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n\r\n  }\r\n\r\n  showAdvancedOptions = false;\r\n\r\n  readonly groupListTypeName: ProcessStarterTypeCode = 'groupList';\r\n}\r\n","import { Component, OnInit, Input, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\r\n\r\nimport { ProcessItem } from 'src/app/common/Models/ProcessItems/ProcessItem';\r\n\r\n@Component({\r\n  selector: 'app-process-item',\r\n  templateUrl: './process-item.component.html',\r\n  styleUrls: ['./process-item.component.css']\r\n})\r\nexport class ProcessItemComponent implements OnInit {\r\n\r\n  _processItem: ProcessItem;\r\n\r\n  get processItem(): ProcessItem { return this._processItem; }\r\n\r\n  @Output() linkCreated: EventEmitter<any> = new EventEmitter();\r\n  @Output() settingDialogueOpening = new EventEmitter<ProcessItem>();\r\n  isSettingsVisible = false;\r\n  showProcessItemNameEdit = false;\r\n\r\n  @ViewChild(\"processItemNameTextArea\") processItemNameTextArea: ElementRef;\r\n\r\n  constructor(\r\n    private el: ElementRef) { }\r\n\r\n  @Input() set processItem(val: ProcessItem) {\r\n    this._processItem = val;\r\n\r\n    this.showProcessItemNameEdit = this._processItem.justCreatedOnInterface;\r\n\r\n    if (this.showProcessItemNameEdit) {\r\n\r\n      const that = this;\r\n      setTimeout(() => {\r\n        that.processItemNameTextArea.nativeElement.focus();\r\n        that.processItemNameTextArea.nativeElement.select();\r\n      }, 60);\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.processItem.visualState.component = this;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.processItem.topPx = Math.round(this.processItem.visualState.middleY / 80) * 80 - this.processItem.visualState.height / 2;\r\n  }\r\n\r\n  getWidth() {\r\n    return this.el.nativeElement.offsetWidth;\r\n  }\r\n\r\n  getHeight() {\r\n    return this.el.nativeElement.offsetHeight;\r\n  }\r\n\r\n  openSettings($event) {\r\n\r\n    this.settingDialogueOpening.emit(this.processItem);\r\n  }\r\n\r\n  createLink($event) {\r\n    this.linkCreated.emit({\r\n      processItem: this.processItem,\r\n      event: $event\r\n    });\r\n\r\n  }\r\n\r\n  swapShowProcessItemNameEdit() {\r\n    this.showProcessItemNameEdit = true;\r\n    setTimeout(() => {\r\n      this.processItemNameTextArea.nativeElement.focus();\r\n    }, 40);\r\n  }\r\n\r\n  submitProcessName() {\r\n    this.showProcessItemNameEdit = false;\r\n  }\r\n\r\n  processItemNameSubmitted(event) {\r\n    var code = (event.keyCode ? event.keyCode : event.which);\r\n    if (code == 13) { //Enter keycode\r\n      this.showProcessItemNameEdit = false;\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div *ngIf=\"processItem\">\r\n\r\n  <div\r\n    *ngIf=\"$any(processItem).constructor.name== 'StepItem'\"\r\n    (dblclick)=\"swapShowProcessItemNameEdit()\"\r\n    class=\"box state-box noselect\"\r\n    [ngClass]=\"{\r\n    'selected': processItem.visualState.isSelected,\r\n    'not-selected': !processItem.visualState.isSelected\r\n  }\"\r\n  >\r\n    <div\r\n      *ngIf=\"!showProcessItemNameEdit\"\r\n      class=\"create-link-button box-button\"\r\n      appClickStopPropagation\r\n      (click)=\"createLink($event)\"\r\n    >\r\n      <i class=\"fas fa-long-arrow-alt-up\"></i>\r\n    </div>\r\n    <div\r\n      *ngIf=\"!showProcessItemNameEdit\"\r\n      class=\"settings-button box-button\"\r\n      appClickStopPropagation\r\n      (click)=\"openSettings($event)\"\r\n    >\r\n      <i class=\"fas fa-wrench\"></i>\r\n    </div>\r\n    <div\r\n      *ngIf=\"showProcessItemNameEdit\"\r\n      class=\"submit-process-name-change\"\r\n      appClickStopPropagation\r\n      (click)=\"submitProcessName()\"\r\n    >\r\n      <div>OK</div>\r\n    </div>\r\n    <textarea\r\n      #processItemNameTextArea\r\n      (keypress)=\"processItemNameSubmitted($event)\"\r\n      [(ngModel)]='processItem.text'\r\n      class=\"\r\n    process-item-textbox\"\r\n      appClickStopPropagation\r\n      *ngIf=\"showProcessItemNameEdit;else processItemNameLabel\"\r\n    ></textarea>\r\n    <ng-template #processItemNameLabel>\r\n      <div>{{processItem.text}}</div>\r\n    </ng-template>\r\n  </div>\r\n\r\n\r\n\r\n  <div\r\n    *ngIf=\"$any(processItem).constructor.name== 'ConditionItem'\"\r\n    class=\"box condition-box noselect\"\r\n    [ngClass]=\"{\r\n  'selected': processItem.visualState.isSelected,\r\n  'not-selected': !processItem.visualState.isSelected\r\n}\"\r\n  >\r\n    <div\r\n      class=\"create-link-button box-button\"\r\n      appClickStopPropagation\r\n      (click)=\"createLink($event)\"\r\n    >\r\n      <i class=\"fas fa-long-arrow-alt-up\"></i>\r\n    </div>\r\n    <div\r\n      class=\"settings-button box-button\"\r\n      appClickStopPropagation\r\n      (click)=\"openSettings($event)\"\r\n    >\r\n      <i class=\"fas fa-wrench\"></i>\r\n    </div>\r\n    <div class=\"condition-content\">\r\n      {{processItem.text}} - {{processItem.id}}\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { WebServiceAddress } from './web.service.adress';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  getServiceRootPath(): string {\r\n    return this.webServiceAddress.get();\r\n  }\r\n\r\n  constructor(private http: HttpClient, private webServiceAddress: WebServiceAddress, private router: Router) {\r\n\r\n  }\r\n\r\n  get<T>(source: string): Observable<T> {\r\n    return this.http.get<T>(this.getServiceRootPath() + source);\r\n  }\r\n\r\n\r\n  getByParams<T>(source: string, params: any): Observable<T> {\r\n    return this.http.get<T>(this.getServiceRootPath() + source, {\r\n      // tslint:disable-next-line: object-literal-shorthand\r\n      params: params\r\n    });\r\n  }\r\n\r\n  post<T>(source: string, objectToPost: any): Observable<T> {\r\n    console.log('http method is called:' + this.getServiceRootPath() + source);\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    };\r\n\r\n    return this.http.post<T>(this.getServiceRootPath() + source, objectToPost, httpOptions);\r\n  }\r\n}\r\n\r\n\r\n\r\n@Injectable()\r\nexport class HttpAuthInterceptorService implements HttpInterceptor {\r\n  constructor() {\r\n    console.log('the http interceptor is constructed!');\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n\r\n    const authToken: string = localStorage.getItem('access_token');\r\n\r\n    if (authToken !== '' && authToken != null) {\r\n\r\n      const authReq = req.clone({\r\n        headers: req.headers.set('Authorization', authToken)\r\n      });\r\n\r\n      return next.handle(authReq);\r\n    }\r\n    else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectorRef, ViewChild, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ProcessItemSettingsComponent } from '../process-item-settings/process-item-settings.component';\r\nimport { RandomIdGenerator } from 'src/app/services/Business/general.service';\r\nimport { ProcessItem } from 'src/app/common/Models/ProcessItems/ProcessItem';\r\nimport { Link } from 'src/app/common/Models/ProcessItems/Link';\r\nimport { StepItem } from 'src/app/common/Models/ProcessItems/StepItem';\r\nimport { ConditionItem } from 'src/app/common/Models/ProcessItems/ConditionItem';\r\nimport { Process } from 'src/app/common/Models/ProcessItems/Process';\r\nimport { UserGroupService } from 'src/app/services/Business/userGroup.service';\r\nimport { ArrayChanged, ObservableArray } from 'src/app/common/Models/PropertyChangedTypes';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-process-designer',\r\n  templateUrl: './process-designer.component.html',\r\n  styleUrls: ['./process-designer.component.css'],\r\n  host: {\r\n    '(document:keyup)': 'handleKeyboardEvent($event)'\r\n  }\r\n})\r\nexport class ProcessDesignerComponent implements OnInit {\r\n\r\n  process: Process;\r\n\r\n  selectedProcessItems: ProcessItem[] = [];\r\n\r\n  isLinkBeingCreated = false;\r\n  lineCreationStartX = 0;\r\n  lineCreationStartY = 0;\r\n  lineCreationEndX = 0;\r\n  lineCreationEndY = 0;\r\n\r\n  // @ViewChildren(ProcessItemComponent) processItemComponents: QueryList<ProcessItemComponent>;\r\n\r\n  @ViewChild('itemSettings') settingItemComponent: ProcessItemSettingsComponent;\r\n\r\n  @ViewChild('thebox') drawingBox: any;\r\n  startedLinkItem: ProcessItem = null;\r\n\r\n  links: Link[];\r\n  recalculateViewLinks() {\r\n    const links: Link[] = [];\r\n    this.process.processItems.value.array.forEach((processItem: ProcessItem) => {\r\n      processItem.links.forEach((link: Link) => {\r\n        if (link.startItem === processItem) {\r\n          links.push(link);\r\n        }\r\n      });\r\n    });\r\n    this.links = links;\r\n  }\r\n\r\n  constructor(\r\n    private cd: ChangeDetectorRef,\r\n    private randomIdGenerator: RandomIdGenerator,\r\n    private userGroupService: UserGroupService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initialize();\r\n\r\n    // move it so somewhere else please\r\n    this.process.processItems.subscribe(change => {\r\n      if (change.changeMode == 'orderChanged') {\r\n        let processItems = [...change.array];\r\n        processItems.shift().isFirstItem = true;\r\n\r\n        processItems.forEach(element => {\r\n          element.isFirstItem = false;\r\n        });\r\n\r\n        console.log(change.array);\r\n      }\r\n    });\r\n  }\r\n\r\n  initialize() {\r\n    this.cd.detach();\r\n\r\n    this.process = new Process(this.randomIdGenerator, this.userGroupService);\r\n\r\n    this.process.addNewStep('Request Entry', 30 + 4 * 80, 100, true);\r\n\r\n    this.cd.detectChanges();\r\n    this.cd.reattach();\r\n  }\r\n  setSelection(processItem: ProcessItem, selected: boolean) {\r\n    if (processItem.visualState.isSelected === selected) {\r\n      return;\r\n    }\r\n\r\n    processItem.visualState.isSelected = selected;\r\n\r\n    if (!processItem.visualState.isSelected) {\r\n      this.selectedProcessItems = this.selectedProcessItems.filter((item) => item !== processItem);\r\n    } else {\r\n      this.selectedProcessItems.push(processItem);\r\n    }\r\n  }\r\n\r\n  clickBox() {\r\n    this.deselectAll();\r\n  }\r\n  deselectAll() {\r\n    this.cd.detach();\r\n\r\n    this.selectedProcessItems.forEach((selectedItem) => {\r\n      selectedItem.visualState.isSelected = false;\r\n    });\r\n    this.selectedProcessItems = [];\r\n\r\n    this.cd.detectChanges();\r\n    this.cd.reattach();\r\n  }\r\n\r\n\r\n  addItem() {\r\n    this.cd.detach();\r\n\r\n    this.arrangeHorizontalDistances();\r\n    const lastItem = this.process.processItems.value.array.slice(-1)[0];\r\n\r\n    const newItem = new StepItem(\r\n      this.randomIdGenerator.generate(),\r\n      true,\r\n      false,\r\n      '[Type Step Name]',\r\n      lastItem.topPx,\r\n      lastItem.leftPx + 1,\r\n      this.userGroupService.getDefaultResponsibleType(),\r\n      this.userGroupService.getDefaultGroupAssignOption());\r\n\r\n    this.process.processItems.addItem(newItem);\r\n    this.arrangeHorizontalDistances();\r\n\r\n    this.cd.detectChanges();\r\n    this.cd.reattach();\r\n  }\r\n\r\n  addCondition() {\r\n    this.cd.detach();\r\n\r\n    this.arrangeHorizontalDistances();\r\n    const lastItem = this.process.processItems.value.array.slice(-1)[0];\r\n\r\n    const newItem = new ConditionItem(this.randomIdGenerator.generate(), true, false, '[Type Condition Name]', lastItem.topPx, lastItem.leftPx + 1);\r\n    this.process.processItems.addItem(newItem);\r\n    this.arrangeHorizontalDistances();\r\n\r\n    this.cd.detectChanges();\r\n    this.cd.reattach();\r\n  }\r\n\r\n  onProcessItemMouseDown(processItem: ProcessItem, $event: any) {\r\n\r\n    const isClickForCompletingLink: boolean = this.handleEndLinkProcess(processItem);\r\n\r\n    if (isClickForCompletingLink) {\r\n      return;\r\n    }\r\n\r\n    this.cd.detach();\r\n\r\n    if (!this.isLeftClick($event)) {\r\n      return;\r\n    }\r\n\r\n    // we assume that it is clicked to make the box selected, not to drag and drop\r\n    // we will use the value when mouse up event is caught\r\n    let clickedForDragDrop = false;\r\n\r\n    setTimeout(() => {\r\n      // if it is not released(mouse up) within 100ms, (once it is released)-> we will consider the user's intention as drag and drop.\r\n      clickedForDragDrop = true;\r\n    }, 100);\r\n\r\n    // we will revert this value and apply as selection if the click is for selection of the process item\r\n    const isSelectedBeforeClick = processItem.visualState.isSelected;\r\n\r\n    // we are making this selected\r\n    // if the click is for drag & drop this is needed,\r\n    // otherwise(selection) we will use the reverted value of isSelectedBeforeClick)\r\n    this.setSelection(processItem, true);\r\n\r\n    // we keep each item's initial position\r\n    // we will use it if drag & drop operation is triggered\r\n    this.selectedProcessItems.forEach((i) => {\r\n      i.visualState.leftPxBeforeMove = i.leftPx;\r\n      i.visualState.topPxBeforeMove = i.topPx;\r\n    });\r\n\r\n    // current mouse position (last position when drag & drop starts)\r\n    let lastXRecorded = $event.clientX;\r\n    let lastYRecorded = $event.clientY;\r\n\r\n    document.onmouseup = () => {\r\n\r\n      // user clicked for selection change\r\n      if (!clickedForDragDrop ||\r\n        (processItem.leftPx === processItem.visualState.leftPxBeforeMove && processItem.topPx === processItem.visualState.topPxBeforeMove)\r\n      ) {\r\n\r\n        this.setSelection(processItem, !isSelectedBeforeClick);\r\n\r\n        this.selectedProcessItems.forEach((i) => {\r\n          // if mouse position shifted during click (within 100ms between mousedown and mouseup),\r\n          // we recover the position of each selected shape.\r\n          i.leftPx = i.visualState.leftPxBeforeMove;\r\n          i.topPx = i.visualState.topPxBeforeMove;\r\n        });\r\n      } else {\r\n        // user clicked for drag & drop\r\n\r\n        this.cd.detectChanges();\r\n\r\n        // place each item in a vertical position that is k * 80\r\n        this.selectedProcessItems.forEach((i) => {\r\n          i.topPx = Math.round(i.visualState.middleY / 80) * 80 - i.visualState.height / 2;\r\n        });\r\n\r\n        this.arrangeHorizontalDistances();\r\n\r\n        if (this.selectedProcessItems.length === 1) {\r\n          // if there was one item drag&dropped, the intention is not to change selection\r\n          this.setSelection(processItem, isSelectedBeforeClick);\r\n        } else if (this.selectedProcessItems.length > 1) {\r\n          // if there were multiple item, it would be good to make sure that the one we drag&drop is also in selected state,\r\n          // even though it wasn't selected initially\r\n          // we can consider that user thinks that it is in the same group with other selected ones.\r\n          this.setSelection(processItem, true);\r\n        }\r\n      }\r\n\r\n      document.onmouseup = null;\r\n      document.onmousemove = null;\r\n\r\n      this.cd.detectChanges();\r\n      this.cd.reattach();\r\n    };\r\n\r\n    document.onmousemove = ($onMouseMoveEvent: any) => {\r\n\r\n      // shift: difference between last recoded position and current mouse position\r\n      const xShift = lastXRecorded - $onMouseMoveEvent.clientX;\r\n      const yShift = lastYRecorded - $onMouseMoveEvent.clientY;\r\n\r\n      // current mouse position will be used as last position in the next event trigger\r\n      lastXRecorded = $onMouseMoveEvent.clientX;\r\n      lastYRecorded = $onMouseMoveEvent.clientY;\r\n\r\n      // apply x and y shifts to each selected element\r\n      this.selectedProcessItems.forEach((i) => {\r\n        i.leftPx = i.leftPx - xShift;\r\n        i.topPx = i.topPx - yShift;\r\n      });\r\n\r\n      this.cd.detectChanges();\r\n    };\r\n\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  private isLeftClick($event: any) {\r\n    return $event.which === 1;\r\n  }\r\n\r\n  arrangeHorizontalDistances() {\r\n\r\n    if (this.process.processItems.value.array.length < 2) {\r\n      return;\r\n    }\r\n    const sortedProcessItems = [...this.process.processItems.value.array]\r\n      .sort((a, b) => a.leftPx - b.leftPx);\r\n\r\n    this.process.processItems.updateOrder(sortedProcessItems);\r\n\r\n    const buffer = 70;\r\n    let i: number;\r\n    for (i = 1; i < sortedProcessItems.length; i++) {\r\n      const previousItem = sortedProcessItems[i - 1];\r\n      const currentItem = sortedProcessItems[i];\r\n\r\n      const minLeft = previousItem.leftPx + previousItem.visualState.width + buffer;\r\n\r\n      if (currentItem.leftPx < minLeft) {\r\n        currentItem.leftPx = minLeft;\r\n      }\r\n    }\r\n  }\r\n\r\n  startLinkProcess($event: any) {\r\n\r\n    const processItem = $event.processItem as ProcessItem;\r\n    const $clickedEvent = $event.event;\r\n\r\n    const isClickForCompletingLink: boolean = this.handleEndLinkProcess(processItem);\r\n\r\n    if (isClickForCompletingLink) {\r\n      return;\r\n    }\r\n\r\n    this.isLinkBeingCreated = true;\r\n    this.startedLinkItem = processItem;\r\n    this.lineCreationEndX = this.lineCreationStartX = processItem.visualState.middleX;\r\n    this.lineCreationEndY = this.lineCreationStartY = processItem.visualState.middleY;\r\n\r\n    const drawingBoxRectangle = this.drawingBox.nativeElement.getBoundingClientRect();\r\n\r\n    this.lineCreationEndX = $clickedEvent.clientX - drawingBoxRectangle.left;\r\n    this.lineCreationEndY = $clickedEvent.clientY - drawingBoxRectangle.top;\r\n\r\n    let previousX = $clickedEvent.clientX;\r\n    let previousY = $clickedEvent.clientY;\r\n\r\n    document.onmousemove = (ev: MouseEvent) => {\r\n\r\n      // return;\r\n\r\n      const shiftX = previousX - ev.clientX;\r\n      const shiftY = previousY - ev.clientY;\r\n\r\n      previousX = ev.clientX;\r\n      previousY = ev.clientY;\r\n\r\n      this.lineCreationEndX = this.lineCreationEndX - shiftX;\r\n      this.lineCreationEndY = this.lineCreationEndY - shiftY;\r\n    };\r\n  }\r\n\r\n  handleEndLinkProcess(processItem: ProcessItem): boolean {\r\n\r\n    if (!this.isLinkBeingCreated) {\r\n      return false;\r\n    }\r\n\r\n    if (this.startedLinkItem == null) {\r\n      // unexpected case\r\n      return true;\r\n    }\r\n\r\n    if (this.startedLinkItem === processItem) {\r\n      this.isLinkBeingCreated = false;\r\n      this.startedLinkItem = null;\r\n\r\n      return true;\r\n    }\r\n\r\n    const link = new Link({ actionName: 'Submit', startItem: this.startedLinkItem, endItem: processItem });\r\n\r\n    this.startedLinkItem.links.push(link);\r\n    processItem.links.push(link);\r\n    this.recalculateViewLinks();\r\n\r\n    this.isLinkBeingCreated = false;\r\n    this.startedLinkItem = null;\r\n\r\n    return true;\r\n  }\r\n\r\n  openSettingDialogue(stepItem: StepItem) {\r\n    this.settingItemComponent.open(stepItem);\r\n  }\r\n\r\n  mouseEnter(arg) {\r\n    console.log(arg);\r\n  }\r\n\r\n  handleKeyboardEvent(event: KeyboardEvent) {\r\n    if (event.key == \"Escape\") {\r\n      if (this.isLinkBeingCreated) {\r\n        this.isLinkBeingCreated = false;\r\n        this.startedLinkItem = null;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<app-process-item-settings\r\n  [process]=\"process\"\r\n  #itemSettings\r\n>\r\n</app-process-item-settings>\r\n\r\n<div class=\"designer-wrapper\">\r\n  <div class=\"header\">\r\n    <div class=\"title\">\r\n      Process Builder: <b>New head count request</b>\r\n    </div>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"addItem()\"\r\n    >\r\n      New Step\r\n      <!-- state event state\r\n          state decision state\r\n          state event action state\r\n          state event action decison state\r\n          stoppropagation as directive\r\n          select by drawing a box -->\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"addCondition()\"\r\n    >\r\n      New Condition\r\n    </button>\r\n  </div>\r\n  <div\r\n    #thebox\r\n    id=\"the-box\"\r\n    class=\"box\"\r\n    (click)=\"clickBox()\"\r\n  >\r\n    <div\r\n      class=\"inner-box\"\r\n      *ngIf=\"this.process.processItems | async; let processItems \"\r\n    >\r\n\r\n      <svg\r\n        width=\"100\"\r\n        height=\"100\"\r\n        style=\"overflow: visible\"\r\n      >\r\n\r\n        <defs>\r\n          <marker\r\n            id=\"arrow-end\"\r\n            markerWidth=\"2\"\r\n            markerHeight=\"2\"\r\n            refX=\"12\"\r\n            refY=\"1\"\r\n            orient=\"auto\"\r\n            markerUnits=\"strokeWidth\"\r\n          >\r\n            <path\r\n              d=\"M0,0 L0,2 L1,1 z\"\r\n              fill=\"white\"\r\n            ></path>\r\n          </marker>\r\n        </defs>\r\n\r\n        <line\r\n          *ngIf=\"isLinkBeingCreated\"\r\n          stroke-width=\"10\"\r\n          [attr.x1]=\"lineCreationStartX\"\r\n          [attr.y1]=\"lineCreationStartY\"\r\n          [attr.x2]=\"lineCreationEndX\"\r\n          [attr.y2]=\"lineCreationEndY\"\r\n          stroke=\"green\"\r\n          marker-end=\"url(#arrow-end)\"\r\n        />\r\n\r\n        <line\r\n          *ngFor=\"let link of links\"\r\n          class=\"connector\"\r\n          stroke-width=\"10\"\r\n          [attr.x1]=\"link.startItem.visualState.middleX\"\r\n          [attr.y1]=\"link.startItem.visualState.middleY\"\r\n          [attr.x2]=\"link.endItem.visualState.middleX\"\r\n          [attr.y2]=\"link.endItem.visualState.middleY\"\r\n          [attr.stroke]=\"link.color\"\r\n          marker-end=\"url(#arrow-end)\"\r\n          (mouseenter)=\"mouseEnter(link.startItem.visualState.middleX) \"\r\n        >\r\n        </line>\r\n\r\n      </svg>\r\n\r\n      <!-- angular confuses types, .array error can be ignored -->\r\n      <app-process-item\r\n        appClickStopPropagation\r\n        *ngFor=\"let processItem of processItems.array\"\r\n        (linkCreated)=\"startLinkProcess($event)\"\r\n        [processItem]=\"processItem\"\r\n        [style.left.px]=\"processItem.leftPx\"\r\n        [style.top.px]=\"processItem.topPx\"\r\n        (mousedown)=\"onProcessItemMouseDown(processItem, $event)\"\r\n        (settingDialogueOpening)=\"openSettingDialogue($event)\"\r\n      >\r\n      </app-process-item>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthKeyInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    const tempUserId: string = localStorage.getItem('temp_user_id');\r\n\r\n    if (tempUserId !== '' && tempUserId != null) {\r\n\r\n      const authReq = request.clone({\r\n        headers: request.headers.set('temp_user_id', tempUserId)\r\n      });\r\n\r\n      return next.handle(authReq);\r\n    }\r\n    else {\r\n      return next.handle(request);\r\n    }\r\n  }\r\n}\r\n","<div class=\"wrapper\">\r\n  <div class=\"congrats-wrapper\">\r\n    <img\r\n      *ngIf=\"!taskCompletedModel.processCompleted && !taskCompletedModel.processCanceled\"\r\n      class=\"image\"\r\n      src=\"/assets/images/completed-green.png\"\r\n    >\r\n    <img\r\n      *ngIf=\"taskCompletedModel.processCompleted\"\r\n      class=\"image\"\r\n      src=\"/assets/images/completed-green.png\"\r\n    >\r\n    <img\r\n      *ngIf=\"taskCompletedModel.processCanceled\"\r\n      class=\"image\"\r\n      src=\"/assets/images/cancel.jpg\"\r\n    >\r\n    <h1\r\n      *ngIf=\"!taskCompletedModel.processCompleted && !taskCompletedModel.processCanceled\"\r\n      class=\"congrats-text\"\r\n    >Congrats!</h1>\r\n    <h1\r\n      *ngIf=\"taskCompletedModel.processCompleted\"\r\n      class=\"congrats-text\"\r\n    >That's it!</h1>\r\n    <h1\r\n      *ngIf=\"taskCompletedModel.processCanceled\"\r\n      class=\"congrats-text\"\r\n    >Done!</h1>\r\n  </div>\r\n  <h1\r\n    *ngIf=\"!taskCompletedModel.processCompleted && !taskCompletedModel.processCanceled\"\r\n    class=\"task-completed-text\"\r\n  >Task Completed!</h1>\r\n  <h1\r\n    *ngIf=\"taskCompletedModel.processCompleted\"\r\n    class=\"task-completed-text\"\r\n  >The process with all tasks are now completed!</h1>\r\n  <h1\r\n    *ngIf=\"taskCompletedModel.processCanceled\"\r\n    class=\"task-completed-text\"\r\n  >The process is canceled.</h1>\r\n  <ng-container *ngIf=\"!taskCompletedModel.processCompleted && !taskCompletedModel.processCanceled\">\r\n    <h5>Next task is</h5>\r\n    <a\r\n      class=\"next-task\"\r\n      [routerLink]=\"['/EditTask/' + taskCompletedModel.processId + '/' + taskCompletedModel.processInstanceId + '/'+ taskCompletedModel.taskInstanceId]\"\r\n    >{{taskCompletedModel.taskName}}</a>\r\n    <h5 class=\"assigned-to-label\">Assigned to </h5>\r\n    <h2 class=\"assigned-to\">{{taskCompletedModel.assigneeName}}</h2>\r\n  </ng-container>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-task-completed',\r\n  templateUrl: './task-completed.component.html',\r\n  styleUrls: ['./task-completed.component.css']\r\n})\r\nexport class TaskCompletedComponent implements OnInit {\r\n\r\n  @Input() taskCompletedModel: any;\r\n\r\n  get nextTaskUrl(): string {\r\n    return '';\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'bpm.ist';\r\n}\r\n","<div fxLayout=\"row\">\r\n  <app-left-menu></app-left-menu>\r\n  <div style=\"height: 100vh; overflow-y: auto;width: 100%;\">\r\n    <router-outlet></router-outlet>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Field } from './Field';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { IPropertyChanged, nameof, PC } from '../PropertyChangedTypes';\r\n\r\nexport class FieldInStep implements IPropertyChanged<FieldInStep> {\r\n\r\n  constructor(\r\n    public id: string,\r\n    protected retrievedFromServer: boolean,\r\n    public field: Field,\r\n    private _readOnly: boolean,\r\n    public isRequired: boolean) {\r\n    this.field.fieldInStepList.subscribe(fieldInStepList => {\r\n      this.subscribeFieldInStepList(fieldInStepList);\r\n    });\r\n  }\r\n\r\n  otherFieldInStepsSubscripbtions: Subscription[] = [];\r\n\r\n  subscribeFieldInStepList(fieldInStepList: FieldInStep[]) {\r\n\r\n    this.otherFieldInStepsSubscripbtions.forEach(element => {\r\n      element.unsubscribe();\r\n    });\r\n\r\n    this.otherFieldInStepsSubscripbtions = [];\r\n\r\n    fieldInStepList.forEach(element => {\r\n\r\n      var subscription = element.propertyChanged.pipe(filter(v => v.propertyName == nameof<FieldInStep>(\"readOnly\"))).subscribe(v => {\r\n        this.calculateEditableFieldUsedInAnotherStep();\r\n      });\r\n\r\n      this.otherFieldInStepsSubscripbtions.push(subscription);\r\n    });\r\n\r\n    this.calculateEditableFieldUsedInAnotherStep();\r\n  }\r\n\r\n  get readOnly() {\r\n    return this._readOnly;\r\n  }\r\n  set readOnly(val: boolean) {\r\n    const oldValue = this._readOnly;\r\n    this._readOnly = val;\r\n    this.propertyChanged.next(new PC('readOnly', val, oldValue, this));\r\n  }\r\n\r\n  deleted = false;\r\n\r\n  // assignment of this value might be moved to a central point.\r\n  editableFieldUsedInAnotherStep = false;\r\n\r\n  calculateEditableFieldUsedInAnotherStep() {\r\n    this.editableFieldUsedInAnotherStep = this.field.fieldInStepList.value.some(f => f != this && f.readOnly == false && f.deleted == false);\r\n  }\r\n\r\n  propertyChanged = new Subject<PC<FieldInStep>>();\r\n\r\n  visualState = {\r\n    justDeleted: false // use this for showing, undo?\r\n\r\n    // visual state icin tip olustur\r\n    // yeni mi ekleniyor yoksa baska state'ten mi geliyor onu tut\r\n    // bir takim field'lar degisince, eger baska state'ten eklendiyse, diger yerleri de etkiliyor ona gore diye uyar.\r\n  };\r\n}\r\n\r\n\r\n","import { FieldType } from './FieldType';\r\nimport { FieldInStep } from './FieldInStep';\r\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\r\nimport { IPropertyChanged, PC } from '../PropertyChangedTypes';\r\n\r\nexport class Field implements IPropertyChanged<Field>{\r\n\r\n  fieldInStepList = new BehaviorSubject<FieldInStep[]>([]);\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  constructor(private _id: string) {\r\n    this.generalFieldSettings = new GeneralFieldSettings(this);\r\n  }\r\n  propertyChanged = new Subject<PC<Field>>();\r\n\r\n  get id(): string {\r\n    return this._id;\r\n  }\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  _name = '';\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n  set name(value: string) {\r\n    const oldValue = this._name;\r\n    this._name = value;\r\n    this.propertyChanged.next(new PC('name', value, oldValue, this));\r\n  }\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  private _fieldType: FieldType = null;\r\n  get fieldType(): FieldType {\r\n    return this._fieldType;\r\n  }\r\n  set fieldType(value: FieldType) {\r\n    const oldValue = this._fieldType;\r\n    this._fieldType = value;\r\n    this.propertyChanged.next(new PC('fieldType', value, oldValue, this));\r\n  }\r\n\r\n  generalFieldSettings: GeneralFieldSettings;\r\n\r\n  numericFieldSettings = {\r\n    hasMinValueRestriction: false,\r\n    minValue: null as number,\r\n    hasMaxValueRestriction: false,\r\n    maxValue: null as number\r\n  };\r\n\r\n  textFieldSettings = {\r\n    multiline: false,\r\n    numberOfLines: 2,\r\n    hasMinNumberOfChars: false,\r\n    minNumberOfChars: null as number,\r\n    hasMaxNumberOfChars: false,\r\n    maxNumberOfChars: null as number,\r\n    setRegexValidation: false,\r\n    regex: null as string,\r\n\r\n    visualState: {\r\n      // validateAsEmail: false,\r\n      // showAdvancedSettings: false\r\n    }\r\n  };\r\n\r\n}\r\nexport class GeneralFieldSettings {\r\n  constructor(private field: Field) {\r\n  }\r\n\r\n  _multiple: boolean;\r\n  set multipleValue(value: boolean) {\r\n    const oldValue = this._multiple;\r\n    this._multiple = value;\r\n    // TODO this usage may not be ideal. no final model yet, for hierarcial data structures.\r\n    this.field.propertyChanged.next(new PC('generalFieldSettings', value, oldValue, this.field));\r\n  }\r\n  get multipleValue(): boolean {\r\n    return this._multiple;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/Auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  busy = false;\r\n  username = '';\r\n  password = '';\r\n\r\n  ngOnInit(): void {\r\n    this.authService.logout();\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.username, this.password);\r\n    console.log(this.username, this.password);\r\n  }\r\n\r\n}\r\n","<div\r\n  fxLayout\r\n  fxLayoutAlign=\"center center\"\r\n  style=\"height: 100%;\"\r\n>\r\n  <mat-card style=\"width: 300px;border-radius: 8px;\">\r\n    <div style=\"text-align: center;\">\r\n      <img\r\n        style=\"width: 150px;height:154.2px;border-radius: 10px;\"\r\n        src=\"/assets/images/logo.png\"\r\n      >\r\n    </div>\r\n    <div style=\"margin-top:20px; text-align: center;font-size: 24px;\">\r\n      Login\r\n    </div>\r\n\r\n\r\n    <div style=\"margin-top:20px;\">\r\n      <ejs-textbox\r\n        placeholder=\"User name\"\r\n        cssClass=\"e-outline\"\r\n        floatLabelType=\"Always\"\r\n        [(value)]=\"username\"\r\n      >\r\n      </ejs-textbox>\r\n    </div>\r\n    <div style=\"margin-top:10px\">\r\n      <ejs-textbox\r\n        placeholder=\"Password\"\r\n        cssClass=\"e-outline\"\r\n        floatLabelType=\"Always\"\r\n        [(value)]=\"password\"\r\n      ></ejs-textbox>\r\n    </div>\r\n    <button\r\n      style=\"margin-top:10px\"\r\n      (click)=\"login()\"\r\n      mat-button\r\n      mat-raised-button\r\n      [disabled]=\"busy\"\r\n      color=\"primary\"\r\n    >\r\n      Login\r\n    </button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  </mat-card>\r\n</div>\r\n","import { ProcessItem } from './ProcessItem';\r\nimport { Link } from './Link';\r\nimport { Field } from '../Field/Field';\r\nimport { StepItem } from './StepItem';\r\nimport { RandomIdGenerator } from '../../../services/Business/general.service';\r\nimport { FieldInStep } from '../Field/FieldInStep';\r\nimport { UserGroupService } from '../../../services/Business/userGroup.service';\r\nimport { from, Observable, BehaviorSubject, Subscription } from 'rxjs';\r\nimport { ArrayChanged, ObservableArray } from '../PropertyChangedTypes';\r\nimport { ProcessStarter } from '../Responsible/ProcessStarter';\r\n\r\nexport class Process {\r\n\r\n  constructor(\r\n    private randomIdGenerator: RandomIdGenerator,\r\n    private userGroupService: UserGroupService,\r\n  ) {\r\n\r\n    this.processStarter = new ProcessStarter(\r\n      this.userGroupService.getDefaultProcessStarter(), []);\r\n\r\n    this.fields.subscribe(change => {\r\n      this.setAllUserTypeFields(change);\r\n    });\r\n  }\r\n\r\n  processId: string;\r\n\r\n  processItems = new ObservableArray<ProcessItem>(this);\r\n\r\n  processStarter: ProcessStarter;\r\n\r\n  links: Link[] = [];\r\n\r\n  public fields = new ObservableArray<Field>(this);\r\n  userTypeFields: Field[] = [];\r\n  groupTypeFields: Field[] = [];\r\n  multipleUserTypeFields: Field[] = [];\r\n  multipleGroupTypeFields: Field[] = [];\r\n\r\n  addNewField(stepItem: StepItem) {\r\n\r\n    const field = new Field(this.randomIdGenerator.generate());\r\n\r\n    this.fields.addItem(field);\r\n\r\n    const fieldInStep = new FieldInStep(\r\n      this.randomIdGenerator.generate(),\r\n      false,\r\n      field,\r\n      false,\r\n      false);\r\n\r\n    field.fieldInStepList.next([...field.fieldInStepList.value, fieldInStep]);\r\n\r\n    stepItem.fieldsInStep.push(fieldInStep);\r\n\r\n    return { createdFieldInStep: fieldInStep };\r\n  }\r\n\r\n  addNewStepField(stepItem: StepItem, field: Field) {\r\n    // TODO: work on scenarios\r\n    // initializing with values from server and\r\n    // creating values from ui\r\n    // creating a fresh process\r\n\r\n  }\r\n\r\n  addNewStep(stepName: string, topPx: number, leftPx: number, isFirstItem: boolean = false) {\r\n    const newStep = new StepItem(\r\n      this.randomIdGenerator.generate(),\r\n      true,\r\n      false,\r\n      stepName,\r\n      topPx,\r\n      leftPx,\r\n      this.userGroupService.getDefaultResponsibleType(),\r\n      this.userGroupService.getDefaultGroupAssignOption(),\r\n    );\r\n\r\n    newStep.isFirstItem = isFirstItem;\r\n\r\n    this.processItems.addItem(newStep);\r\n  }\r\n\r\n  deleteField(field: Field) {\r\n    // TODO: check if the field is a user field or group field picked as the responsible in a step\r\n    // TODO: call value changed\r\n    //((field as any).processSubscription as Subscription).unsubscribe();\r\n\r\n    // stop deletion or ask if they want to remove that field being selected\r\n  }\r\n\r\n  private setAllUserTypeFields(change: ArrayChanged<Field>) {\r\n\r\n    const fieldAddedOrRemovedWithUserOrGroupFieldType =\r\n      (change.changeMode == 'added' || change.changeMode == 'removed') &&\r\n      (change.changedValue.fieldType?.code == 'user' || change.changedValue.fieldType?.code == 'group');\r\n\r\n    const fieldFieldTypeOrGeneralFieldSettingsChanged =\r\n      change.changeMode == 'itemPropertyChanged' &&\r\n      (change.itemPropertyChanged.propertyName == 'fieldType' || change.itemPropertyChanged.propertyName == 'generalFieldSettings');\r\n\r\n    if (!fieldAddedOrRemovedWithUserOrGroupFieldType && !fieldFieldTypeOrGeneralFieldSettingsChanged) {\r\n      return;\r\n    }\r\n\r\n    const fields = this.fields.getArray();\r\n\r\n    this.userTypeFields =\r\n      fields.filter(field => field.fieldType?.code === 'user' && !field.generalFieldSettings.multipleValue);\r\n\r\n    this.multipleUserTypeFields =\r\n      fields.filter(field => field.fieldType?.code === 'user' && field.generalFieldSettings.multipleValue);\r\n\r\n    this.groupTypeFields =\r\n      fields.filter(field => field.fieldType?.code === 'group' && !field.generalFieldSettings.multipleValue);\r\n\r\n    this.multipleGroupTypeFields =\r\n      fields.filter(field => field.fieldType?.code === 'group' && field.generalFieldSettings.multipleValue);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MaterialModule } from './material-module';\r\nimport { UiControlsModule } from './ui-controls-module';\r\n\r\nimport { ProcessDesignerComponent } from './components/process-designer/process-designer.component';\r\nimport { ProcessItemComponent } from './components/process-item/process-item.component';\r\nimport { ProcessItemSettingsComponent } from './components/process-item-settings/process-item-settings.component';\r\n\r\nimport { ClickStopPropagationDirective } from './common/Directives/click-stop-propagation.directive';\r\n\r\n\r\nimport { MatFormFieldDefaultOptions, MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\r\nimport { EditTaskComponent } from './components/edit-task/edit-task.component';\r\nimport { ListProcessesComponent } from './components/list-processes/list-processes.component';\r\nimport { TaskCompletedComponent } from './components/task-completed/task-completed.component';\r\nimport { CustomDateTimePipe } from './common/Pipes/custom-date-time.pipe';\r\nimport { CustomDatePipe } from './common/Pipes/custom-date-time.pipe';\r\nimport { ListTasksComponent } from './components/list-tasks/list-tasks.component';\r\nimport { MyGroupsTasksComponent } from './components/my-groups-tasks/my-groups-tasks.component';\r\nimport { LeftMenuComponent } from './components/left-menu/left-menu.component';\r\nimport { FormComponent } from './components/form/form.component';\r\nimport { GenericFieldComponent } from './components/fields/generic-field/generic-field.component';\r\nimport { DateFieldComponent } from './components/fields/date-field/date-field.component';\r\nimport { TextFieldComponent } from './components/fields/text-field/text-field.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AuthKeyInterceptor } from './services/Web/auth-key.interceptor';\nimport { ResponsibleComponent } from './components/process-item-settings-components/responsible/responsible.component';\nimport { StepFormFieldsComponent } from './components/process-item-settings-components/step-form-fields/step-form-fields.component';\nimport { FieldDefinitionEditorComponent } from './components/process-item-settings-components/field-definition-editor/field-definition-editor.component';\r\n\r\nconst appearance: MatFormFieldDefaultOptions = {\r\n  appearance: 'outline'\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProcessDesignerComponent,\r\n    ProcessItemComponent,\r\n    ProcessItemSettingsComponent,\r\n    ClickStopPropagationDirective,\r\n    EditTaskComponent,\r\n    ListProcessesComponent,\r\n    TaskCompletedComponent,\r\n    CustomDateTimePipe,\r\n    CustomDatePipe,\r\n    ListTasksComponent,\r\n    MyGroupsTasksComponent,\r\n    LeftMenuComponent,\r\n    FormComponent,\r\n    GenericFieldComponent,\r\n    DateFieldComponent,\r\n    TextFieldComponent,\r\n    LoginComponent,\r\n    ResponsibleComponent,\r\n    StepFormFieldsComponent,\r\n    FieldDefinitionEditorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    UiControlsModule,\r\n    FlexLayoutModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n      useValue: appearance\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS, useClass: AuthKeyInterceptor, multi: true\r\n    }\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Observable, Subject } from 'rxjs';\r\nimport { ProcessItemComponent } from 'src/app/components/process-item/process-item.component';\r\nimport { IPropertyChanged, PC } from '../PropertyChangedTypes';\r\nimport { Link } from './Link';\r\nimport { ProcessItemVisualState } from './ProcessItemVisualState';\r\n\r\nexport class ProcessItem implements IPropertyChanged<ProcessItem> {\r\n\r\n  public constructor(\r\n    public readonly id: string,\r\n    public justCreatedOnInterface: boolean,\r\n    public retrievedFromServer: boolean,\r\n    public topPx: number = 80,\r\n    public leftPx: number = 80,\r\n    public text: string = '',\r\n    public deletable: boolean = true,\r\n    public isFirstItem: boolean = false\r\n  ) {\r\n\r\n  }\r\n\r\n  propertyChanged = new Subject<PC<ProcessItem>>();\r\n\r\n  links: Link[] = []; // persistent\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  protected _visualState: ProcessItemVisualState = new ProcessItemVisualState(this);\r\n\r\n  get visualState(): ProcessItemVisualState {\r\n    return this._visualState;\r\n  }\r\n}\r\n","import { ProcessItemVisualState } from './ProcessItemVisualState';\r\n\r\nexport class StepItemVisualState extends ProcessItemVisualState {\r\n  // fieldsViewMode: FieldViewModes = 'listFields';\r\n}\r\n","<div style=\"width:500px\">\r\n  <ng-container [ngSwitch]=\"field.fieldType\">\r\n\r\n    <app-date-field\r\n      *ngSwitchCase=\"'Date'\"\r\n      [field]=\"field\"\r\n    ></app-date-field>\r\n\r\n    <app-text-field\r\n      *ngSwitchCase=\"'Text'\"\r\n      [field]=\"field\"\r\n    ></app-text-field>\r\n\r\n    <div class=\"error-message-wrapper\">\r\n      <div *ngIf=\"field.formControl.errors?.required\">\r\n        This field is required.\r\n      </div>\r\n\r\n      <!-- touched: {{field.formControl.touched}} <br /> -->\r\n      <!-- <div *ngIf=\"field.formControl.invalid && field.formControl.dirty \"> -->\r\n      <!-- <div>\r\n        {{field.formControl.errors | json }}\r\n        <br />\r\n        <br />\r\n\r\n\r\n        dirty:{{field.formControl.dirty}}, disabled: {{field.formControl.disabled}}, enabled:\r\n        {{field.formControl.enabled}}, invalid:{{field.formControl.invalid}}, pristine: {{field.formControl.pristine}},\r\n        touched: {{field.formControl.touched}}, valid:{{field.formControl.valid}}\r\n\r\n      </div> -->\r\n    </div>\r\n\r\n  </ng-container>\r\n\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { RenderingField } from '../../form/form.component';\r\n\r\n@Component({\r\n  selector: 'app-generic-field',\r\n  templateUrl: './generic-field.component.html',\r\n  styleUrls: ['./generic-field.component.css']\r\n})\r\nexport class GenericFieldComponent implements OnInit {\r\n\r\n  @Input() field: RenderingField;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","export class Group {\r\n  constructor(public groupName: string, public groupId: string) {\r\n  }\r\n}\r\n\r\n","<div *ngIf=\"process && processItem \">\n\n\n  <div\n    fxLayout=\"column\"\n    *ngIf=\"stepItem.isFirstItem == true\"\n  >\n    <ejs-dropdownlist\n      style=\"margin-top:22px\"\n      placeholder=\"\"\n      name=\"whoToAssign\"\n      [dataSource]='showingResponsibleTypes'\n      [ngModel]=\"stepItem?.responsible?.responsibleType?.code\"\n      [fields]=\"{value:'code', text:'name' }\"\n      (change)='stepItem.responsible.responsibleType = $event.itemData; '\n      [allowFiltering]='false'\n      cssClass=\"e-outline\"\n      floatLabelType=\"Never\"\n      popupHeight='500px'\n    >\n\n      <ng-template\n        #itemTemplate=\"\"\n        let-data=\"\"\n      >\n\n        <span *ngIf=\"data.visualState.enabled\">{{data.name}}</span>\n        <span *ngIf=\"!data.visualState.enabled\"><span style=\"text-decoration: line-through;\">{{data.name}}</span>\n          <span> [No field exists]</span></span>\n\n      </ng-template>\n\n      <ng-template\n        #footerTemplate=\"\"\n        let-data=\"\"\n      >\n\n        <div\n          fxLayout=\"row\"\n          fxLayoutAlign=\"end center\"\n          style=\"height: 30px;\"\n          *ngIf=\"stepItem?.responsible?.visualState.show_ShowHideAdvancedOptions\"\n        >\n\n          <div\n            style=\"\n                        text-decoration: underline;\n                        cursor:pointer;\n                        transform: translateX(-4px);\"\n            (click)='showAdvancedResponsibleTypes = !showAdvancedResponsibleTypes'\n          >\n\n            <ng-container *ngIf=\"showAdvancedResponsibleTypes\">Hide advanced options</ng-container>\n            <ng-container *ngIf=\"!showAdvancedResponsibleTypes\">Show advanced options</ng-container>\n\n          </div>\n        </div>\n\n      </ng-template>\n    </ejs-dropdownlist>\n  </div>\n\n  <div\n    fxLayout=\"column\"\n    *ngIf=\"stepItem.isFirstItem == false\"\n  >\n\n    <ejs-dropdownlist\n      style=\"margin-top:22px\"\n      placeholder=\"\"\n      name=\"whoToAssign\"\n      [dataSource]='showingResponsibleTypes'\n      [ngModel]=\"stepItem?.responsible?.responsibleType?.code\"\n      [fields]=\"{value:'code', text:'name' }\"\n      (change)='stepItem.responsible.responsibleType = $event.itemData; '\n      [allowFiltering]='false'\n      cssClass=\"e-outline\"\n      floatLabelType=\"Never\"\n      popupHeight='500px'\n    >\n\n      <ng-template\n        #itemTemplate=\"\"\n        let-data=\"\"\n      >\n\n        <span *ngIf=\"data.visualState.enabled\">{{data.name}}</span>\n        <span *ngIf=\"!data.visualState.enabled\"><span style=\"text-decoration: line-through;\">{{data.name}}</span>\n          <span> [No field exists]</span></span>\n\n      </ng-template>\n\n      <ng-template\n        #footerTemplate=\"\"\n        let-data=\"\"\n      >\n\n        <div\n          fxLayout=\"row\"\n          fxLayoutAlign=\"end center\"\n          style=\"height: 30px;\"\n          *ngIf=\"stepItem?.responsible?.visualState.show_ShowHideAdvancedOptions\"\n        >\n\n          <div\n            style=\"\n                        text-decoration: underline;\n                        cursor:pointer;\n                        transform: translateX(-4px);\"\n            (click)='showAdvancedResponsibleTypes = !showAdvancedResponsibleTypes'\n          >\n\n            <ng-container *ngIf=\"showAdvancedResponsibleTypes\">Hide advanced options</ng-container>\n            <ng-container *ngIf=\"!showAdvancedResponsibleTypes\">Show advanced options</ng-container>\n\n          </div>\n        </div>\n\n      </ng-template>\n    </ejs-dropdownlist>\n\n\n    <div\n      *ngIf=\"stepItem.responsible.visualState.isTypeGroup\"\n      fxLayout=\"column\"\n    >\n\n      <ejs-dropdownlist\n        class=\"detailed-settings-item-wrapper\"\n        placeholder=\"Group\"\n        name=\"group\"\n        [dataSource]='groups'\n        [ngModel]=\"stepItem?.responsible?.group?.groupId\"\n        [fields]=\"{value:'groupId', text:'groupName' }\"\n        (change)='stepItem.responsible.group = $event.itemData; '\n        [allowFiltering]='true'\n        [ignoreAccent]='true'\n        filterBarPlaceholder='Search'\n        cssClass=\"e-outline detailed-settings-item-wrapper\"\n        marks\n        and\n        floatLabelType=\"Always\"\n      >\n      </ejs-dropdownlist>\n\n    </div>\n\n    <div *ngIf=\"stepItem.responsible.visualState.isTypeUser\">\n\n      <ejs-dropdownlist\n        style=\"margin-top:22px\"\n        placeholder=\"User\"\n        name=\"user\"\n        [dataSource]='users'\n        [ngModel]=\"stepItem?.responsible?.user?.userId\"\n        [fields]=\"{value:'userId', text:'userName' }\"\n        (change)='stepItem.responsible.user = $event.itemData; '\n        [allowFiltering]='true'\n        [ignoreAccent]='true'\n        filterBarPlaceholder='Search'\n        cssClass=\"e-outline\"\n        floatLabelType=\"Always\"\n      >\n      </ejs-dropdownlist>\n\n    </div>\n\n    <div *ngIf=\"stepItem.responsible.visualState.isTypeGroupList\">\n      <ejs-multiselect\n        #groupsMultiselect\n        style=\"margin-top:22px\"\n        placeholder=\"Groups\"\n        name=\"groups\"\n        [dataSource]='groups'\n        [fields]=\"{ text: 'groupName', value: 'groupId' }\"\n        mode='Box'\n        [showDropDownIcon]='true'\n        [closePopupOnSelect]=\"false\"\n        filterBarPlaceholder='Search'\n        cssClass=\"e-outline\"\n        floatLabelType=\"Always\"\n        [allowFiltering]='true'\n        [ignoreAccent]='true'\n        [(value)]=\"selectedGroupIds\"\n      ></ejs-multiselect>\n\n    </div>\n\n    <div *ngIf=\"stepItem.responsible.visualState.isTypeUserList\">\n\n      <ejs-multiselect\n        style=\"margin-top:22px\"\n        placeholder=\"Users\"\n        name=\"users\"\n        [dataSource]='users'\n        [fields]=\"{ text: 'userName', value: 'userId' }\"\n        mode='Box'\n        [showDropDownIcon]='true'\n        filterBarPlaceholder='Search'\n        cssClass=\"e-outline\"\n        floatLabelType=\"Always\"\n        [allowFiltering]='true'\n        [ignoreAccent]='true'\n        (change)=\"assignMultiselectValues(stepItem.responsible, 'users', 'userId', users, $event.value, $event);\"\n        [(ngModel)]=\"selectedUserIds\"\n      ></ejs-multiselect>\n\n    </div>\n\n    <div *ngIf=\"stepItem.responsible.visualState.isTypeUserFromField\">\n\n      <ejs-dropdownlist\n        style=\"margin-top:22px\"\n        placeholder=\"User Field\"\n        name=\"userField\"\n        [dataSource]='process.userTypeFields'\n        [ngModel]=\"stepItem?.responsible?.userField?.id\"\n        [fields]=\"{value:'id', text:'name' }\"\n        (change)='stepItem.responsible.userField = $event.itemData; '\n        [allowFiltering]='true'\n        [ignoreAccent]='true'\n        filterBarPlaceholder='Search'\n        cssClass=\"e-outline\"\n        floatLabelType=\"Always\"\n      >\n      </ejs-dropdownlist>\n\n    </div>\n\n    <div *ngIf=\"stepItem.responsible.visualState.showGroupAssignOptions\">\n\n      <div\n        class=\"detailed-settings-item-wrapper\"\n        style=\"\n                            font-size: 12px;\n                            margin-left: 9px;\n                            line-height: 1em;\n                            color: #777;\n                            transform: translateY(2px);\n                            background-color: white;\n                            padding-left: 5px;\n                            display: inline-block;\n                            width: 106px;\"\n      >How to distribute?</div>\n      <mat-selection-list\n        [multiple]=\"false\"\n        (selectionChange)=\"stepItem.responsible.groupAssignOption = $event.option.value\"\n      >\n        <mat-list-option\n          *ngFor=\"let groupAssignOption of groupAssignOptions\"\n          [value]=\"groupAssignOption\"\n          [selected]=\"groupAssignOption.optionCode === stepItem?.responsible?.groupAssignOption?.optionCode\"\n          [matTooltip]=\"groupAssignOption.optionTooltip\"\n        >\n\n          <div style=\"vertical-align: middle;height: 100%;\">{{groupAssignOption.optionText}}</div>\n\n        </mat-list-option>\n\n      </mat-selection-list>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ResponsibleType } from 'src/app/common/Models/Responsible/ResponsibleType';\nimport { StepItem } from 'src/app/common/Models/ProcessItems/StepItem';\nimport { ProcessItem } from 'src/app/common/Models/ProcessItems/ProcessItem';\nimport { UserGroupService } from 'src/app/services/Business/userGroup.service';\nimport { Group } from 'src/app/common/Models/Responsible/Group';\nimport { User } from 'src/app/common/Models/Responsible/User';\nimport { GroupAssignOption } from 'src/app/common/Models/Responsible/GroupAssignOption';\nimport { Process } from 'src/app/common/Models/ProcessItems/Process';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-responsible',\n  templateUrl: './responsible.component.html',\n  styleUrls: ['./responsible.component.css']\n})\nexport class ResponsibleComponent implements OnInit {\n\n  @Input() process: Process;\n\n  allResponsibleTypes: ResponsibleType[] = [];\n  showingResponsibleTypes: ResponsibleType[] = [];\n  _processItem: ProcessItem;\n\n  groups: Group[] = [];\n  users: User[] = [];\n  selectedUserIds = [];\n\n\n  private fieldChangeSubscription: Subscription;\n\n  groupAssignOptions: GroupAssignOption[] = [];\n\n  _selectedGroupIds = [];\n  get selectedGroupIds() {\n    return this._selectedGroupIds;\n  }\n  set selectedGroupIds(value: any[]) {\n    console.log('value setter', value);\n    this._selectedGroupIds = value;\n    this.assignMultiselectValues(this.stepItem.responsible, 'groups', 'groupId', this.groups, value, null);\n  }\n\n  constructor(\n    private userGroupService: UserGroupService\n  ) { }\n\n  async ngOnInit() {\n    this.groups = await this.userGroupService.getGroups();\n    this.users = await this.userGroupService.getUsers();\n    this.groupAssignOptions = await this.userGroupService.getGroupAssignOptions();\n    this.allResponsibleTypes = this.userGroupService.getResponsibleTypes();\n\n    this.subscribeFieldChanges();\n\n    this.initialise_Responsible_MultipleSelection_Variables();\n    this.setShowingResponsibleTypes();\n  }\n\n  get stepItem(): StepItem {\n    return this.processItem as StepItem;\n  }\n\n  get processItem(): ProcessItem {\n    return this._processItem;\n  }\n\n  @Input() set processItem(value: ProcessItem) {\n\n    if (this._processItem == value) {\n      return;\n    }\n\n    this._processItem = value;\n\n    // TODO: only if it is step item\n    // TODO: explain why we make this call\n    // TODO: are you handling null \"value\" here?\n    this.initialise_Responsible_MultipleSelection_Variables();\n    this.setShowingResponsibleTypes();\n  }\n\n  // TODO: move to a base component?\n  assignMultiselectValues(\n    parentObjectOfModel: any,\n    fieldNameOfModel: string,\n    idFieldNameInModel: string,\n    selectableListOfItems: any[],\n    selectedItemIds: any[],\n    event: any\n  ) {\n    console.log(event)\n    // TODO: handling a selected object which is not present in the list?\n    const selectedItems = selectableListOfItems.filter(\n      item =>\n        selectedItemIds.some(selectedItemId =>\n          selectedItemId === item[idFieldNameInModel]));\n\n    parentObjectOfModel[fieldNameOfModel] = selectedItems;\n  }\n\n  initialise_Responsible_MultipleSelection_Variables() {\n    this.selectedUserIds = (this.stepItem?.responsible?.users ?? []).map(u => u.userId);\n    this.selectedGroupIds = (this.stepItem?.responsible?.groups ?? []).map(g => g.groupId);\n  }\n\n  setShowingResponsibleTypes(): void {\n\n    this.showingResponsibleTypes =\n      this.allResponsibleTypes.filter(rt => !rt.isAdvancedOption || this.stepItem?.responsible?.visualState?.showAdvancedOptions);\n  }\n\n  get showAdvancedResponsibleTypes(): boolean {\n    return this.stepItem?.responsible?.visualState?.showAdvancedOptions;\n  }\n\n  set showAdvancedResponsibleTypes(value: boolean) {\n    this.stepItem.responsible.visualState.showAdvancedOptions = value;\n    this.setShowingResponsibleTypes();\n  }\n\n\n  subscribeFieldChanges() {\n    this.updateEnabledResponsibleTypes();\n\n    this.fieldChangeSubscription =\n      this.process.fields.subscribe(fc => {\n        // TODO: this should be centralized and not handled in component.\n        this.updateEnabledResponsibleTypes();\n      });\n  }\n\n  updateEnabledResponsibleTypes() {\n    this.allResponsibleTypes.forEach(rt => {\n      rt.visualState.enabled = true;\n\n      const groupFieldSelectionWithNoGroupField =\n        rt.code === 'groupFromField' &&\n        this.process.groupTypeFields.length === 0;\n\n      const userFieldSelectionWithNoUserField =\n        rt.code === 'userFromField' &&\n        this.process.userTypeFields.length === 0;\n\n      const groupListSelectionWithNoRelevantField =\n        rt.code === 'groupListFromField' &&\n        this.process.multipleGroupTypeFields.length === 0;\n\n      const userListWithSelectionNoRelevantField =\n        rt.code === 'userListFromField' &&\n        this.process.multipleUserTypeFields.length === 0;\n\n      if (groupFieldSelectionWithNoGroupField ||\n        userFieldSelectionWithNoUserField ||\n        groupListSelectionWithNoRelevantField ||\n        userListWithSelectionNoRelevantField) {\n        rt.visualState.enabled = false;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe();\n  }\n\n  unsubscribe() {\n    this.fieldChangeSubscription?.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\n\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSnackBarModule,\r\n    MatSidenavModule,\r\n    MatProgressBarModule,\r\n    MatListModule,\r\n    MatCheckboxModule,\r\n    MatButtonToggleModule\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { BehaviorSubject, Observable, Subscription } from \"rxjs\";\r\n\r\ntype ChangeMode = 'added' | 'removed' | 'initialized' | 'orderChanged' | 'itemPropertyChanged';\r\n\r\nexport class ArrayChanged<T>{\r\n  constructor(\r\n    public array: T[],\r\n    public changeMode: ChangeMode,\r\n    public changedValue: T,\r\n    public sender: any,\r\n    public itemPropertyChanged: PC<T>) { }\r\n}\r\n\r\nexport interface IPropertyChanged<T> {\r\n  propertyChanged: Observable<PC<T>>;\r\n}\r\n\r\n// create a subject implementation returning observable\r\n// and we use it in implementing IPropertyChanged\r\n// this should filter repeating values\r\n// also something to make assignment easier\r\n// this._val = obsimplementation.setvalue(newvalue, this._val)\r\n// it will check if values same, if same no fire, and return new value\r\n\r\nexport class ObservableArray<T extends IPropertyChanged<T>> extends BehaviorSubject<ArrayChanged<T>>{\r\n  constructor(private owner: any) {\r\n    super(new ArrayChanged<T>([], 'initialized', null, owner, null));\r\n  }\r\n\r\n  itemSubscriptions = new Map<T, Subscription>();\r\n\r\n  getArray(): T[] {\r\n    return super.value.array;\r\n  }\r\n\r\n  addItem(item: T) {\r\n    const newArray = [...super.value.array, item];\r\n\r\n    this.subscribeItem(item);\r\n\r\n    super.next(new ArrayChanged(newArray, 'added', item, super.value.sender, null));\r\n  }\r\n\r\n  removeItem(item: T) {\r\n    const newArray = super.value.array.filter(i => i != item);\r\n\r\n    this.unSubscribeItem(item);\r\n\r\n    super.next(new ArrayChanged(newArray, 'removed', item, super.value.sender, null));\r\n  }\r\n\r\n  updateOrder(array: T[]) {\r\n    // TODO: check if same set of values sent.\r\n\r\n    let orderChangeExist = false;\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (super.value.array[i] != array[i]) {\r\n        orderChangeExist = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (orderChangeExist) {\r\n      super.next(new ArrayChanged(array, 'orderChanged', null, super.value.sender, null));\r\n    }\r\n  }\r\n\r\n  private subscribeItem(item: T) {\r\n    const subscription = item.propertyChanged.subscribe(propertyChanged => {\r\n\r\n      super.next(new ArrayChanged(super.value.array, 'itemPropertyChanged', propertyChanged.sender, this.owner, propertyChanged));\r\n\r\n    });\r\n\r\n    this.itemSubscriptions.set(item, subscription);\r\n  }\r\n\r\n  private unSubscribeItem(item: T) {\r\n    const subscription = this.itemSubscriptions.get(item);\r\n    subscription.unsubscribe();\r\n    this.itemSubscriptions.delete(item);\r\n  }\r\n}\r\n\r\nexport const nameof = <T>(name: keyof T) => name;\r\n\r\nexport class PC<T> {\r\n  constructor(\r\n    public propertyName: keyof T,\r\n    public newValue: any,\r\n    public oldValue: any,\r\n    public sender: any\r\n  ) { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DropDownListModule, ListBoxModule, MultiSelectModule } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\r\nimport { TextBoxModule } from '@syncfusion/ej2-angular-inputs';\r\nimport { SidebarModule } from '@syncfusion/ej2-angular-navigations';\r\nimport { DatePickerModule } from '@syncfusion/ej2-angular-calendars';\r\n\r\n\r\n@NgModule({\r\n  exports: [\r\n    DropDownListModule,\r\n    ListBoxModule,\r\n    MultiSelectModule,\r\n    CheckBoxModule,\r\n    TextBoxModule,\r\n    DatePickerModule,\r\n  ]\r\n})\r\nexport class UiControlsModule { }\r\n","export class GroupAssignOption {\r\n  constructor(public optionCode: string, public optionText: string, public optionTooltip: string) {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnackBarService {\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  open(message: string, duration?: number) {\r\n\r\n    duration = duration ?? 2000;\r\n\r\n    const matSnackBarConfig = { duration } as MatSnackBarConfig;\r\n\r\n    this.snackBar.open(message, null, matSnackBarConfig);\r\n  }\r\n}\r\n","<div *ngIf=\"!field.isReadOnly\">\r\n  <ejs-datepicker\r\n    format='dd MMMM yyyy'\r\n    [formControl]=\"field.formControl\"\r\n    [placeholder]=\"field.fieldName\"\r\n    floatLabelType=\"Always\"\r\n    cssClass=\"e-outline\"\r\n    [allowEdit]=\"false\"\r\n  ></ejs-datepicker>\r\n</div>\r\n\r\n<div *ngIf=\"field.isReadOnly\">\r\n  <div class=\"read-only-label\">{{field.fieldName}}</div>\r\n  <div class=\"read-only-value\">{{field.fieldValue | _date }}</div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { RenderingField } from '../../form/form.component';\r\n\r\n@Component({\r\n  selector: 'app-date-field',\r\n  templateUrl: './date-field.component.html',\r\n  styleUrls: ['./date-field.component.css']\r\n})\r\nexport class DateFieldComponent implements OnInit {\r\n\r\n  @Input() field: RenderingField;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","import { Group } from './Group';\r\nimport { ResponsibleVisualState } from './ResponsibleVisualState';\r\nimport { User } from './User';\r\nimport { GroupAssignOption } from './GroupAssignOption';\r\nimport { Field } from '../Field/Field';\r\nimport { ResponsibleType } from './ResponsibleType';\r\nimport { ProcessStarterType, ProcessStarterTypeCode } from './ProcessStarterType';\r\nimport { ProcessStarterVisualState } from './ProcessStarterVisualState';\r\n\r\nexport class ProcessStarter {\r\n  constructor(\r\n    public processStarterType: ProcessStarterType,\r\n    public groups: Group[] = []\r\n  ) {\r\n\r\n    this.visualState = new ProcessStarterVisualState(this);\r\n  }\r\n\r\n  visualState: ProcessStarterVisualState;\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { FieldType } from '../../common/Models/Field/FieldType';\r\nimport { Group } from '../../common/Models/Responsible/Group';\r\nimport { User } from '../../common/Models/Responsible/User';\r\nimport { GroupAssignOption } from '../../common/Models/Responsible/GroupAssignOption';\r\nimport { ResponsibleType } from '../../common/Models/Responsible/ResponsibleType';\r\nimport { ProcessStarterType, ProcessStarterTypeCode } from 'src/app/common/Models/Responsible/ProcessStarterType';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserGroupService {\r\n\r\n  constructor() { }\r\n\r\n  async getGroups(): Promise<Group[]> {\r\n    return [\r\n      new Group('Finance', 'F9zVhZ'),\r\n      new Group('Accounting', '9JtbS9'),\r\n      new Group('Sales', 'OABlv4'),\r\n      new Group('Product Development 1', 'nYaVF8'),\r\n      new Group('Product Development 2', 'wcYC3s'),\r\n    ];\r\n  }\r\n\r\n  async getUsers(): Promise<User[]> {\r\n    return [\r\n      new User('Omer Kucuk', '9c44bz'),\r\n      new User('Baris Belgic', 'a'),\r\n      new User('Alperen Belgic', 'b'),\r\n      new User('Kemalettin Tugcu', 'c'),\r\n      new User('Fazil Husnu Daglarca', 'd'),\r\n      new User('Tacsiz Kral Pele', 'e'),\r\n      new User('Ringo Siseler', 'f'),\r\n      new User('a', 'g'),\r\n      new User('b', '3'),\r\n      new User('c', '4'),\r\n      new User('d', '6'),\r\n      new User('e', '5'),\r\n      new User('f', '8'),\r\n      new User('ag', '7'),\r\n      new User('bg', '9'),\r\n      new User('cg', 'aaa'),\r\n      new User('dg', 'sss'),\r\n      new User('eg', 'ddd'),\r\n      new User('fg', '9c44bz1'),\r\n      new User('gSg', '9c44b11z'),\r\n    ];\r\n  }\r\n\r\n\r\n  getGroupAssignOptions(): GroupAssignOption[] {\r\n    return [\r\n      new GroupAssignOption(\r\n        'PulledManually',\r\n        'A member of the group will manually pull the step.',\r\n        'When this step is reached, the step will be available to any member to pull and work'),\r\n\r\n      new GroupAssignOption(\r\n        'AssignRandomly',\r\n        'The step will automatically be assigned to a member.',\r\n        'When this step is reached, the system will assign this step to a random member automatically'),\r\n\r\n\r\n\r\n    ];\r\n\r\n  }\r\n\r\n  getDefaultGroupAssignOption(): GroupAssignOption {\r\n\r\n    return this.getGroupAssignOptions().find(gao => gao.optionCode === 'PulledManually');\r\n\r\n  }\r\n\r\n  getProcessStarterTypes(): ProcessStarterType[] {\r\n    return [\r\n      {\r\n        code: 'anyone',\r\n        name: 'Anyone can start',\r\n        tooltip: 'Anyone can start',\r\n        visualState: { enabled: true }\r\n      },\r\n      {\r\n        code: 'groupList',\r\n        name: 'Users from selected groups can start',\r\n        tooltip: 'Users from selected groups can start.',\r\n        visualState: { enabled: true }\r\n      },\r\n    ];\r\n  }\r\n\r\n  getDefaultProcessStarter(): ProcessStarterType {\r\n\r\n    return this.getProcessStarterTypes()[0];\r\n\r\n  }\r\n\r\n  getResponsibleTypes(): ResponsibleType[] {\r\n    return [\r\n      {\r\n        code: 'group',\r\n        name: 'Assign to a group',\r\n        tooltip: 'This step will be assigned to a user from the group you select. ',\r\n        isAdvancedOption: false,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'user',\r\n        name: 'Assign to a specific user',\r\n        tooltip: 'The step will be assigned to the user you select.',\r\n        isAdvancedOption: false,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'manager',\r\n        name: 'Assign to the manager',\r\n        tooltip: 'This step will be assigned to the manager of the previous action user.',\r\n        isAdvancedOption: false,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'groupList',\r\n        name: 'Assign to multiple groups parallelly',\r\n        tooltip: 'Multiple steps will be assigned to groups you select.',\r\n        isAdvancedOption: true,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'userList',\r\n        name: 'Assign to multiple users parallelly',\r\n        tooltip: 'Multiple steps will be assigned users you select.',\r\n        isAdvancedOption: true,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'userFromField',\r\n        name: 'Assign to the user selected in a user field',\r\n        tooltip: 'The step will be assigned to the user selected in a field from a previous step.',\r\n        isAdvancedOption: true,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'groupFromField',\r\n        name: 'Assign to the group selected in a group field',\r\n        tooltip: 'The step will be assigned to the group who is selected in a field from a previous step.',\r\n        isAdvancedOption: true,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'userListFromField',\r\n        name: 'Assign to multiple users selected in a multiple selection user field',\r\n        tooltip: 'Multiple steps will be assigned parallelly to users selected in a multi selection user field from a previous step.',\r\n        isAdvancedOption: true,\r\n        visualState: { enabled: true },\r\n      },\r\n      {\r\n        code: 'groupListFromField',\r\n        name: 'Assign to multiple groups selected in a multiple selection group field',\r\n        tooltip: 'Multiple steps will be assigned parallelly to groups selected in a multi selection group field from a previous step.',\r\n        isAdvancedOption: true,\r\n        visualState: { enabled: true },\r\n      },\r\n\r\n    ];\r\n  }\r\n\r\n  getDefaultResponsibleType(): ResponsibleType {\r\n    return this.getResponsibleTypes()[0];\r\n  }\r\n}\r\n\r\n","import { ProcessItemComponent } from 'src/app/components/process-item/process-item.component';\r\nimport { ProcessItem } from './ProcessItem';\r\n\r\nexport class ProcessItemVisualState {\r\n\r\n  constructor(private processItem: ProcessItem) {\r\n\r\n  }\r\n\r\n  visible = false;\r\n\r\n  leftPxBeforeMove = 0;\r\n  topPxBeforeMove = 0;\r\n\r\n  isSelected = false;\r\n  component: ProcessItemComponent;\r\n\r\n  get width(): number {\r\n\r\n    return this.component?.getWidth() ?? 0;\r\n  }\r\n\r\n  get height(): number {\r\n    return this.component?.getHeight() ?? 0;\r\n  }\r\n\r\n\r\n  get middleX(): number {\r\n    return this.processItem.leftPx + ((this.component?.getWidth() ?? 0) / 2);\r\n  }\r\n\r\n  get middleY(): number {\r\n    return this.processItem.topPx + ((this.component?.getHeight() ?? 0) / 2);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FieldType } from '../../common/Models/Field/FieldType';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FieldTypeService {\r\n\r\n  constructor() { }\r\n\r\n  async getFieldTypes(): Promise<FieldType[]> {\r\n    return [\r\n\r\n      { name: 'Text', code: 'text' },\r\n      { name: 'Numeric', code: 'numeric' },\r\n      { name: 'Date', code: 'date' },\r\n      { name: 'Checkbox', code: 'checkbox' },\r\n      { name: 'File', code: 'file' },\r\n      { name: 'User', code: 'user' },\r\n      { name: 'Group', code: 'group' },\r\n\r\n    ];\r\n  }\r\n}\r\n","import { ProcessItem } from './ProcessItem';\r\n\r\nexport class ConditionItem extends ProcessItem {\r\n\r\n  public constructor(\r\n    id: string,\r\n    public justCreatedOnInterface: boolean,\r\n    retrievedFromServer: boolean = false,\r\n    conditionName: string,\r\n    topPx: number,\r\n    leftPx: number) {\r\n    super(id, justCreatedOnInterface, retrievedFromServer, topPx, leftPx, conditionName);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { SnackBarService } from '../UI/snack-bar.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private snackBar: SnackBarService\r\n  ) { }\r\n\r\n\r\n  private loggedIn = new BehaviorSubject<boolean>(true);\r\n\r\n  get isLoggedIn() {\r\n    return this.loggedIn.asObservable();\r\n  }\r\n\r\n  login(userName: string, password: string) {\r\n    if ([\r\n      '9296A486-5D25-4A40-97BA-F67CB6FBBBCC',\r\n      '208DDB53-FDF0-41C8-A2F1-535E975CED22',\r\n      '83B203D7-2030-4788-BE40-CB153563A979',\r\n      'C06960E7-203F-4265-85BA-A0B59863B82D'\r\n    ].some(i => i === userName)) {\r\n      localStorage.setItem('temp_user_id', userName);\r\n      this.loggedIn.next(true);\r\n      this.router.navigate(['/']);\r\n    }\r\n    else {\r\n      localStorage.setItem('temp_user_id', '');\r\n      this.snackBar.open('Invalid user id.');\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.loggedIn.next(false);\r\n    this.router.navigate(['/Login']);\r\n  }\r\n}\r\n","<div *ngIf=\"!field.isReadOnly\">\r\n  <ejs-textbox\r\n    [placeholder]=\"field.fieldName\"\r\n    floatLabelType=\"Always\"\r\n    [multiline]='true'\r\n    cssClass=\"e-outline\"\r\n    [formControl]=\"field.formControl\"\r\n  ></ejs-textbox>\r\n</div>\r\n\r\n<div *ngIf=\"field.isReadOnly\">\r\n  <div class=\"read-only-label\">{{field.fieldName}}</div>\r\n  <div class=\"read-only-value\">{{field.fieldValue }}</div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { RenderingField } from '../../form/form.component';\r\n\r\n@Component({\r\n  selector: 'app-text-field',\r\n  templateUrl: './text-field.component.html',\r\n  styleUrls: ['./text-field.component.css']\r\n})\r\nexport class TextFieldComponent implements OnInit {\r\n\r\n  @Input() field: RenderingField;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebService {\r\n\r\n  constructor(\r\n    private httpService: HttpService\r\n  ) { }\r\n\r\n  public GetProcessesQuery(): Observable<any> {\r\n    const endPoint = '/GetProcessesQuery/Get';\r\n    return this.httpService.get(endPoint);\r\n  }\r\n\r\n  public StartNewProcessCommand(ProcessId: string): Observable<any> {\r\n    const endPoint = '/StartNewProcessCommand/Post';\r\n    return this.httpService.post(endPoint, { ProcessId });\r\n  }\r\n\r\n  public SendUserActionCommand(\r\n    ProcessId: string,\r\n    ProcessInstanceId: string,\r\n    TaskInstanceId: string,\r\n    ActionId: string,\r\n    Notes: string,\r\n    DateFormValues: object,\r\n    TextFormValues: object): Observable<ServiceResult<any>> {\r\n    const endPoint = '/SendUserActionCommand/Post';\r\n    return this.httpService.post(\r\n      endPoint, { ProcessId, ProcessInstanceId, TaskInstanceId, ActionId, Notes, DateFormValues, TextFormValues });\r\n  }\r\n\r\n  public GetTaskInstanceQuery(ProcessId: string, ProcessInstanceId: string, TaskInstanceId: string): Observable<any> {\r\n    const endPoint = '/GetTaskInstanceQuery/Get';\r\n    return this.httpService.getByParams(endPoint, { ProcessId, ProcessInstanceId, TaskInstanceId });\r\n  }\r\n\r\n  public PullTaskFromGroupCommand(ProcessId: string, ProcessInstanceId: string, TaskInstanceId: string): Observable<any> {\r\n    const endPoint = '/PullTaskFromGroupCommand/Post';\r\n    return this.httpService.post(endPoint, { ProcessId, ProcessInstanceId, TaskInstanceId });\r\n  }\r\n\r\n  public GetUserTaskInstancesQuery() {\r\n    const endPoint = '/GetUserTaskInstancesQuery/Get';\r\n    return this.httpService.get(endPoint);\r\n  }\r\n\r\n}\r\n\r\nexport class ServiceResult<T>{\r\n  Value: T;\r\n\r\n  Successful: boolean;\r\n  IsBreakingError: boolean; // I don't exactly remember the purpose but, should be, business error or exception distinction.\r\n  OperationErrors: OperationErrorInformation[];\r\n}\r\n\r\nexport class OperationErrorInformation {\r\n  ErrorCode: string;\r\n  ErrorMessage: string;\r\n}\r\n\r\nexport class SendUserActionErrorCodes {\r\n  public static readonly InvalidFormValues = 'InvalidFormValues';\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EditTaskComponent } from './components/edit-task/edit-task.component';\r\nimport { ListProcessesComponent } from './components/list-processes/list-processes.component';\r\nimport { ListTasksComponent } from './components/list-tasks/list-tasks.component';\r\nimport { MyGroupsTasksComponent } from './components/my-groups-tasks/my-groups-tasks.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AuthGuard } from './services/Auth/auth.guard';\r\nimport { ProcessDesignerComponent } from './components/process-designer/process-designer.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    canActivate: [AuthGuard],\r\n    canActivateChild: [AuthGuard],\r\n    children: [\r\n      { path: '', component: ListProcessesComponent },\r\n      { path: 'NewProcess/:processId', component: EditTaskComponent },\r\n      { path: 'EditTask/:processId/:processInstanceId/:taskInstanceId', component: EditTaskComponent },\r\n      { path: 'MyInbox', component: ListTasksComponent },\r\n      { path: 'MyGroupsInbox', component: MyGroupsTasksComponent },\r\n      { path: 'Login', component: LoginComponent },\r\n      { path: 'ProcessDesigner', component: ProcessDesignerComponent }\r\n\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  //imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })], // this is corrected version of upgrade to v11. I wanted to keep default value. I keep this line for a while to observe if it is fine.\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, ValidatorFn } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormComponent implements OnInit {\r\n\r\n  @Input() form: any;\r\n\r\n  fields: RenderingField[] = [];\r\n\r\n  formGroup: FormGroup;\r\n\r\n  @Output() formValid = new EventEmitter<boolean>();\r\n\r\n  constructor(private cd: ChangeDetectorRef) { }\r\n\r\n  getValue(fieldFromBackend: any): any {\r\n\r\n    if (fieldFromBackend.FieldValue == null) {\r\n      return null;\r\n    }\r\n\r\n    if (fieldFromBackend.FieldType === 'Date') {\r\n\r\n      try {\r\n        const numbers: any[] = fieldFromBackend.FieldValue;\r\n        const year = numbers[0] as number;\r\n        const month = (numbers[1] as number) - 1;\r\n        const day = numbers[2] as number;\r\n\r\n        return new Date(year, month, day);\r\n      } catch {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    return fieldFromBackend.FieldValue;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.form?.Fields == null) {\r\n      return;\r\n    }\r\n\r\n    this.fields =\r\n      (this.form.Fields as any[]).map(f => {\r\n        const field = new RenderingField();\r\n        field.fieldId = f.FieldId;\r\n        field.fieldName = f.FieldName;\r\n        field.fieldType = f.FieldType;\r\n        field.isReadOnly = f.ReadOnly;\r\n        field.isRequired = f.Validation.IsRequired;\r\n        field.fieldValue = this.getValue(f);\r\n\r\n        return field;\r\n      });\r\n\r\n    this.formGroup = new FormGroup({});\r\n\r\n    this.fields.forEach(field => {\r\n      this.formGroup.addControl(field.fieldName, field.formControl);\r\n    });\r\n\r\n    this.cd.detectChanges();\r\n\r\n    this.formValid.next(this.formGroup.valid);\r\n\r\n    this.formGroup.valueChanges.subscribe({\r\n      next: v => {\r\n\r\n        this.formValid.next(this.formGroup.valid);\r\n\r\n        this.cd.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  getReturningForm(): ReturningForm {\r\n    const returningForm = new ReturningForm();\r\n\r\n    this.fields.forEach(f => {\r\n      if (f.fieldType === 'Date') {\r\n        // Date values are kept as DateTime (containing date and time parts)\r\n        // and they are considered in local time at midnight\r\n        // They are converted to UTC.\r\n        // and in some local time zones (such as BST) they have yesterday's Date after conversion\r\n        // In order to prevent this, we pass them as integer arrays as [year, month(January=1), day]\r\n        let dateValueArray: number[] = null;\r\n\r\n        if (f.fieldValue != null) {\r\n          const dateValue: Date = f.fieldValue as Date;\r\n          dateValueArray = [dateValue.getFullYear(), dateValue.getMonth() + 1, dateValue.getDate()];\r\n        }\r\n\r\n        returningForm.DateValues[f.fieldId] = dateValueArray;\r\n      }\r\n      else if (f.fieldType === 'Text') {\r\n        returningForm.TextValues[f.fieldId] = f.fieldValue;\r\n      }\r\n    });\r\n\r\n    return returningForm;\r\n  }\r\n}\r\n\r\nexport class ReturningForm {\r\n  DateValues: any = {};\r\n  TextValues: any = {};\r\n}\r\n\r\nexport class RenderingField {\r\n\r\n  constructor() {\r\n    this._formControl = new FormControl();\r\n\r\n    this.formControl.valueChanges.subscribe({\r\n      next: v => {\r\n        // if form control triggers a change we set the field (not the property)\r\n        // the property setter also sets to the formControl\r\n\r\n        if (this._fieldValue !== v) {\r\n          this._fieldValue = v;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  fieldId: string;\r\n  _fieldName: string='';\r\n  get fieldName(): string{\r\n      return this._fieldName;\r\n  }\r\n  set fieldName(value:string){\r\n      this._fieldName = value;\r\n  }\r\n  fieldType: string;\r\n  isReadOnly: boolean;\r\n\r\n  private _fieldValue: any = null;\r\n  get fieldValue(): any {\r\n    return this._fieldValue;\r\n  }\r\n  set fieldValue(value: any) {\r\n    if (this._fieldValue !== value) {\r\n      this._fieldValue = value;\r\n      this.formControl.setValue(value);\r\n    }\r\n  }\r\n\r\n  private _formControl: FormControl;\r\n  get formControl(): FormControl {\r\n    return this._formControl;\r\n  }\r\n\r\n  private _isRequired: boolean = false;\r\n  get isRequired(): boolean {\r\n    return this._isRequired;\r\n  }\r\n  set isRequired(value: boolean) {\r\n    this._isRequired = value;\r\n\r\n    // call this for any validation change\r\n    this.updateValidators();\r\n\r\n  }\r\n\r\n  // mobile specific\r\n  get visibleFieldName(): string {\r\n      return this.fieldName + (this.isRequired ? \" *\":\"\");\r\n  }\r\n\r\n  updateValidators() {\r\n    this._formControl.clearValidators();\r\n\r\n    const validators: ValidatorFn[] = [];\r\n\r\n    if (this._isRequired) {\r\n      validators.push(Validators.required);\r\n    }\r\n\r\n    if (validators.length > 0) {\r\n      this._formControl.setValidators(validators);\r\n    }\r\n\r\n    this._formControl.updateValueAndValidity();\r\n  }\r\n}\r\n","<div\r\n  *ngFor=\"let field of fields\"\r\n  class=\"field-wrapper\"\r\n>\r\n  <app-generic-field [field]=\"field\"></app-generic-field>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RandomIdGenerator {\r\n  generate(): string {\r\n    return Math.random().toString(36).substr(2, 9);\r\n  }\r\n}\r\n","import { enableProdMode, LOCALE_ID } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule, {\r\n  providers: [{ provide: LOCALE_ID, useValue: 'en-GB' }]\r\n})\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}